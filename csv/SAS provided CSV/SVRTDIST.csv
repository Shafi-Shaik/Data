_Key_,Owner,Sequence,Type,Subtype,Name,Continue,NValue,Encoded,Value
UTILITY,CMP,0.0,Header,Package,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.216</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:43]]></S><S n=""SubType""><![CDATA[Package]]></S><N n=""Obfuscate"">0</N></L>"
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,0.0,Prototype,FCmp,utility,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[SVRTUTIL_EMPLIMMOMENT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[k]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[u]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n"
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,1.0,Prototype,FCmp,utility,1.0,,,"]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32"
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,2.0,Prototype,FCmp,utility,2.0,,,"</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,3.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.267</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:43]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[utility]]></S></L>"
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,4.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function SVRTUTIL_EMPLIMMOMENT(k, u, dim, x[*], F[*], Ftype);"
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,5.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(k) or missing(u)) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,6.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,7.0,Statement Source,Executable,IF,0.0,2.0,,if (k < 1) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,8.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,9.0,Statement Source,Executable,ASSIGN,0.0,1.0,,eps = 2.220446E-16;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,10.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,11.0,Statement Source,Executable,IF,0.0,2.0,,if (u < x[1]-eps) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,12.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,13.0,Statement Source,Executable,ASSIGN,0.0,1.0,,elm = u**k;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,14.0,Statement Source,Executable,GO,0.0,5.0,,go to doneELMOM;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,15.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,16.0,Statement Source,Executable,ASSIGN,0.0,1.0,,kp1 = k+1;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,17.0,Statement Source,Executable,ASSIGN,0.0,1.0,,kokp1 = k/(k+1);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,18.0,Statement Source,Executable,ASSIGN,0.0,1.0,,elm = x[1]**k;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,19.0,Statement Source,Executable,IF,0.0,2.0,,if (Ftype = 1 or Ftype = 2) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,20.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,21.0,Statement Source,Comment,CMT,0.0,101.0,,/* individual data */
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,22.0,Statement Source,Executable,DO,0.0,3.0,,do i = 1 to dim-1;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,23.0,Statement Source,Executable,IF,0.0,2.0,,if (u <= x[i]+eps) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,24.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,25.0,Statement Source,Executable,GO,0.0,5.0,,go to doneELMOM;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,26.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,27.0,Statement Source,Executable,IF,0.0,2.0,,if (u < x[i+1]-eps) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,28.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,29.0,Statement Source,Executable,ASSIGN,0.0,1.0,,elm = elm + (1-F[i])*(u**k - x[i]**k);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,30.0,Statement Source,Executable,GO,0.0,5.0,,go to doneELMOM;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,31.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,32.0,Statement Source,Comment,CMT,0.0,101.0,,/* u >= x[i+1] */
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,33.0,Statement Source,Executable,ASSIGN,0.0,1.0,,elm = elm + (1-F[i])*(x[i+1]**k - x[i]**k);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,34.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,35.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,36.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,37.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,38.0,Statement Source,Comment,CMT,0.0,101.0,,/* grouped data */
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,39.0,Statement Source,Executable,DO,0.0,3.0,,do i = 1 to dim-1;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,40.0,Statement Source,Executable,IF,0.0,2.0,,if (u <= x[i]+eps) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,41.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,42.0,Statement Source,Executable,GO,0.0,5.0,,go to doneELMOM;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,43.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,44.0,Statement Source,Executable,IF,0.0,2.0,,if (x[i+1] > x[i]+eps) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,45.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,46.0,Statement Source,Executable,ASSIGN,0.0,1.0,,si = (F[i+1]-F[i])/(x[i+1]-x[i]);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,47.0,Statement Source,Executable,IF,0.0,2.0,,if (si > eps) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,48.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,49.0,Statement Source,Executable,IF,0.0,2.0,,if (u < x[i+1]-eps) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,50.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,51.0,Statement Source,Executable,ASSIGN,0.0,1.0,,elm = elm + (1-F[i]+si*x[i])*(u**k - x[i]**k) - si*kokp1*(u**kp1 - x[i]**kp1);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,52.0,Statement Source,Executable,GO,0.0,5.0,,go to doneELMOM;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,53.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,54.0,Statement Source,Comment,CMT,0.0,101.0,,/* u >= x[i+1] */
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,55.0,Statement Source,Executable,ASSIGN,0.0,1.0,,elm = elm + (1-F[i]+si*x[i])*(x[i+1]**k - x[i]**k) - si*kokp1*(x[i+1]**kp1 - x[i]**kp1);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,56.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,57.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,58.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,59.0,Statement Source,Comment,CMT,0.0,101.0,,/* si=0 */
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,60.0,Statement Source,Executable,IF,0.0,2.0,,if (u < x[i+1]-eps) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,61.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,62.0,Statement Source,Executable,ASSIGN,0.0,1.0,,elm = elm + (1-F[i])*(u**k - x[i]**k);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,63.0,Statement Source,Executable,GO,0.0,5.0,,go to doneELMOM;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,64.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,65.0,Statement Source,Comment,CMT,0.0,101.0,,/* u >= x[i+1] */
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,66.0,Statement Source,Executable,ASSIGN,0.0,1.0,,elm = elm + (1-F[i])*(x[i+1]**k - x[i]**k);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,67.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,68.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,69.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,70.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,71.0,Statement Source,Executable,IF,0.0,2.0,,if (u > x[dim]+eps) then
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,72.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,73.0,Statement Source,Executable,ASSIGN,0.0,1.0,,elm = elm + (1-F[dim])*(u**k - x[dim]**k);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,74.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,75.0,Statement Source,Executable,RETURN,0.0,1.0,,doneELMOM: return(elm);
F.UTILITY.SVRTUTIL_EMPLIMMOMENT,CMP,76.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.UTILITY.SVRTUTIL_EDF,CMP,77.0,Prototype,FCmp,utility,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[SVRTUTIL_EDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[y]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N"
F.UTILITY.SVRTUTIL_EDF,CMP,78.0,Prototype,FCmp,utility,1.0,,,"n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxL"
F.UTILITY.SVRTUTIL_EDF,CMP,79.0,Prototype,FCmp,utility,2.0,,,"ag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.UTILITY.SVRTUTIL_EDF,CMP,80.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                   1790266003.27</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:43]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[utility]]></S></L>"
F.UTILITY.SVRTUTIL_EDF,CMP,81.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function SVRTUTIL_EDF(y, dim, x[*], F[*], Ftype);"
F.UTILITY.SVRTUTIL_EDF,CMP,82.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(y)) then
F.UTILITY.SVRTUTIL_EDF,CMP,83.0,Statement Source,Executable,RETURN,0.0,1.0,,return(.);
F.UTILITY.SVRTUTIL_EDF,CMP,84.0,Statement Source,Executable,ASSIGN,0.0,1.0,,eps = 2.220446E-16;
F.UTILITY.SVRTUTIL_EDF,CMP,85.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.UTILITY.SVRTUTIL_EDF,CMP,86.0,Statement Source,Executable,IF,0.0,2.0,,if (Ftype = 1 or Ftype = 2) then
F.UTILITY.SVRTUTIL_EDF,CMP,87.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,88.0,Statement Source,Comment,CMT,0.0,101.0,,/* individual data */
F.UTILITY.SVRTUTIL_EDF,CMP,89.0,Statement Source,Executable,IF,0.0,2.0,,if (y <= x[1]+eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,90.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,91.0,Statement Source,Comment,CMT,0.0,101.0,,/* y <= x[1] */
F.UTILITY.SVRTUTIL_EDF,CMP,92.0,Statement Source,Executable,IF,0.0,2.0,,if (y < x[1]-eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,93.0,Statement Source,Executable,RETURN,0.0,1.0,,/* y < x[1] */ return (0);
F.UTILITY.SVRTUTIL_EDF,CMP,94.0,Statement Source,Comment,CMT,0.0,101.0,,"/* assume F is 0 in [0,x[1]) */"
F.UTILITY.SVRTUTIL_EDF,CMP,95.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EDF,CMP,96.0,Statement Source,Executable,RETURN,0.0,1.0,,/* y = x[1] */ return (F[1]);
F.UTILITY.SVRTUTIL_EDF,CMP,97.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,98.0,Statement Source,Executable,IF,0.0,2.0,,if (y > x[dim]+eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,99.0,Statement Source,Executable,RETURN,0.0,1.0,,/* y > x[dim] */ return (F[dim]);
F.UTILITY.SVRTUTIL_EDF,CMP,100.0,Statement Source,Comment,CMT,0.0,101.0,,/* assume that F is flat after last point */
F.UTILITY.SVRTUTIL_EDF,CMP,101.0,Statement Source,Comment,CMT,0.0,101.0,,"/* at this point, dim > 1 and y is in (x[1], x[dim]] interval */"
F.UTILITY.SVRTUTIL_EDF,CMP,102.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = .;
F.UTILITY.SVRTUTIL_EDF,CMP,103.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ileft = 2;
F.UTILITY.SVRTUTIL_EDF,CMP,104.0,Statement Source,Executable,ASSIGN,0.0,1.0,,iright = dim;
F.UTILITY.SVRTUTIL_EDF,CMP,105.0,Statement Source,Executable,ASSIGN,0.0,1.0,,i = int((dim+2)/2);
F.UTILITY.SVRTUTIL_EDF,CMP,106.0,Statement Source,Executable,DO,0.0,3.0,,do while (i >= 2 and i <= dim);
F.UTILITY.SVRTUTIL_EDF,CMP,107.0,Statement Source,Executable,IF,0.0,2.0,,if (y < x[i]-eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,108.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,109.0,Statement Source,Executable,IF,0.0,2.0,,if (y >= x[i-1]-eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,110.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,111.0,Statement Source,Comment,CMT,0.0,101.0,,/* x[i-1] <= y < x[i] */
F.UTILITY.SVRTUTIL_EDF,CMP,112.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[i-1];
F.UTILITY.SVRTUTIL_EDF,CMP,113.0,Statement Source,Comment,CMT,0.0,101.0,,"/* F is F[i-1] in [x[i-1],x[i]) */"
F.UTILITY.SVRTUTIL_EDF,CMP,114.0,Statement Source,Executable,GO,0.0,5.0,,go to doneEDF;
F.UTILITY.SVRTUTIL_EDF,CMP,115.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,116.0,Statement Source,Comment,CMT,0.0,101.0,,"/* y < x[i-1]; move search to left half of
                        current interval */"
F.UTILITY.SVRTUTIL_EDF,CMP,117.0,Statement Source,Executable,ASSIGN,0.0,1.0,,iright = i-1;
F.UTILITY.SVRTUTIL_EDF,CMP,118.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,119.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EDF,CMP,120.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,121.0,Statement Source,Executable,IF,0.0,2.0,,if (y <= x[i]+eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,122.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,123.0,Statement Source,Comment,CMT,0.0,101.0,,/* y = x[i] */
F.UTILITY.SVRTUTIL_EDF,CMP,124.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[i];
F.UTILITY.SVRTUTIL_EDF,CMP,125.0,Statement Source,Comment,CMT,0.0,101.0,,/* F jumps to F[i] at x[i] */
F.UTILITY.SVRTUTIL_EDF,CMP,126.0,Statement Source,Executable,GO,0.0,5.0,,go to doneEDF;
F.UTILITY.SVRTUTIL_EDF,CMP,127.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,128.0,Statement Source,Comment,CMT,0.0,101.0,,"/* y > x[i]; move search to right half of
                        current interval */"
F.UTILITY.SVRTUTIL_EDF,CMP,129.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ileft = i+1;
F.UTILITY.SVRTUTIL_EDF,CMP,130.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,131.0,Statement Source,Executable,ASSIGN,0.0,1.0,,i = int((ileft+iright)/2);
F.UTILITY.SVRTUTIL_EDF,CMP,132.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,133.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,134.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EDF,CMP,135.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,136.0,Statement Source,Comment,CMT,0.0,101.0,,/* grouped data */
F.UTILITY.SVRTUTIL_EDF,CMP,137.0,Statement Source,Executable,IF,0.0,2.0,,if (y <= x[1]+eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,138.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,139.0,Statement Source,Comment,CMT,0.0,101.0,,/* y <= x[1] */
F.UTILITY.SVRTUTIL_EDF,CMP,140.0,Statement Source,Executable,IF,0.0,2.0,,if (y < x[1]-eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,141.0,Statement Source,Executable,RETURN,0.0,1.0,,/* y < x[1] */ return (0);
F.UTILITY.SVRTUTIL_EDF,CMP,142.0,Statement Source,Comment,CMT,0.0,101.0,,"/* assume F is 0 in [0,x[1]) */"
F.UTILITY.SVRTUTIL_EDF,CMP,143.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EDF,CMP,144.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,145.0,Statement Source,Comment,CMT,0.0,101.0,,/* y = x[1] */
F.UTILITY.SVRTUTIL_EDF,CMP,146.0,Statement Source,Executable,IF,0.0,2.0,,if (1 < dim) then
F.UTILITY.SVRTUTIL_EDF,CMP,147.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,148.0,Statement Source,Executable,IF,0.0,2.0,,if (x[2] <= x[1]+eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,149.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[2];
F.UTILITY.SVRTUTIL_EDF,CMP,150.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EDF,CMP,151.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[1];
F.UTILITY.SVRTUTIL_EDF,CMP,152.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,153.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EDF,CMP,154.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[1];
F.UTILITY.SVRTUTIL_EDF,CMP,155.0,Statement Source,Executable,GO,0.0,5.0,,go to doneEDF;
F.UTILITY.SVRTUTIL_EDF,CMP,156.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,157.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,158.0,Statement Source,Comment,CMT,0.0,101.0,,"/* at this point, dim > 1 and y is in (x[1], x[dim]] interval */"
F.UTILITY.SVRTUTIL_EDF,CMP,159.0,Statement Source,Executable,IF,0.0,2.0,,if (y > x[dim]+eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,160.0,Statement Source,Executable,RETURN,0.0,1.0,,/* y > x[dim] */ return (F[dim]);
F.UTILITY.SVRTUTIL_EDF,CMP,161.0,Statement Source,Comment,CMT,0.0,101.0,,/* assume that F is flat after last point */
F.UTILITY.SVRTUTIL_EDF,CMP,162.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = .;
F.UTILITY.SVRTUTIL_EDF,CMP,163.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ileft = 2;
F.UTILITY.SVRTUTIL_EDF,CMP,164.0,Statement Source,Executable,ASSIGN,0.0,1.0,,iright = dim;
F.UTILITY.SVRTUTIL_EDF,CMP,165.0,Statement Source,Executable,ASSIGN,0.0,1.0,,i = int((dim+2)/2);
F.UTILITY.SVRTUTIL_EDF,CMP,166.0,Statement Source,Executable,DO,0.0,3.0,,do while (i >= 2 and i <= dim);
F.UTILITY.SVRTUTIL_EDF,CMP,167.0,Statement Source,Executable,IF,0.0,2.0,,if (y < x[i]-eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,168.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,169.0,Statement Source,Executable,IF,0.0,2.0,,if (y > x[i-1]+eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,170.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,171.0,Statement Source,Comment,CMT,0.0,101.0,,/* x[i-1] < y < x[i] */
F.UTILITY.SVRTUTIL_EDF,CMP,172.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[i-1] + (y-x[i-1])*(F[i]-F[i-1])/(x[i]-x[i-1]);
F.UTILITY.SVRTUTIL_EDF,CMP,173.0,Statement Source,Executable,GO,0.0,5.0,,go to doneEDF;
F.UTILITY.SVRTUTIL_EDF,CMP,174.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,175.0,Statement Source,Executable,IF,0.0,2.0,,if (y >= x[i-1]-eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,176.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,177.0,Statement Source,Comment,CMT,0.0,101.0,,/* y = x[i-1] */
F.UTILITY.SVRTUTIL_EDF,CMP,178.0,Statement Source,Executable,IF,0.0,2.0,,if (x[i] <= x[i-1]+eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,179.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[i];
F.UTILITY.SVRTUTIL_EDF,CMP,180.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EDF,CMP,181.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[i-1];
F.UTILITY.SVRTUTIL_EDF,CMP,182.0,Statement Source,Executable,GO,0.0,5.0,,go to doneEDF;
F.UTILITY.SVRTUTIL_EDF,CMP,183.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,184.0,Statement Source,Comment,CMT,0.0,101.0,,"/* y < x[i-1]; move search to left half of
                        current interval */"
F.UTILITY.SVRTUTIL_EDF,CMP,185.0,Statement Source,Executable,ASSIGN,0.0,1.0,,iright = i-1;
F.UTILITY.SVRTUTIL_EDF,CMP,186.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,187.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EDF,CMP,188.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,189.0,Statement Source,Executable,IF,0.0,2.0,,if (y <= x[i]+eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,190.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,191.0,Statement Source,Comment,CMT,0.0,101.0,,/* y = x[i] */
F.UTILITY.SVRTUTIL_EDF,CMP,192.0,Statement Source,Executable,IF,0.0,2.0,,if (i < dim) then
F.UTILITY.SVRTUTIL_EDF,CMP,193.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_EDF,CMP,194.0,Statement Source,Executable,IF,0.0,2.0,,if (x[i+1] <= x[i]+eps) then
F.UTILITY.SVRTUTIL_EDF,CMP,195.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[i+1];
F.UTILITY.SVRTUTIL_EDF,CMP,196.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EDF,CMP,197.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[i];
F.UTILITY.SVRTUTIL_EDF,CMP,198.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,199.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_EDF,CMP,200.0,Statement Source,Executable,ASSIGN,0.0,1.0,,edf = F[i];
F.UTILITY.SVRTUTIL_EDF,CMP,201.0,Statement Source,Executable,GO,0.0,5.0,,go to doneEDF;
F.UTILITY.SVRTUTIL_EDF,CMP,202.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,203.0,Statement Source,Comment,CMT,0.0,101.0,,"/* y > x[i]; move search to right half of
                        current interval */"
F.UTILITY.SVRTUTIL_EDF,CMP,204.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ileft = i+1;
F.UTILITY.SVRTUTIL_EDF,CMP,205.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,206.0,Statement Source,Executable,ASSIGN,0.0,1.0,,i = int((ileft+iright)/2);
F.UTILITY.SVRTUTIL_EDF,CMP,207.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,208.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_EDF,CMP,209.0,Statement Source,Executable,RETURN,0.0,1.0,,doneEDF: return(edf);
F.UTILITY.SVRTUTIL_EDF,CMP,210.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,211.0,Prototype,FCmp,utility,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[SVRTUTIL_HILLCUTOFF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[n]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"""
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,212.0,Prototype,FCmp,utility,1.0,,,">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[b]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[s]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[status]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,213.0,Prototype,FCmp,utility,2.0,,,N></L></L></L>
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,214.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.273</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:43]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[utility]]></S></L>"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,215.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function SVRTUTIL_HILLCUTOFF(n, x[*], b, s, status);"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,216.0,Statement Source,Executable,OUTARGS,0.0,14.0,,outargs status;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,217.0,Statement Source,Executable,ASSIGN,0.0,1.0,,status = .;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,218.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_n = int(n);
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,219.0,Statement Source,Executable,IF,0.0,2.0,,if (_n < 6) then
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,220.0,Statement Source,Executable,RETURN,0.0,1.0,,/* argument error */ return (.A);
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,221.0,Statement Source,Comment,CMT,0.0,101.0,,"/* form an internal copy of input array that contains only the
            non-missing, positive values */"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,222.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array _x[1] /nosymbols;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,223.0,Statement Source,Executable,CALL,0.0,4.0,,"call dynamic_array(_x, _n);"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,224.0,Statement Source,Executable,ASSIGN,0.0,1.0,,nvalid = 0;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,225.0,Statement Source,Executable,DO,0.0,3.0,,do ix=1 to _n;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,226.0,Statement Source,Executable,IF,0.0,2.0,,if (not(missing(x[ix])) and x[ix] > 0) then
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,227.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,228.0,Statement Source,Executable,ASSIGN,0.0,1.0,,nvalid = nvalid + 1;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,229.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_x[nvalid] = x[ix];
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,230.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,231.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,232.0,Statement Source,Executable,IF,0.0,2.0,,if (nvalid < m1) then
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,233.0,Statement Source,Executable,RETURN,0.0,1.0,,/* insufficient number of valid values. cannot proceed. */ return (.I);
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,234.0,Statement Source,Comment,CMT,0.0,101.0,,/*------- validate & set b value --------*/
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,235.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_b = int(b);
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,236.0,Statement Source,Executable,IF,0.0,2.0,,if (_b < 10) then
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,237.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_b = 50;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,238.0,Statement Source,Comment,CMT,0.0,101.0,,/* default number of bootstrap samples */
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,239.0,Statement Source,Comment,CMT,0.0,101.0,,"/* following m1low setting ensures that m2 >= sqrt(nvalid);
            alternate is to use int(sqrt(nvalid))+1, but that
            causes m2 to start from close to 1. */"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,240.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"m1low = MAX(2, floor(nvalid**0.75));"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,241.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m1high = nvalid - 1;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,242.0,Statement Source,Executable,IF,0.0,2.0,,if (s < 2) then
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,243.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m1steps = 10;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,244.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,245.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m1steps = s;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,246.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m1incr = int((m1high-m1low)/m1steps)-1;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,247.0,Statement Source,Executable,ASSIGN,0.0,1.0,,minQratio = .;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,248.0,Statement Source,Executable,ASSIGN,0.0,1.0,,kopt = .;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,249.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array samp[1] /nosymbols;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,250.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array mse[1] /nosymbols;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,251.0,Statement Source,Comment,CMT,0.0,101.0,,/*---- iterate over m1 (sample size for the first step) ----*/
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,252.0,Statement Source,Executable,DO,0.0,3.0,,do m1 = m1low to m1high by m1incr;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,253.0,Statement Source,Comment,CMT,0.0,101.0,,/*------- Step 1 (samples of size m1) --------*/
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,254.0,Statement Source,Executable,CALL,0.0,4.0,,"call dynamic_array(samp, m1);"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,255.0,Statement Source,Executable,CALL,0.0,4.0,,"call dynamic_array(mse, m1);"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,256.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"k1 = svrtutil_hillutil_minMSEindex(nvalid, _x, _b, m1, samp, mse, Q1);"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,257.0,Statement Source,Executable,IF,0.0,2.0,,if (k1 > 1) then
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,258.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,259.0,Statement Source,Comment,CMT,0.0,101.0,,/*------- Step 2 (samples of size m2) --------*/
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,260.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m2 = int(m1*m1/nvalid);
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,261.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"k2 = svrtutil_hillutil_minMSEindex(nvalid, _x, _b, m2, samp, mse, Q2);"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,262.0,Statement Source,Executable,IF,0.0,2.0,,if (Q2 = 0) then
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,263.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Qratio = .;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,264.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,265.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Qratio = Q1**2/Q2;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,266.0,Statement Source,Comment,CMT,0.0,101.0,,/*------- Compute cutoff index --------*/
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,267.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_lk1_by_lm1 = log(k1)/log(m1);
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,268.0,Statement Source,Executable,ASSIGN,0.0,1.0,,k = (k1**2/k2) * (2/_lk1_by_lm1 - 1)**(-2 + 2*_lk1_by_lm1);
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,269.0,Statement Source,Executable,IF,0.0,2.0,,if (not(missing(Qratio))) then
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,270.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,271.0,Statement Source,Comment,CMT,0.0,101.0,,/*----- Check if Qratio is minimal for current m1 -----*/
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,272.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(minQratio) or Qratio < minQratio) then
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,273.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,274.0,Statement Source,Executable,ASSIGN,0.0,1.0,,kopt = k;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,275.0,Statement Source,Executable,ASSIGN,0.0,1.0,,minQratio = Qratio;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,276.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,277.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,278.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,279.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,280.0,Statement Source,Comment,CMT,0.0,101.0,,/*----- end loop over m1 -----*/
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,281.0,Statement Source,Comment,CMT,0.0,101.0,,/*------- return element at rank kopt+1 as cutoff point -------*/
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,282.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_sort(nvalid, _x, 0);"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,283.0,Statement Source,Executable,IF,0.0,2.0,,if (not(missing(kopt)) and kopt < nvalid) then
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,284.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,285.0,Statement Source,Executable,ASSIGN,0.0,1.0,,status = 0;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,286.0,Statement Source,Executable,RETURN,0.0,1.0,,return(_x[int(kopt+1)]);
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,287.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,288.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,289.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,290.0,Statement Source,Comment,CMT,0.0,101.0,,"/* the algorithm failed to compute valid cutoff index;
                return fifth largest value in the sample. */"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,291.0,Statement Source,Executable,PUT,0.0,13.0,,put 'NOTE: SVRTUTIL_HILLCUTOFF failed to compute a valid cutoff point.' @@;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,292.0,Statement Source,Executable,PUT,0.0,13.0,,put 'Returning the 5th largest value in the sample as the cutoff point.';
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,293.0,Statement Source,Executable,ASSIGN,0.0,1.0,,status = 1;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,294.0,Statement Source,Executable,RETURN,0.0,1.0,,return (_x[nvalid-4]);
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,295.0,Statement Source,Comment,CMT,0.0,101.0,,"/* alternate is to return 95th percentile, as follows:
             array _xuniq[1] /nosymbols;
             array _F[1] /nosymbols;
             call dynamic_array(_xuniq, nvalid);
             call dynamic_array(_F, nvalid);
             j = 0;
             eps = 2.220446E-16; * constant('MACEPS') *;
             do i=1 to nvalid;
                 k = i+1;
                 do while(k <= nvalid);
                     if (abs(_x[i]-_x[k]) <= eps) then
                         k = k+1;
                     else
                         go to _eqloopend;
                 end;
                 _eqloopend:;
                 j = j+1;
                 _xuniq[j] = _x[i];
                 _F[j] = (k-1)/nvalid;
             end;
              return(SVRTUTIL_PERCENTILE(0.95, j, _xuniq, _F));
             */"
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,296.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLCUTOFF,CMP,297.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,298.0,Prototype,FCmp,utility,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[svrtutil_hillutil_minMSEindex]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[n]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N"
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,299.0,Prototype,FCmp,utility,1.0,,,"n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[b]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[m]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[samp]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Fla"
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,300.0,Prototype,FCmp,utility,2.0,,,"g6"">0</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[mse]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[Qopt]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,301.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.276</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:43]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[utility]]></S></L>"
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,302.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function svrtutil_hillutil_minMSEindex(n,x[*],b,m,samp[*],mse[*],Qopt);"
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,303.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs samp, mse, Qopt;"
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,304.0,Statement Source,Executable,DO,0.0,3.0,,do k=1 to m-1;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,305.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mse[k] = 0;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,306.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,307.0,Statement Source,Executable,DO,0.0,3.0,,do ib=1 to b;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,308.0,Statement Source,Comment,CMT,0.0,101.0,,"/* form a bootstrap sample (all elements of x are assumed to
                non-missing and positive) */"
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,309.0,Statement Source,Executable,DO,0.0,3.0,,do is = 1 to m;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,310.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ix = floor(rand('uniform')*n)+1;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,311.0,Statement Source,Executable,ASSIGN,0.0,1.0,,samp[is] = x[ix];
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,312.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,313.0,Statement Source,Comment,CMT,0.0,101.0,,/* sort the sample */
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,314.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_sort(m, samp, 0);"
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,315.0,Statement Source,Comment,CMT,0.0,101.0,,/* compute mse for each k */
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,316.0,Statement Source,Executable,DO,0.0,3.0,,do k=1 to m-1;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,317.0,Statement Source,Executable,ASSIGN,0.0,1.0,,cvGamma = 0;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,318.0,Statement Source,Comment,CMT,0.0,101.0,,/* control variate for gamma estimate */
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,319.0,Statement Source,Executable,ASSIGN,0.0,1.0,,gamma = 0;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,320.0,Statement Source,Comment,CMT,0.0,101.0,,/* Hill's tail index estimate for given k */
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,321.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_t1 = log(samp[m-k]);
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,322.0,Statement Source,Executable,DO,0.0,3.0,,do i=1 to k;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,323.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_t2 = log(samp[m-i+1]) - _t1;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,324.0,Statement Source,Executable,ASSIGN,0.0,1.0,,cvGamma = cvGamma + _t2**2;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,325.0,Statement Source,Executable,ASSIGN,0.0,1.0,,gamma = gamma + _t2;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,326.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,327.0,Statement Source,Executable,ASSIGN,0.0,1.0,,cvGamma = cvGamma/k;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,328.0,Statement Source,Executable,ASSIGN,0.0,1.0,,gamma = gamma/k;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,329.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_mse = (cvGamma - 2*gamma**2)**2;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,330.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mse[k] = mse[k] + _mse;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,331.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,332.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,333.0,Statement Source,Comment,CMT,0.0,101.0,,/* find k that minimizes MSE averaged over all bootstrap samples */
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,334.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_kopt = 1;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,335.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Qopt = mse[1]/b;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,336.0,Statement Source,Executable,DO,0.0,3.0,,do k=2 to m-1;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,337.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_Q = mse[k]/b;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,338.0,Statement Source,Executable,IF,0.0,2.0,,if(_Q < Qopt) then
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,339.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,340.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_kopt = k;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,341.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Qopt = _Q;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,342.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,343.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,344.0,Statement Source,Executable,RETURN,0.0,1.0,,return(_kopt);
F.UTILITY.SVRTUTIL_HILLUTIL_MINMSEINDEX,CMP,345.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.UTILITY.SVRTUTIL_SORT,CMP,346.0,Prototype,FCmp,utility,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[SVRTUTIL_SORT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">64</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S"
F.UTILITY.SVRTUTIL_SORT,CMP,347.0,Prototype,FCmp,utility,2.0,,,"n=""Name""><![CDATA[isDescending]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.UTILITY.SVRTUTIL_SORT,CMP,348.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.278</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:43]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[utility]]></S></L>"
F.UTILITY.SVRTUTIL_SORT,CMP,349.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine SVRTUTIL_SORT(dim, x[*], isDescending);"
F.UTILITY.SVRTUTIL_SORT,CMP,350.0,Statement Source,Executable,OUTARGS,0.0,14.0,,outargs x;
F.UTILITY.SVRTUTIL_SORT,CMP,351.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array _st_base[64] /nosymbols;
F.UTILITY.SVRTUTIL_SORT,CMP,352.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array _st_num[64] /nosymbols;
F.UTILITY.SVRTUTIL_SORT,CMP,353.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array _st_mth[64] /nosymbols;
F.UTILITY.SVRTUTIL_SORT,CMP,354.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array _med[13] /nosymbols;
F.UTILITY.SVRTUTIL_SORT,CMP,355.0,Statement Source,Executable,IF,0.0,2.0,,if (isDescending) then
F.UTILITY.SVRTUTIL_SORT,CMP,356.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,357.0,Statement Source,Comment,CMT,0.0,101.0,,/* change signs so ascending sort code can be used */
F.UTILITY.SVRTUTIL_SORT,CMP,358.0,Statement Source,Executable,DO,0.0,3.0,,do _n=1 to dim;
F.UTILITY.SVRTUTIL_SORT,CMP,359.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_n] = -x[_n];
F.UTILITY.SVRTUTIL_SORT,CMP,360.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,361.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,362.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_n = dim;
F.UTILITY.SVRTUTIL_SORT,CMP,363.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_a = 0;
F.UTILITY.SVRTUTIL_SORT,CMP,364.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_st_n = 0;
F.UTILITY.SVRTUTIL_SORT,CMP,365.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_mth = 1;
F.UTILITY.SVRTUTIL_SORT,CMP,366.0,Statement Source,Comment,CMT,0.0,101.0,,"/* 1: sort precheck, 2: swap-limited insertion sort */"
F.UTILITY.SVRTUTIL_SORT,CMP,367.0,Statement Source,Executable,DO,0.0,3.0,,do while(1);
F.UTILITY.SVRTUTIL_SORT,CMP,368.0,Statement Source,Executable,;,0.0,14.0,,bigloop_begin:;
F.UTILITY.SVRTUTIL_SORT,CMP,369.0,Statement Source,Comment,CMT,0.0,101.0,,"/* process section [_a, _a+_n) */"
F.UTILITY.SVRTUTIL_SORT,CMP,370.0,Statement Source,Comment,CMT,0.0,101.0,,/* insertion sort on small (or non-random) arrays */
F.UTILITY.SVRTUTIL_SORT,CMP,371.0,Statement Source,Executable,IF,0.0,2.0,,if (_n < 8 or _mth ne 0) then
F.UTILITY.SVRTUTIL_SORT,CMP,372.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,373.0,Statement Source,Executable,IF,0.0,2.0,,if (_n < 8) then
F.UTILITY.SVRTUTIL_SORT,CMP,374.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,375.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_s = 8*8;
F.UTILITY.SVRTUTIL_SORT,CMP,376.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,377.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_SORT,CMP,378.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,379.0,Statement Source,Executable,IF,0.0,2.0,,if (_mth = 1) then
F.UTILITY.SVRTUTIL_SORT,CMP,380.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_s = 1;
F.UTILITY.SVRTUTIL_SORT,CMP,381.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_SORT,CMP,382.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_s = _n;
F.UTILITY.SVRTUTIL_SORT,CMP,383.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,384.0,Statement Source,Executable,DO,0.0,3.0,,do _m = _a+1 to _a+_n-1;
F.UTILITY.SVRTUTIL_SORT,CMP,385.0,Statement Source,Executable,DO,0.0,3.0,,do _l = _m to _a+1 by -1;
F.UTILITY.SVRTUTIL_SORT,CMP,386.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_cmp */
F.UTILITY.SVRTUTIL_SORT,CMP,387.0,Statement Source,Executable,IF,0.0,2.0,,if (not(x[_l] > x[_l+1])) then
F.UTILITY.SVRTUTIL_SORT,CMP,388.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,389.0,Statement Source,Comment,CMT,0.0,101.0,,/* equal or smaller */
F.UTILITY.SVRTUTIL_SORT,CMP,390.0,Statement Source,Executable,GO,0.0,5.0,,go to loopend1;
F.UTILITY.SVRTUTIL_SORT,CMP,391.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,392.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_SORT,CMP,393.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,394.0,Statement Source,Comment,CMT,0.0,101.0,,/* greater */
F.UTILITY.SVRTUTIL_SORT,CMP,395.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_j = _l+1;
F.UTILITY.SVRTUTIL_SORT,CMP,396.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__t = x[_l];
F.UTILITY.SVRTUTIL_SORT,CMP,397.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_l] = x[_j];
F.UTILITY.SVRTUTIL_SORT,CMP,398.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_j] = __t;
F.UTILITY.SVRTUTIL_SORT,CMP,399.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_swp */
F.UTILITY.SVRTUTIL_SORT,CMP,400.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_s = _s - 1;
F.UTILITY.SVRTUTIL_SORT,CMP,401.0,Statement Source,Executable,IF,0.0,2.0,,if (_s = 0) then
F.UTILITY.SVRTUTIL_SORT,CMP,402.0,Statement Source,Executable,GO,0.0,5.0,,go to _punt_isort;
F.UTILITY.SVRTUTIL_SORT,CMP,403.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,404.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,405.0,Statement Source,Executable,;,0.0,14.0,,loopend1:;
F.UTILITY.SVRTUTIL_SORT,CMP,406.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,407.0,Statement Source,Executable,IF,0.0,2.0,,if (_st_n = 0) then
F.UTILITY.SVRTUTIL_SORT,CMP,408.0,Statement Source,Executable,GO,0.0,5.0,,go to bigloop_done;
F.UTILITY.SVRTUTIL_SORT,CMP,409.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_st_n = _st_n - 1;
F.UTILITY.SVRTUTIL_SORT,CMP,410.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_a = _st_base[_st_n+1];
F.UTILITY.SVRTUTIL_SORT,CMP,411.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_n = _st_num[_st_n+1];
F.UTILITY.SVRTUTIL_SORT,CMP,412.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_mth = _st_mth[_st_n+1];
F.UTILITY.SVRTUTIL_SORT,CMP,413.0,Statement Source,Executable,GO,0.0,5.0,,go to bigloop_begin;
F.UTILITY.SVRTUTIL_SORT,CMP,414.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,415.0,Statement Source,Executable,;,0.0,14.0,,_punt_isort:;
F.UTILITY.SVRTUTIL_SORT,CMP,416.0,Statement Source,Comment,CMT,0.0,101.0,,/* choose partition value */
F.UTILITY.SVRTUTIL_SORT,CMP,417.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_l = _a;
F.UTILITY.SVRTUTIL_SORT,CMP,418.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_m = _a + int(_n/2);
F.UTILITY.SVRTUTIL_SORT,CMP,419.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_h = _a + _n-1;
F.UTILITY.SVRTUTIL_SORT,CMP,420.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[1] = _l;
F.UTILITY.SVRTUTIL_SORT,CMP,421.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[2] = _m;
F.UTILITY.SVRTUTIL_SORT,CMP,422.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[3] = _h;
F.UTILITY.SVRTUTIL_SORT,CMP,423.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_v = 2;
F.UTILITY.SVRTUTIL_SORT,CMP,424.0,Statement Source,Executable,IF,0.0,2.0,,if (_n > 40) then
F.UTILITY.SVRTUTIL_SORT,CMP,425.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,426.0,Statement Source,Comment,CMT,0.0,101.0,,/* pseudo-median of 9 */
F.UTILITY.SVRTUTIL_SORT,CMP,427.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_s = int(_n/8);
F.UTILITY.SVRTUTIL_SORT,CMP,428.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[1] = _l;
F.UTILITY.SVRTUTIL_SORT,CMP,429.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[2] = _l+_s;
F.UTILITY.SVRTUTIL_SORT,CMP,430.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[3] = _l+2*_s;
F.UTILITY.SVRTUTIL_SORT,CMP,431.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[4] = _m - _s;
F.UTILITY.SVRTUTIL_SORT,CMP,432.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[5] = _m;
F.UTILITY.SVRTUTIL_SORT,CMP,433.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[6] = _m + _s;
F.UTILITY.SVRTUTIL_SORT,CMP,434.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[7] = _h - 2*_s;
F.UTILITY.SVRTUTIL_SORT,CMP,435.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[8] = _h - _s;
F.UTILITY.SVRTUTIL_SORT,CMP,436.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[9] = _h;
F.UTILITY.SVRTUTIL_SORT,CMP,437.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_v = 8;
F.UTILITY.SVRTUTIL_SORT,CMP,438.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,439.0,Statement Source,Executable,DO,0.0,3.0,,do _s = 0 to _v-1 by 3;
F.UTILITY.SVRTUTIL_SORT,CMP,440.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_l = _med[_s+1];
F.UTILITY.SVRTUTIL_SORT,CMP,441.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_m = _med[_s+2];
F.UTILITY.SVRTUTIL_SORT,CMP,442.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_h = _med[_s+3];
F.UTILITY.SVRTUTIL_SORT,CMP,443.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_v = _v + 1;
F.UTILITY.SVRTUTIL_SORT,CMP,444.0,Statement Source,Comment,CMT,0.0,101.0,,"/* set _med[_v+1] to the index of the median of values at
                 indices _l, _m, _h */"
F.UTILITY.SVRTUTIL_SORT,CMP,445.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_cmp */
F.UTILITY.SVRTUTIL_SORT,CMP,446.0,Statement Source,Executable,IF,0.0,2.0,,if (x[_l+1] = x[_m+1]) then
F.UTILITY.SVRTUTIL_SORT,CMP,447.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,448.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[_v+1] = _m;
F.UTILITY.SVRTUTIL_SORT,CMP,449.0,Statement Source,Executable,GO,0.0,5.0,,go to loopend2;
F.UTILITY.SVRTUTIL_SORT,CMP,450.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,451.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_SORT,CMP,452.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,453.0,Statement Source,Executable,IF,0.0,2.0,,if (x[_l+1] > x[_m+1]) then
F.UTILITY.SVRTUTIL_SORT,CMP,454.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,455.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__t = _l;
F.UTILITY.SVRTUTIL_SORT,CMP,456.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_l = _m;
F.UTILITY.SVRTUTIL_SORT,CMP,457.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_m = __t;
F.UTILITY.SVRTUTIL_SORT,CMP,458.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,459.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_cmp */
F.UTILITY.SVRTUTIL_SORT,CMP,460.0,Statement Source,Executable,IF,0.0,2.0,,if (not(x[_m+1] > x[_h+1])) then
F.UTILITY.SVRTUTIL_SORT,CMP,461.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,462.0,Statement Source,Comment,CMT,0.0,101.0,,/* equal or smaller */
F.UTILITY.SVRTUTIL_SORT,CMP,463.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[_v+1] = _m;
F.UTILITY.SVRTUTIL_SORT,CMP,464.0,Statement Source,Executable,GO,0.0,5.0,,go to loopend2;
F.UTILITY.SVRTUTIL_SORT,CMP,465.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,466.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_SORT,CMP,467.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,468.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_cmp */
F.UTILITY.SVRTUTIL_SORT,CMP,469.0,Statement Source,Executable,IF,0.0,2.0,,if (not(x[_l+1] > x[_h+1])) then
F.UTILITY.SVRTUTIL_SORT,CMP,470.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,471.0,Statement Source,Comment,CMT,0.0,101.0,,/* equal or smaller */
F.UTILITY.SVRTUTIL_SORT,CMP,472.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[_v+1] = _h;
F.UTILITY.SVRTUTIL_SORT,CMP,473.0,Statement Source,Executable,GO,0.0,5.0,,go to loopend2;
F.UTILITY.SVRTUTIL_SORT,CMP,474.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,475.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_SORT,CMP,476.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,477.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_med[_v+1] = _l;
F.UTILITY.SVRTUTIL_SORT,CMP,478.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,479.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,480.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,481.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,482.0,Statement Source,Executable,;,0.0,14.0,,loopend2:;
F.UTILITY.SVRTUTIL_SORT,CMP,483.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_m = _med[_v+1];
F.UTILITY.SVRTUTIL_SORT,CMP,484.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_orig_a = _a;
F.UTILITY.SVRTUTIL_SORT,CMP,485.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_v = _a;
F.UTILITY.SVRTUTIL_SORT,CMP,486.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_i = _v+1;
F.UTILITY.SVRTUTIL_SORT,CMP,487.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_j = _m+1;
F.UTILITY.SVRTUTIL_SORT,CMP,488.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__t = x[_i];
F.UTILITY.SVRTUTIL_SORT,CMP,489.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_i] = x[_j];
F.UTILITY.SVRTUTIL_SORT,CMP,490.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_j] = __t;
F.UTILITY.SVRTUTIL_SORT,CMP,491.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_swp */
F.UTILITY.SVRTUTIL_SORT,CMP,492.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_c = _a + _n-1;
F.UTILITY.SVRTUTIL_SORT,CMP,493.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_d = _c;
F.UTILITY.SVRTUTIL_SORT,CMP,494.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_a = _a + 1;
F.UTILITY.SVRTUTIL_SORT,CMP,495.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_b = _a;
F.UTILITY.SVRTUTIL_SORT,CMP,496.0,Statement Source,Comment,CMT,0.0,101.0,,/* skip over partition value */
F.UTILITY.SVRTUTIL_SORT,CMP,497.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_mth = 2;
F.UTILITY.SVRTUTIL_SORT,CMP,498.0,Statement Source,Executable,DO,0.0,3.0,,do while(1);
F.UTILITY.SVRTUTIL_SORT,CMP,499.0,Statement Source,Executable,DO,0.0,3.0,,do while (_b <= _c);
F.UTILITY.SVRTUTIL_SORT,CMP,500.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_cmp */
F.UTILITY.SVRTUTIL_SORT,CMP,501.0,Statement Source,Executable,IF,0.0,2.0,,if (x[_b+1] > x[_v+1]) then
F.UTILITY.SVRTUTIL_SORT,CMP,502.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,503.0,Statement Source,Executable,GO,0.0,5.0,,go to zs_b_high;
F.UTILITY.SVRTUTIL_SORT,CMP,504.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,505.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_SORT,CMP,506.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,507.0,Statement Source,Executable,IF,0.0,2.0,,if (x[_b+1] = x[_v+1]) then
F.UTILITY.SVRTUTIL_SORT,CMP,508.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,509.0,Statement Source,Comment,CMT,0.0,101.0,,/* equal */
F.UTILITY.SVRTUTIL_SORT,CMP,510.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_i = _a+1;
F.UTILITY.SVRTUTIL_SORT,CMP,511.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_j = _b+1;
F.UTILITY.SVRTUTIL_SORT,CMP,512.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__t = x[_i];
F.UTILITY.SVRTUTIL_SORT,CMP,513.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_i] = x[_j];
F.UTILITY.SVRTUTIL_SORT,CMP,514.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_j] = __t;
F.UTILITY.SVRTUTIL_SORT,CMP,515.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_swp */
F.UTILITY.SVRTUTIL_SORT,CMP,516.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_a = _a + 1;
F.UTILITY.SVRTUTIL_SORT,CMP,517.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,518.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_b_low: */
F.UTILITY.SVRTUTIL_SORT,CMP,519.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_b = _b + 1;
F.UTILITY.SVRTUTIL_SORT,CMP,520.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,521.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,522.0,Statement Source,Executable,GO,0.0,5.0,,go to loopend3;
F.UTILITY.SVRTUTIL_SORT,CMP,523.0,Statement Source,Executable,;,0.0,14.0,,zs_b_high:;
F.UTILITY.SVRTUTIL_SORT,CMP,524.0,Statement Source,Executable,DO,0.0,3.0,,do while (_b <= _c);
F.UTILITY.SVRTUTIL_SORT,CMP,525.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_cmp */
F.UTILITY.SVRTUTIL_SORT,CMP,526.0,Statement Source,Executable,IF,0.0,2.0,,if (x[_c+1] < x[_v+1]) then
F.UTILITY.SVRTUTIL_SORT,CMP,527.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,528.0,Statement Source,Executable,GO,0.0,5.0,,go to zs_c_low;
F.UTILITY.SVRTUTIL_SORT,CMP,529.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,530.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_SORT,CMP,531.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,532.0,Statement Source,Executable,IF,0.0,2.0,,if (x[_c+1] = x[_v+1]) then
F.UTILITY.SVRTUTIL_SORT,CMP,533.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,534.0,Statement Source,Comment,CMT,0.0,101.0,,/* equal */
F.UTILITY.SVRTUTIL_SORT,CMP,535.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_i = _c+1;
F.UTILITY.SVRTUTIL_SORT,CMP,536.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_j = _d+1;
F.UTILITY.SVRTUTIL_SORT,CMP,537.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__t = x[_i];
F.UTILITY.SVRTUTIL_SORT,CMP,538.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_i] = x[_j];
F.UTILITY.SVRTUTIL_SORT,CMP,539.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_j] = __t;
F.UTILITY.SVRTUTIL_SORT,CMP,540.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_swp */
F.UTILITY.SVRTUTIL_SORT,CMP,541.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_d = _d - 1;
F.UTILITY.SVRTUTIL_SORT,CMP,542.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,543.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_c_high: */
F.UTILITY.SVRTUTIL_SORT,CMP,544.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_c = _c - 1;
F.UTILITY.SVRTUTIL_SORT,CMP,545.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,546.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,547.0,Statement Source,Executable,GO,0.0,5.0,,go to loopend3;
F.UTILITY.SVRTUTIL_SORT,CMP,548.0,Statement Source,Executable,;,0.0,14.0,,zs_c_low:;
F.UTILITY.SVRTUTIL_SORT,CMP,549.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_i = _b+1;
F.UTILITY.SVRTUTIL_SORT,CMP,550.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_j = _c+1;
F.UTILITY.SVRTUTIL_SORT,CMP,551.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__t = x[_i];
F.UTILITY.SVRTUTIL_SORT,CMP,552.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_i] = x[_j];
F.UTILITY.SVRTUTIL_SORT,CMP,553.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_j] = __t;
F.UTILITY.SVRTUTIL_SORT,CMP,554.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_swp */
F.UTILITY.SVRTUTIL_SORT,CMP,555.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_b = _b + 1;
F.UTILITY.SVRTUTIL_SORT,CMP,556.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_c = _c - 1;
F.UTILITY.SVRTUTIL_SORT,CMP,557.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_mth = 0;
F.UTILITY.SVRTUTIL_SORT,CMP,558.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,559.0,Statement Source,Executable,;,0.0,14.0,,loopend3:;
F.UTILITY.SVRTUTIL_SORT,CMP,560.0,Statement Source,Comment,CMT,0.0,101.0,,/* swap equal items back to middle */
F.UTILITY.SVRTUTIL_SORT,CMP,561.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_zs_vecswp(x, _orig_a, _a, _b);"
F.UTILITY.SVRTUTIL_SORT,CMP,562.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_zs_vecswp(x, _c+1, _d+1, _orig_a + _n);"
F.UTILITY.SVRTUTIL_SORT,CMP,563.0,Statement Source,Comment,CMT,0.0,101.0,,/* push larger partition onto stack */
F.UTILITY.SVRTUTIL_SORT,CMP,564.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_d = _d - _c;
F.UTILITY.SVRTUTIL_SORT,CMP,565.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_c = _orig_a+_n-_d;
F.UTILITY.SVRTUTIL_SORT,CMP,566.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_b = _b - _a;
F.UTILITY.SVRTUTIL_SORT,CMP,567.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_a = _orig_a;
F.UTILITY.SVRTUTIL_SORT,CMP,568.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_n = _b;
F.UTILITY.SVRTUTIL_SORT,CMP,569.0,Statement Source,Executable,IF,0.0,2.0,,if (_d < _b) then
F.UTILITY.SVRTUTIL_SORT,CMP,570.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,571.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_a = _c;
F.UTILITY.SVRTUTIL_SORT,CMP,572.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_n = _d;
F.UTILITY.SVRTUTIL_SORT,CMP,573.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_c = _orig_a;
F.UTILITY.SVRTUTIL_SORT,CMP,574.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_d = _b;
F.UTILITY.SVRTUTIL_SORT,CMP,575.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,576.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_st_base[_st_n+1] = _c;
F.UTILITY.SVRTUTIL_SORT,CMP,577.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_st_num[_st_n+1] = _d;
F.UTILITY.SVRTUTIL_SORT,CMP,578.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_st_mth[_st_n+1] = _mth;
F.UTILITY.SVRTUTIL_SORT,CMP,579.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_st_n = _st_n + 1;
F.UTILITY.SVRTUTIL_SORT,CMP,580.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,581.0,Statement Source,Executable,;,0.0,14.0,,bigloop_done:;
F.UTILITY.SVRTUTIL_SORT,CMP,582.0,Statement Source,Executable,IF,0.0,2.0,,if (isDescending) then
F.UTILITY.SVRTUTIL_SORT,CMP,583.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_SORT,CMP,584.0,Statement Source,Comment,CMT,0.0,101.0,,/* change signs back to original signs */
F.UTILITY.SVRTUTIL_SORT,CMP,585.0,Statement Source,Executable,DO,0.0,3.0,,do _n=1 to dim;
F.UTILITY.SVRTUTIL_SORT,CMP,586.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[_n] = -x[_n];
F.UTILITY.SVRTUTIL_SORT,CMP,587.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,588.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_SORT,CMP,589.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,590.0,Prototype,FCmp,utility,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[svrtutil_zs_vecswp]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[a]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg"">"
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,591.0,Prototype,FCmp,utility,2.0,,,"<S n=""Name""><![CDATA[b]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[c]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,592.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.287</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:43]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[utility]]></S></L>"
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,593.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine svrtutil_zs_vecswp(x[*], a, b, c);"
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,594.0,Statement Source,Executable,OUTARGS,0.0,14.0,,outargs x;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,595.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__a = a;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,596.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__b = b;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,597.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__c = c;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,598.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"__n = MIN((__b - __a), (__c - __b));"
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,599.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__c = __c - __n;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,600.0,Statement Source,Executable,DO,0.0,3.0,,do while(__n > 0);
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,601.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__i = __a+1;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,602.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__j = __c+1;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,603.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__t = x[__i];
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,604.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[__i] = x[__j];
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,605.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x[__j] = __t;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,606.0,Statement Source,Comment,CMT,0.0,101.0,,/* zs_swp */
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,607.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__n = __n - 1;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,608.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__a = __i;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,609.0,Statement Source,Executable,ASSIGN,0.0,1.0,,__c = __j;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,610.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_ZS_VECSWP,CMP,611.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,612.0,Prototype,FCmp,utility,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[SVRTUTIL_PERCENTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,613.0,Prototype,FCmp,utility,1.0,,,"></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,614.0,Prototype,FCmp,utility,2.0,,,"n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,615.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.288</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:43]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[utility]]></S></L>"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,616.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function SVRTUTIL_PERCENTILE(p, dim, x[*], F[*], Ftype);"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,617.0,Statement Source,Executable,ASSIGN,0.0,1.0,,eps = 2.220446E-16;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,618.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,619.0,Statement Source,Executable,IF,0.0,2.0,,if (dim < 1 or MISSING(p) or p < 0 or p > 1+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,620.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,621.0,Statement Source,Executable,IF,0.0,2.0,,if (Ftype=1) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,622.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,623.0,Statement Source,Comment,CMT,0.0,101.0,,/* ungrouped data (no censoring/truncation) */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,624.0,Statement Source,Executable,ASSIGN,0.0,1.0,,dimp1 = dim+1;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,625.0,Statement Source,Executable,IF,0.0,2.0,,if (p >= 1/dimp1-eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,626.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,627.0,Statement Source,Executable,IF,0.0,2.0,,if (p <= dim/dimp1+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,628.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,629.0,Statement Source,Comment,CMT,0.0,101.0,,"/* return smoothed estimate as per ""Loss Models"" by
                        Klugman et. al. (1998) pg. 35 */"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,630.0,Statement Source,Executable,ASSIGN,0.0,1.0,,h = dimp1*p;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,631.0,Statement Source,Executable,ASSIGN,0.0,1.0,,g = floor(h);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,632.0,Statement Source,Executable,ASSIGN,0.0,1.0,,h = h - g;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,633.0,Statement Source,Executable,IF,0.0,2.0,,if (g >= dim) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,634.0,Statement Source,Executable,RETURN,0.0,1.0,,return (x[g]);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,635.0,Statement Source,Executable,RETURN,0.0,1.0,,return (x[g]*(1-h)+x[g+1]*h);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,636.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,637.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,638.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,639.0,Statement Source,Executable,RETURN,0.0,1.0,,return (x[dim]);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,640.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,641.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,642.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,643.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,644.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (max(0,(x[1]-eps)/2));"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,645.0,Statement Source,Comment,CMT,0.0,101.0,,"/* assume F is 0 in [0,x[1]) */"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,646.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,647.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,648.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,649.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,650.0,Statement Source,Executable,IF,0.0,2.0,,if (Ftype=2) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,651.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,652.0,Statement Source,Comment,CMT,0.0,101.0,,"/* ungrouped data (truncation and one form of censoring).
                     Kaplan-Meier estimate */"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,653.0,Statement Source,Executable,IF,0.0,2.0,,if (p <= F[1]+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,654.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,655.0,Statement Source,Executable,IF,0.0,2.0,,if (p < F[1]-eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,656.0,Statement Source,Executable,RETURN,0.0,1.0,,"/* p < F[1] */ return (max(0,(x[1]-eps)/2));"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,657.0,Statement Source,Comment,CMT,0.0,101.0,,"/* F is 0 in [0,x[1]) */"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,658.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,659.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,660.0,Statement Source,Comment,CMT,0.0,101.0,,/* p = F[1] */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,661.0,Statement Source,Executable,IF,0.0,2.0,,if (dim > 1) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,662.0,Statement Source,Executable,RETURN,0.0,1.0,,return ((x[1]+x[2])/2);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,663.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,664.0,Statement Source,Executable,RETURN,0.0,1.0,,return (x[1]);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,665.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,666.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,667.0,Statement Source,Executable,IF,0.0,2.0,,if (p > F[dim]+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,668.0,Statement Source,Executable,RETURN,0.0,1.0,,return (x[dim]);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,669.0,Statement Source,Comment,CMT,0.0,101.0,,/* assume F is flat after last point */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,670.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ileft = 2;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,671.0,Statement Source,Executable,ASSIGN,0.0,1.0,,iright = dim;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,672.0,Statement Source,Executable,ASSIGN,0.0,1.0,,i = int((dim+2)/2);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,673.0,Statement Source,Executable,DO,0.0,3.0,,do while (i >= 2 and i <= dim);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,674.0,Statement Source,Executable,IF,0.0,2.0,,if (p < F[i]-eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,675.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,676.0,Statement Source,Comment,CMT,0.0,101.0,,/* p < F[i] */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,677.0,Statement Source,Executable,IF,0.0,2.0,,if (p > F[i-1]+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,678.0,Statement Source,Executable,RETURN,0.0,1.0,,/* F[i-1] < y < F[i] */ return (x[i]);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,679.0,Statement Source,Comment,CMT,0.0,101.0,,/* p is along the step; pctl=x[i] */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,680.0,Statement Source,Executable,IF,0.0,2.0,,if (p >= F[i-1]-eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,681.0,Statement Source,Executable,RETURN,0.0,1.0,,/* p = F[i-1] */ return ((x[i-1]+x[i])/2);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,682.0,Statement Source,Comment,CMT,0.0,101.0,,"/* p < F[i-1]; move search to left half of
                             current interval */"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,683.0,Statement Source,Executable,ASSIGN,0.0,1.0,,iright = i-1;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,684.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,685.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,686.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,687.0,Statement Source,Executable,IF,0.0,2.0,,if (p <= F[i]+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,688.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,689.0,Statement Source,Comment,CMT,0.0,101.0,,/* p = F[i] */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,690.0,Statement Source,Executable,IF,0.0,2.0,,if (i < dim) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,691.0,Statement Source,Executable,RETURN,0.0,1.0,,return ((x[i]+x[i+1])/2);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,692.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,693.0,Statement Source,Executable,RETURN,0.0,1.0,,return (x[i]);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,694.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,695.0,Statement Source,Comment,CMT,0.0,101.0,,"/* p > F[i]; move search to right half of
                             current interval */"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,696.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ileft = i+1;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,697.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,698.0,Statement Source,Executable,ASSIGN,0.0,1.0,,i = int((ileft+iright)/2);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,699.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,700.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,701.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,702.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,703.0,Statement Source,Comment,CMT,0.0,101.0,,/* grouped data (Turnbull's estimator) */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,704.0,Statement Source,Executable,IF,0.0,2.0,,if (p <= F[1]+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,705.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,706.0,Statement Source,Executable,IF,0.0,2.0,,if (p < F[1]-eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,707.0,Statement Source,Executable,RETURN,0.0,1.0,,"/* p < F[1] */ return (max(0,(x[1]-eps)/2));"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,708.0,Statement Source,Comment,CMT,0.0,101.0,,"/* F is 0 in [0,x[1]) */"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,709.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,710.0,Statement Source,Executable,RETURN,0.0,1.0,,/* p = F[1] */ return (x[1]);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,711.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,712.0,Statement Source,Executable,IF,0.0,2.0,,if (p > F[dim]+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,713.0,Statement Source,Executable,RETURN,0.0,1.0,,return (x[dim]);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,714.0,Statement Source,Comment,CMT,0.0,101.0,,/* assume F is flat after last point */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,715.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ileft = 1;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,716.0,Statement Source,Executable,ASSIGN,0.0,1.0,,iright = dim/2;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,717.0,Statement Source,Executable,ASSIGN,0.0,1.0,,i = 2*int((ileft+iright)/2)-1;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,718.0,Statement Source,Executable,DO,0.0,3.0,,do while (i >= 1 and i <= dim-1);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,719.0,Statement Source,Executable,IF,0.0,2.0,,if (p < F[i]-eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,720.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,721.0,Statement Source,Comment,CMT,0.0,101.0,,"/* p < F[i]; move search to left half of
                           current interval */"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,722.0,Statement Source,Executable,ASSIGN,0.0,1.0,,iright = int((i+1)/2) - 1;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,723.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,724.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,725.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,726.0,Statement Source,Comment,CMT,0.0,101.0,,/* p >= F[i] */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,727.0,Statement Source,Executable,IF,0.0,2.0,,if (p <= F[i]+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,728.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,729.0,Statement Source,Comment,CMT,0.0,101.0,,/* p = F[i] */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,730.0,Statement Source,Executable,IF,0.0,2.0,,if (F[i+1] <= F[i]+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,731.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,732.0,Statement Source,Executable,RETURN,0.0,1.0,,return ((x[i]+x[i+1])/2);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,733.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,734.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,735.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,736.0,Statement Source,Executable,IF,0.0,2.0,,if (i > 1) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,737.0,Statement Source,Executable,RETURN,0.0,1.0,,return ((x[i-1]+x[i])/2);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,738.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,739.0,Statement Source,Executable,RETURN,0.0,1.0,,return (x[1]/2);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,740.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,741.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,742.0,Statement Source,Comment,CMT,0.0,101.0,,/* p > F[i] */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,743.0,Statement Source,Executable,IF,0.0,2.0,,if (p < F[i+1]-eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,744.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,745.0,Statement Source,Comment,CMT,0.0,101.0,,/* F[i] < p < F[i+1] */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,746.0,Statement Source,Executable,RETURN,0.0,1.0,,return (x[i]+(p-F[i])*(x[i+1]-x[i])/(F[i+1]-F[i]));
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,747.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,748.0,Statement Source,Comment,CMT,0.0,101.0,,/* p >= F[i+1] */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,749.0,Statement Source,Executable,IF,0.0,2.0,,if (p <= F[i+1]+eps) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,750.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,751.0,Statement Source,Comment,CMT,0.0,101.0,,/* p = F[i+1] */
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,752.0,Statement Source,Executable,IF,0.0,2.0,,if (i < dim-1) then
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,753.0,Statement Source,Executable,RETURN,0.0,1.0,,return ((x[i+1]+x[i+2])/2);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,754.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,755.0,Statement Source,Executable,RETURN,0.0,1.0,,return (x[i+1]);
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,756.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,757.0,Statement Source,Comment,CMT,0.0,101.0,,"/* p > F[i+1]; move search to right half of
                            current interval */"
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,758.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ileft = int((i+1)/2) + 1;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,759.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,760.0,Statement Source,Executable,ASSIGN,0.0,1.0,,i = 2*int((ileft+iright)/2)-1;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,761.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,762.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,763.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_PERCENTILE,CMP,764.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,765.0,Prototype,FCmp,utility,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[SVRTUTIL_RAWMOMENTS]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n="
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,766.0,Prototype,FCmp,utility,1.0,,,"""Arg""><S n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[nRaw]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[raw]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N"
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,767.0,Prototype,FCmp,utility,2.0,,,"n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L></L></L>"
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,768.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.294</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:43]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[utility]]></S></L>"
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,769.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine SVRTUTIL_RAWMOMENTS(dim, x[*], nx[*], nRaw, raw[*]);"
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,770.0,Statement Source,Executable,OUTARGS,0.0,14.0,,outargs raw;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,771.0,Statement Source,Executable,IF,0.0,2.0,,if (dim < 1 or nRaw < 1) then
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,772.0,Statement Source,Executable,RETURN,0.0,8.0,,return;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,773.0,Statement Source,Executable,DO,0.0,3.0,,do j=1 to nRaw;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,774.0,Statement Source,Executable,ASSIGN,0.0,1.0,,raw[j] = 0;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,775.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,776.0,Statement Source,Executable,ASSIGN,0.0,1.0,,n = 0;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,777.0,Statement Source,Executable,DO,0.0,3.0,,do i=1 to dim;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,778.0,Statement Source,Executable,IF,0.0,2.0,,if (not(missing(x[i]) or nx[i] <= 0)) then
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,779.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,780.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t1 = x[i];
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,781.0,Statement Source,Executable,DO,0.0,3.0,,do j=1 to nRaw;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,782.0,Statement Source,Executable,ASSIGN,0.0,1.0,,raw[j] = raw[j] + nx[i] * t1;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,783.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t1 = t1 * x[i];
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,784.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,785.0,Statement Source,Executable,ASSIGN,0.0,1.0,,n = n + nx[i];
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,786.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,787.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,788.0,Statement Source,Executable,IF,0.0,2.0,,if (n <= 0) then
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,789.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,790.0,Statement Source,Executable,DO,0.0,3.0,,do j=1 to nRaw;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,791.0,Statement Source,Executable,ASSIGN,0.0,1.0,,raw[j] = .;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,792.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,793.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,794.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,795.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,796.0,Statement Source,Executable,DO,0.0,3.0,,do j=1 to nRaw;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,797.0,Statement Source,Executable,ASSIGN,0.0,1.0,,raw[j] = raw[j] / n;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,798.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,799.0,Statement Source,Executable,END,0.0,10.0,,end;
F.UTILITY.SVRTUTIL_RAWMOMENTS,CMP,800.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
MYMODELS,CMP,0.0,Header,Package,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.856</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Package]]></S><N n=""Obfuscate"">0</N></L>"
F.MYMODELS.BURR_MEAN,CMP,0.0,Prototype,FCmp,mymodels,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_MEAN]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"
F.MYMODELS.BURR_MEAN,CMP,1.0,Prototype,FCmp,mymodels,2.0,,,"""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Gamma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MYMODELS.BURR_MEAN,CMP,2.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.876</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_MEAN,CMP,3.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function BURR_MEAN(x, Theta, Alpha, Gamma);"
F.MYMODELS.BURR_MEAN,CMP,4.0,Statement Source,Executable,IF,0.0,2.0,,if not(Alpha * Gamma > 1) then
F.MYMODELS.BURR_MEAN,CMP,5.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MYMODELS.BURR_MEAN,CMP,6.0,Statement Source,Comment,CMT,0.0,101.0,,/* first moment does not exist */
F.MYMODELS.BURR_MEAN,CMP,7.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Theta*gamma(1 + 1/Gamma)*gamma(Alpha - 1/Gamma)/gamma(Alpha));
F.MYMODELS.BURR_MEAN,CMP,8.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_QUANTILE,CMP,9.0,Prototype,FCmp,mymodels,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_QUANTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n="
F.MYMODELS.BURR_QUANTILE,CMP,10.0,Prototype,FCmp,mymodels,2.0,,,"""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Gamma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MYMODELS.BURR_QUANTILE,CMP,11.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.877</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_QUANTILE,CMP,12.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function BURR_QUANTILE(p, Theta, Alpha, Gamma);"
F.MYMODELS.BURR_QUANTILE,CMP,13.0,Statement Source,Executable,IF,0.0,2.0,,if (p >= 1-1.0e-14) then
F.MYMODELS.BURR_QUANTILE,CMP,14.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MYMODELS.BURR_QUANTILE,CMP,15.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Theta * ((1-p)**(-1/Alpha) - 1)**(1/Gamma));
F.MYMODELS.BURR_QUANTILE,CMP,16.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_PARMINIT,CMP,17.0,Prototype,FCmp,mymodels,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_PARMINIT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n="
F.MYMODELS.BURR_PARMINIT,CMP,18.0,Prototype,FCmp,mymodels,1.0,,,"""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA["
F.MYMODELS.BURR_PARMINIT,CMP,19.0,Prototype,FCmp,mymodels,1.0,,,"Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[Gam"
F.MYMODELS.BURR_PARMINIT,CMP,20.0,Prototype,FCmp,mymodels,2.0,,,"ma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MYMODELS.BURR_PARMINIT,CMP,21.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.878</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_PARMINIT,CMP,22.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine BURR_PARMINIT(dim, x[*], nx[*], F[*], Ftype, Theta, Alpha, Gamma);"
F.MYMODELS.BURR_PARMINIT,CMP,23.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs Theta, Alpha, Gamma;"
F.MYMODELS.BURR_PARMINIT,CMP,24.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array m[3] / nosymbols;
F.MYMODELS.BURR_PARMINIT,CMP,25.0,Statement Source,Comment,CMT,0.0,101.0,,/* Assume Gamma=2 and compute Alpha & Theta using Method of Moments */
F.MYMODELS.BURR_PARMINIT,CMP,26.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_rawmoments(dim, x, nx, 3, m);"
F.MYMODELS.BURR_PARMINIT,CMP,27.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(m[1])) then
F.MYMODELS.BURR_PARMINIT,CMP,28.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MYMODELS.BURR_PARMINIT,CMP,29.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = .;
F.MYMODELS.BURR_PARMINIT,CMP,30.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = .;
F.MYMODELS.BURR_PARMINIT,CMP,31.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Gamma = .;
F.MYMODELS.BURR_PARMINIT,CMP,32.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MYMODELS.BURR_PARMINIT,CMP,33.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MYMODELS.BURR_PARMINIT,CMP,34.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MYMODELS.BURR_PARMINIT,CMP,35.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t1 = 2*m[3] - 3*m[1]*m[2];
F.MYMODELS.BURR_PARMINIT,CMP,36.0,Statement Source,Executable,IF,0.0,2.0,,if (t1 < 2.220446E-16) then
F.MYMODELS.BURR_PARMINIT,CMP,37.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MYMODELS.BURR_PARMINIT,CMP,38.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MYMODELS.BURR_PARMINIT,CMP,39.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = sqrt(m[2]);
F.MYMODELS.BURR_PARMINIT,CMP,40.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = 2;
F.MYMODELS.BURR_PARMINIT,CMP,41.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Gamma = 2;
F.MYMODELS.BURR_PARMINIT,CMP,42.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MYMODELS.BURR_PARMINIT,CMP,43.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MYMODELS.BURR_PARMINIT,CMP,44.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MYMODELS.BURR_PARMINIT,CMP,45.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = sqrt(m[2]*m[3]/t1);
F.MYMODELS.BURR_PARMINIT,CMP,46.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = 1 + (m[3]/t1);
F.MYMODELS.BURR_PARMINIT,CMP,47.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Gamma = 2;
F.MYMODELS.BURR_PARMINIT,CMP,48.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MYMODELS.BURR_PARMINIT,CMP,49.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MYMODELS.BURR_PARMINIT,CMP,50.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_SDF,CMP,51.0,Prototype,FCmp,mymodels,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_SDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"""
F.MYMODELS.BURR_SDF,CMP,52.0,Prototype,FCmp,mymodels,2.0,,,"><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Gamma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MYMODELS.BURR_SDF,CMP,53.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                   1790266003.88</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_SDF,CMP,54.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function BURR_SDF(x, Theta, Alpha, Gamma);"
F.MYMODELS.BURR_SDF,CMP,55.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MYMODELS.BURR_SDF,CMP,56.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape1 */
F.MYMODELS.BURR_SDF,CMP,57.0,Statement Source,Comment,CMT,0.0,101.0,,/* Gamma : Shape2 */
F.MYMODELS.BURR_SDF,CMP,58.0,Statement Source,Executable,RETURN,0.0,1.0,,return ((1 + (x/Theta)**Gamma)**(-Alpha));
F.MYMODELS.BURR_SDF,CMP,59.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_LOGSDF,CMP,60.0,Prototype,FCmp,mymodels,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_LOGSDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Ty"
F.MYMODELS.BURR_LOGSDF,CMP,61.0,Prototype,FCmp,mymodels,2.0,,,"pe""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Gamma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MYMODELS.BURR_LOGSDF,CMP,62.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.881</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_LOGSDF,CMP,63.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function BURR_LOGSDF(x, Theta, Alpha, Gamma);"
F.MYMODELS.BURR_LOGSDF,CMP,64.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MYMODELS.BURR_LOGSDF,CMP,65.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape1 */
F.MYMODELS.BURR_LOGSDF,CMP,66.0,Statement Source,Comment,CMT,0.0,101.0,,/* Gamma : Shape2 */
F.MYMODELS.BURR_LOGSDF,CMP,67.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-Alpha * log1px((x/Theta)**Gamma));
F.MYMODELS.BURR_LOGSDF,CMP,68.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_CDF,CMP,69.0,Prototype,FCmp,mymodels,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_CDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"
F.MYMODELS.BURR_CDF,CMP,70.0,Prototype,FCmp,mymodels,2.0,,,"""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Gamma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MYMODELS.BURR_CDF,CMP,71.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.882</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_CDF,CMP,72.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function BURR_CDF(x, Theta, Alpha, Gamma);"
F.MYMODELS.BURR_CDF,CMP,73.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MYMODELS.BURR_CDF,CMP,74.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape1 */
F.MYMODELS.BURR_CDF,CMP,75.0,Statement Source,Comment,CMT,0.0,101.0,,/* Gamma : Shape2 */
F.MYMODELS.BURR_CDF,CMP,76.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MYMODELS.BURR_CDF,CMP,77.0,Statement Source,Executable,RETURN,0.0,1.0,,/* constant('MACEPS') */ return (1- (1 + (x/Theta)**Gamma)**(-Alpha));
F.MYMODELS.BURR_CDF,CMP,78.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MYMODELS.BURR_CDF,CMP,79.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MYMODELS.BURR_CDF,CMP,80.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_LOGCDF,CMP,81.0,Prototype,FCmp,mymodels,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_LOGCDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""T"
F.MYMODELS.BURR_LOGCDF,CMP,82.0,Prototype,FCmp,mymodels,2.0,,,"ype""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Gamma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MYMODELS.BURR_LOGCDF,CMP,83.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.883</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_LOGCDF,CMP,84.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function BURR_LOGCDF(x, Theta, Alpha, Gamma);"
F.MYMODELS.BURR_LOGCDF,CMP,85.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MYMODELS.BURR_LOGCDF,CMP,86.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape1 */
F.MYMODELS.BURR_LOGCDF,CMP,87.0,Statement Source,Comment,CMT,0.0,101.0,,/* Gamma : Shape2 */
F.MYMODELS.BURR_LOGCDF,CMP,88.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MYMODELS.BURR_LOGCDF,CMP,89.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MYMODELS.BURR_LOGCDF,CMP,90.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MYMODELS.BURR_LOGCDF,CMP,91.0,Statement Source,Executable,ASSIGN,0.0,1.0,,c = (1 + (x/Theta)**Gamma)**(-Alpha);
F.MYMODELS.BURR_LOGCDF,CMP,92.0,Statement Source,Executable,IF,0.0,2.0,,if (c < 1) then
F.MYMODELS.BURR_LOGCDF,CMP,93.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log1px(-c));
F.MYMODELS.BURR_LOGCDF,CMP,94.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MYMODELS.BURR_LOGCDF,CMP,95.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MYMODELS.BURR_LOGCDF,CMP,96.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MYMODELS.BURR_LOGCDF,CMP,97.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MYMODELS.BURR_LOGCDF,CMP,98.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MYMODELS.BURR_LOGCDF,CMP,99.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MYMODELS.BURR_LOGCDF,CMP,100.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MYMODELS.BURR_LOGCDF,CMP,101.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_PDF,CMP,102.0,Prototype,FCmp,mymodels,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_PDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"""
F.MYMODELS.BURR_PDF,CMP,103.0,Prototype,FCmp,mymodels,2.0,,,"><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Gamma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MYMODELS.BURR_PDF,CMP,104.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.885</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_PDF,CMP,105.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function BURR_PDF(x, Theta, Alpha, Gamma);"
F.MYMODELS.BURR_PDF,CMP,106.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MYMODELS.BURR_PDF,CMP,107.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape1 */
F.MYMODELS.BURR_PDF,CMP,108.0,Statement Source,Comment,CMT,0.0,101.0,,/* Gamma : Shape2 */
F.MYMODELS.BURR_PDF,CMP,109.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"logpdf = BURR_LOGPDF(x, Theta, Alpha, Gamma);"
F.MYMODELS.BURR_PDF,CMP,110.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(logpdf)) then
F.MYMODELS.BURR_PDF,CMP,111.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MYMODELS.BURR_PDF,CMP,112.0,Statement Source,Executable,IF,0.0,2.0,,if (logpdf < 174.673089) then
F.MYMODELS.BURR_PDF,CMP,113.0,Statement Source,Executable,RETURN,0.0,1.0,,/* constant('LOGBIG') */ return ( exp(logpdf) );
F.MYMODELS.BURR_PDF,CMP,114.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MYMODELS.BURR_PDF,CMP,115.0,Statement Source,Executable,RETURN,0.0,1.0,,return ( 7.237005E75 );
F.MYMODELS.BURR_PDF,CMP,116.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('BIG') */
F.MYMODELS.BURR_PDF,CMP,117.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_LOGPDF,CMP,118.0,Prototype,FCmp,mymodels,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_LOGPDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""T"
F.MYMODELS.BURR_LOGPDF,CMP,119.0,Prototype,FCmp,mymodels,2.0,,,"ype""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Gamma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MYMODELS.BURR_LOGPDF,CMP,120.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.886</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_LOGPDF,CMP,121.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function BURR_LOGPDF(x, Theta, Alpha, Gamma);"
F.MYMODELS.BURR_LOGPDF,CMP,122.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MYMODELS.BURR_LOGPDF,CMP,123.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape1 */
F.MYMODELS.BURR_LOGPDF,CMP,124.0,Statement Source,Comment,CMT,0.0,101.0,,/* Gamma : Shape2 */
F.MYMODELS.BURR_LOGPDF,CMP,125.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MYMODELS.BURR_LOGPDF,CMP,126.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MYMODELS.BURR_LOGPDF,CMP,127.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MYMODELS.BURR_LOGPDF,CMP,128.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = x/Theta;
F.MYMODELS.BURR_LOGPDF,CMP,129.0,Statement Source,Executable,ASSIGN,0.0,1.0,,l1 = log(Alpha*Gamma/x);
F.MYMODELS.BURR_LOGPDF,CMP,130.0,Statement Source,Executable,ASSIGN,0.0,1.0,,l2 = log(z);
F.MYMODELS.BURR_LOGPDF,CMP,131.0,Statement Source,Executable,ASSIGN,0.0,1.0,,l3 = log1px(z**Gamma);
F.MYMODELS.BURR_LOGPDF,CMP,132.0,Statement Source,Executable,ASSIGN,0.0,1.0,,logpdf = l1 + Gamma*l2 - (Alpha+1) * l3;
F.MYMODELS.BURR_LOGPDF,CMP,133.0,Statement Source,Executable,RETURN,0.0,1.0,,return (logpdf);
F.MYMODELS.BURR_LOGPDF,CMP,134.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MYMODELS.BURR_LOGPDF,CMP,135.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MYMODELS.BURR_LOGPDF,CMP,136.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MYMODELS.BURR_LOGPDF,CMP,137.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lbig = 174.673089;
F.MYMODELS.BURR_LOGPDF,CMP,138.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGBIG') */
F.MYMODELS.BURR_LOGPDF,CMP,139.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lsmall = -180.218266;
F.MYMODELS.BURR_LOGPDF,CMP,140.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MYMODELS.BURR_LOGPDF,CMP,141.0,Statement Source,Executable,ASSIGN,0.0,1.0,,logpdf = lbig + Gamma*lsmall;
F.MYMODELS.BURR_LOGPDF,CMP,142.0,Statement Source,Executable,IF,0.0,2.0,,if (logpdf < lsmall) then
F.MYMODELS.BURR_LOGPDF,CMP,143.0,Statement Source,Executable,RETURN,0.0,1.0,,return (lsmall);
F.MYMODELS.BURR_LOGPDF,CMP,144.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MYMODELS.BURR_LOGPDF,CMP,145.0,Statement Source,Executable,IF,0.0,2.0,,if (logpdf > lbig) then
F.MYMODELS.BURR_LOGPDF,CMP,146.0,Statement Source,Executable,RETURN,0.0,1.0,,return (lbig);
F.MYMODELS.BURR_LOGPDF,CMP,147.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MYMODELS.BURR_LOGPDF,CMP,148.0,Statement Source,Executable,RETURN,0.0,1.0,,return (logpdf);
F.MYMODELS.BURR_LOGPDF,CMP,149.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MYMODELS.BURR_LOGPDF,CMP,150.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_PARMCOUNT,CMP,151.0,Prototype,FCmp,mymodels,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_PARMCOUNT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MYMODELS.BURR_PARMCOUNT,CMP,152.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.888</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_PARMCOUNT,CMP,153.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function BURR_PARMCOUNT();
F.MYMODELS.BURR_PARMCOUNT,CMP,154.0,Statement Source,Executable,RETURN,0.0,1.0,,return(3);
F.MYMODELS.BURR_PARMCOUNT,CMP,155.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_DESCRIPTION,CMP,156.0,Prototype,FCmp,mymodels,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[BURR_DESCRIPTION]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">36</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MYMODELS.BURR_DESCRIPTION,CMP,157.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266003.888</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[mymodels]]></S></L>"
F.MYMODELS.BURR_DESCRIPTION,CMP,158.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function BURR_DESCRIPTION() $36;
F.MYMODELS.BURR_DESCRIPTION,CMP,159.0,Statement Source,Declarative,LENGTH,0.0,102.0,,length model $36;
F.MYMODELS.BURR_DESCRIPTION,CMP,160.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"model = ""Burr Distribution (Type XII Family)"";"
F.MYMODELS.BURR_DESCRIPTION,CMP,161.0,Statement Source,Executable,RETURN,0.0,1.0,,return(model);
F.MYMODELS.BURR_DESCRIPTION,CMP,162.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MYMODELS.BURR_DESCRIPTION,CMP,163.0,Symbol,,_BURR_DESCRIPTION_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_BURR_DESCRIPTION_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">36</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MYMODELS.BURR_DESCRIPTION,CMP,164.0,Symbol,,model,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[model]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">36</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.EXP_MEAN,CMP,0.0,Prototype,FCmp,models,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_MEAN]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.EXP_MEAN,CMP,1.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.139</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_MEAN,CMP,2.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function EXP_MEAN(x, Theta);"
F.MODELS.EXP_MEAN,CMP,3.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Theta);
F.MODELS.EXP_MEAN,CMP,4.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_QUANTILE,CMP,5.0,Prototype,FCmp,models,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_QUANTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.EXP_QUANTILE,CMP,6.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.141</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_QUANTILE,CMP,7.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function EXP_QUANTILE(p,Theta);"
F.MODELS.EXP_QUANTILE,CMP,8.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.EXP_QUANTILE,CMP,9.0,Statement Source,Executable,IF,0.0,2.0,,if (p < 0 or p > 1) then
F.MODELS.EXP_QUANTILE,CMP,10.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.EXP_QUANTILE,CMP,11.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.EXP_QUANTILE,CMP,12.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (quantile('EXPO',p,Theta));"
F.MODELS.EXP_QUANTILE,CMP,13.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_PARMINIT,CMP,14.0,Prototype,FCmp,models,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_PARMINIT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S"
F.MODELS.EXP_PARMINIT,CMP,15.0,Prototype,FCmp,models,1.0,,,"n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"
F.MODELS.EXP_PARMINIT,CMP,16.0,Prototype,FCmp,models,2.0,,,"""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.EXP_PARMINIT,CMP,17.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.143</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_PARMINIT,CMP,18.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine EXP_PARMINIT(dim, x[*], nx[*], F[*], Ftype, Theta);"
F.MODELS.EXP_PARMINIT,CMP,19.0,Statement Source,Executable,OUTARGS,0.0,14.0,,outargs Theta;
F.MODELS.EXP_PARMINIT,CMP,20.0,Statement Source,Comment,CMT,0.0,101.0,,/* Compute estimate using method of moments */
F.MODELS.EXP_PARMINIT,CMP,21.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = 0;
F.MODELS.EXP_PARMINIT,CMP,22.0,Statement Source,Executable,ASSIGN,0.0,1.0,,n = 0;
F.MODELS.EXP_PARMINIT,CMP,23.0,Statement Source,Executable,DO,0.0,3.0,,do i=1 to dim;
F.MODELS.EXP_PARMINIT,CMP,24.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = Theta + nx[i] * x[i];
F.MODELS.EXP_PARMINIT,CMP,25.0,Statement Source,Executable,ASSIGN,0.0,1.0,,n = n + nx[i];
F.MODELS.EXP_PARMINIT,CMP,26.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.EXP_PARMINIT,CMP,27.0,Statement Source,Executable,IF,0.0,2.0,,if (n = 0) then
F.MODELS.EXP_PARMINIT,CMP,28.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = .;
F.MODELS.EXP_PARMINIT,CMP,29.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.EXP_PARMINIT,CMP,30.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = Theta / n;
F.MODELS.EXP_PARMINIT,CMP,31.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_SDF,CMP,32.0,Prototype,FCmp,models,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_SDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.EXP_SDF,CMP,33.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.144</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_SDF,CMP,34.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function EXP_SDF(x,Theta);"
F.MODELS.EXP_SDF,CMP,35.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.EXP_SDF,CMP,36.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.EXP_SDF,CMP,37.0,Statement Source,Executable,RETURN,0.0,1.0,,return (1);
F.MODELS.EXP_SDF,CMP,38.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.EXP_SDF,CMP,39.0,Statement Source,Executable,RETURN,0.0,1.0,,return (exp(-x/Theta));
F.MODELS.EXP_SDF,CMP,40.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_LOGSDF,CMP,41.0,Prototype,FCmp,models,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_LOGSDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.EXP_LOGSDF,CMP,42.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.145</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_LOGSDF,CMP,43.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function EXP_LOGSDF(x,Theta);"
F.MODELS.EXP_LOGSDF,CMP,44.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.EXP_LOGSDF,CMP,45.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.EXP_LOGSDF,CMP,46.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.EXP_LOGSDF,CMP,47.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.EXP_LOGSDF,CMP,48.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-x/Theta);
F.MODELS.EXP_LOGSDF,CMP,49.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_CDF,CMP,50.0,Prototype,FCmp,models,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_CDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.EXP_CDF,CMP,51.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.145</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_CDF,CMP,52.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function EXP_CDF(x,Theta);"
F.MODELS.EXP_CDF,CMP,53.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.EXP_CDF,CMP,54.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.EXP_CDF,CMP,55.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.EXP_CDF,CMP,56.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.EXP_CDF,CMP,57.0,Statement Source,Executable,RETURN,0.0,1.0,,return (1.0 - exp(-x/Theta));
F.MODELS.EXP_CDF,CMP,58.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_LOGCDF,CMP,59.0,Prototype,FCmp,models,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_LOGCDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.EXP_LOGCDF,CMP,60.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.146</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_LOGCDF,CMP,61.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function EXP_LOGCDF(x,Theta);"
F.MODELS.EXP_LOGCDF,CMP,62.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.EXP_LOGCDF,CMP,63.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.EXP_LOGCDF,CMP,64.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.EXP_LOGCDF,CMP,65.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.EXP_LOGCDF,CMP,66.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.EXP_LOGCDF,CMP,67.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.EXP_LOGCDF,CMP,68.0,Statement Source,Executable,ASSIGN,0.0,1.0,,c = exp(-x/Theta);
F.MODELS.EXP_LOGCDF,CMP,69.0,Statement Source,Executable,IF,0.0,2.0,,if (c < 1) then
F.MODELS.EXP_LOGCDF,CMP,70.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log1px(-c));
F.MODELS.EXP_LOGCDF,CMP,71.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.EXP_LOGCDF,CMP,72.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.EXP_LOGCDF,CMP,73.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.EXP_LOGCDF,CMP,74.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.EXP_LOGCDF,CMP,75.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_PDF,CMP,76.0,Prototype,FCmp,models,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_PDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.EXP_PDF,CMP,77.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.147</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_PDF,CMP,78.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function EXP_PDF(x,Theta);"
F.MODELS.EXP_PDF,CMP,79.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.EXP_PDF,CMP,80.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.EXP_PDF,CMP,81.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.EXP_PDF,CMP,82.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.EXP_PDF,CMP,83.0,Statement Source,Executable,RETURN,0.0,1.0,,return (exp(-x/Theta)/Theta);
F.MODELS.EXP_PDF,CMP,84.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_LOGPDF,CMP,85.0,Prototype,FCmp,models,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_LOGPDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.EXP_LOGPDF,CMP,86.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.148</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_LOGPDF,CMP,87.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function EXP_LOGPDF(x,Theta);"
F.MODELS.EXP_LOGPDF,CMP,88.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.EXP_LOGPDF,CMP,89.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.EXP_LOGPDF,CMP,90.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.EXP_LOGPDF,CMP,91.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.EXP_LOGPDF,CMP,92.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.EXP_LOGPDF,CMP,93.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-x/Theta - log(Theta));
F.MODELS.EXP_LOGPDF,CMP,94.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_PARMCOUNT,CMP,95.0,Prototype,FCmp,models,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_PARMCOUNT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""></L></L>"
F.MODELS.EXP_PARMCOUNT,CMP,96.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.148</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_PARMCOUNT,CMP,97.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function EXP_PARMCOUNT();
F.MODELS.EXP_PARMCOUNT,CMP,98.0,Statement Source,Executable,RETURN,0.0,1.0,,return(1);
F.MODELS.EXP_PARMCOUNT,CMP,99.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_DESCRIPTION,CMP,100.0,Prototype,FCmp,models,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[EXP_DESCRIPTION]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">32</N><L n=""ArgList""></L></L>"
F.MODELS.EXP_DESCRIPTION,CMP,101.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.149</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[models]]></S></L>"
F.MODELS.EXP_DESCRIPTION,CMP,102.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function EXP_DESCRIPTION() $32;
F.MODELS.EXP_DESCRIPTION,CMP,103.0,Statement Source,Declarative,LENGTH,0.0,102.0,,length model $32;
F.MODELS.EXP_DESCRIPTION,CMP,104.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"model = ""Exponential Distribution"";"
F.MODELS.EXP_DESCRIPTION,CMP,105.0,Statement Source,Executable,RETURN,0.0,1.0,,return(model);
F.MODELS.EXP_DESCRIPTION,CMP,106.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.EXP_DESCRIPTION,CMP,107.0,Symbol,,_EXP_DESCRIPTION_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_EXP_DESCRIPTION_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.EXP_DESCRIPTION,CMP,108.0,Symbol,,model,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[model]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.GAMMA_MEAN,CMP,0.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_MEAN]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S>"
F.MODELS.GAMMA_MEAN,CMP,1.0,Prototype,FCmp,MODELS,2.0,,,"<N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GAMMA_MEAN,CMP,2.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.434</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_MEAN,CMP,3.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GAMMA_MEAN(x, Theta, Alpha);"
F.MODELS.GAMMA_MEAN,CMP,4.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Theta*Alpha);
F.MODELS.GAMMA_MEAN,CMP,5.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_QUANTILE,CMP,6.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_QUANTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]>"
F.MODELS.GAMMA_QUANTILE,CMP,7.0,Prototype,FCmp,MODELS,2.0,,,"</S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GAMMA_QUANTILE,CMP,8.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.435</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_QUANTILE,CMP,9.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GAMMA_QUANTILE(p, Theta, Alpha);"
F.MODELS.GAMMA_QUANTILE,CMP,10.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GAMMA_QUANTILE,CMP,11.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.GAMMA_QUANTILE,CMP,12.0,Statement Source,Executable,RETURN,0.0,1.0,,"return(quantile(""GAMMA"", p, Alpha, Theta));"
F.MODELS.GAMMA_QUANTILE,CMP,13.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_PARMINIT,CMP,14.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_PARMINIT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><"
F.MODELS.GAMMA_PARMINIT,CMP,15.0,Prototype,FCmp,MODELS,1.0,,,"S n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Ty"
F.MODELS.GAMMA_PARMINIT,CMP,16.0,Prototype,FCmp,MODELS,2.0,,,"pe""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.GAMMA_PARMINIT,CMP,17.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.435</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_PARMINIT,CMP,18.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine GAMMA_PARMINIT(dim, x[*], nx[*], F[*], Ftype, Theta, Alpha);"
F.MODELS.GAMMA_PARMINIT,CMP,19.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs Theta, Alpha;"
F.MODELS.GAMMA_PARMINIT,CMP,20.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m1 = 0;
F.MODELS.GAMMA_PARMINIT,CMP,21.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m2 = 0;
F.MODELS.GAMMA_PARMINIT,CMP,22.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lm = 0;
F.MODELS.GAMMA_PARMINIT,CMP,23.0,Statement Source,Executable,ASSIGN,0.0,1.0,,n = 0;
F.MODELS.GAMMA_PARMINIT,CMP,24.0,Statement Source,Executable,ASSIGN,0.0,1.0,,minVal = 2.220446E-16;
F.MODELS.GAMMA_PARMINIT,CMP,25.0,Statement Source,Comment,CMT,0.0,101.0,,"/* alternatives:
                                        MACEPS     = 2.220446E-16
                                        sqrt(SMALL)= 0.1491668147e-153 */"
F.MODELS.GAMMA_PARMINIT,CMP,26.0,Statement Source,Executable,DO,0.0,3.0,,do i=1 to dim;
F.MODELS.GAMMA_PARMINIT,CMP,27.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"x1 = max(x[i], minVal);"
F.MODELS.GAMMA_PARMINIT,CMP,28.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t1 = nx[i] * x1;
F.MODELS.GAMMA_PARMINIT,CMP,29.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m1 = m1 + t1;
F.MODELS.GAMMA_PARMINIT,CMP,30.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m2 = m2 + (t1 * x1);
F.MODELS.GAMMA_PARMINIT,CMP,31.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lm = lm + (nx[i] * log(x1));
F.MODELS.GAMMA_PARMINIT,CMP,32.0,Statement Source,Executable,ASSIGN,0.0,1.0,,n = n + nx[i];
F.MODELS.GAMMA_PARMINIT,CMP,33.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_PARMINIT,CMP,34.0,Statement Source,Executable,IF,0.0,2.0,,if (n = 0) then
F.MODELS.GAMMA_PARMINIT,CMP,35.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_PARMINIT,CMP,36.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = .;
F.MODELS.GAMMA_PARMINIT,CMP,37.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = .;
F.MODELS.GAMMA_PARMINIT,CMP,38.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_PARMINIT,CMP,39.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GAMMA_PARMINIT,CMP,40.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_PARMINIT,CMP,41.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m1 = m1 / n;
F.MODELS.GAMMA_PARMINIT,CMP,42.0,Statement Source,Executable,ASSIGN,0.0,1.0,,usemom = 1;
F.MODELS.GAMMA_PARMINIT,CMP,43.0,Statement Source,Comment,CMT,0.0,101.0,,/* Compute estimates using approximate maximum likelihood */
F.MODELS.GAMMA_PARMINIT,CMP,44.0,Statement Source,Executable,ASSIGN,0.0,1.0,,s = log(m1) - lm/n;
F.MODELS.GAMMA_PARMINIT,CMP,45.0,Statement Source,Executable,IF,0.0,2.0,,if (s ne 0) then
F.MODELS.GAMMA_PARMINIT,CMP,46.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_PARMINIT,CMP,47.0,Statement Source,Executable,ASSIGN,0.0,1.0,,s1 = (s-3)**2 + 24*s;
F.MODELS.GAMMA_PARMINIT,CMP,48.0,Statement Source,Executable,IF,0.0,2.0,,if (s1 > 0) then
F.MODELS.GAMMA_PARMINIT,CMP,49.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_PARMINIT,CMP,50.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = (3 - s + sqrt(s1))/(12*s);
F.MODELS.GAMMA_PARMINIT,CMP,51.0,Statement Source,Executable,IF,0.0,2.0,,if (Alpha > 0) then
F.MODELS.GAMMA_PARMINIT,CMP,52.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_PARMINIT,CMP,53.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = m1/Alpha;
F.MODELS.GAMMA_PARMINIT,CMP,54.0,Statement Source,Executable,ASSIGN,0.0,1.0,,usemom = 0;
F.MODELS.GAMMA_PARMINIT,CMP,55.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_PARMINIT,CMP,56.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_PARMINIT,CMP,57.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_PARMINIT,CMP,58.0,Statement Source,Executable,IF,0.0,2.0,,if (usemom = 1) then
F.MODELS.GAMMA_PARMINIT,CMP,59.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_PARMINIT,CMP,60.0,Statement Source,Comment,CMT,0.0,101.0,,/* Compute estimates using method of moments */
F.MODELS.GAMMA_PARMINIT,CMP,61.0,Statement Source,Executable,ASSIGN,0.0,1.0,,m2 = m2 / n;
F.MODELS.GAMMA_PARMINIT,CMP,62.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t1 = m2 - m1**2;
F.MODELS.GAMMA_PARMINIT,CMP,63.0,Statement Source,Executable,IF,0.0,2.0,,if (t1 < 2.220446E-16) then
F.MODELS.GAMMA_PARMINIT,CMP,64.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_PARMINIT,CMP,65.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.GAMMA_PARMINIT,CMP,66.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = 1;
F.MODELS.GAMMA_PARMINIT,CMP,67.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = m1;
F.MODELS.GAMMA_PARMINIT,CMP,68.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_PARMINIT,CMP,69.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GAMMA_PARMINIT,CMP,70.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_PARMINIT,CMP,71.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = m1**2 / t1;
F.MODELS.GAMMA_PARMINIT,CMP,72.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = t1 / m1;
F.MODELS.GAMMA_PARMINIT,CMP,73.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_PARMINIT,CMP,74.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_PARMINIT,CMP,75.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_PARMINIT,CMP,76.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_SDF,CMP,77.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_SDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><"
F.MODELS.GAMMA_SDF,CMP,78.0,Prototype,FCmp,MODELS,2.0,,,"N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GAMMA_SDF,CMP,79.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.437</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_SDF,CMP,80.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GAMMA_SDF(x, Theta, Alpha);"
F.MODELS.GAMMA_SDF,CMP,81.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GAMMA_SDF,CMP,82.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.GAMMA_SDF,CMP,83.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"cdf = GAMMA_CDF(x, Theta, Alpha);"
F.MODELS.GAMMA_SDF,CMP,84.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(cdf)) then
F.MODELS.GAMMA_SDF,CMP,85.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.GAMMA_SDF,CMP,86.0,Statement Source,Executable,RETURN,0.0,1.0,,return (1-cdf);
F.MODELS.GAMMA_SDF,CMP,87.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_LOGSDF,CMP,88.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_LOGSDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></"
F.MODELS.GAMMA_LOGSDF,CMP,89.0,Prototype,FCmp,MODELS,2.0,,,"S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GAMMA_LOGSDF,CMP,90.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.439</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_LOGSDF,CMP,91.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GAMMA_LOGSDF(x, Theta, Alpha);"
F.MODELS.GAMMA_LOGSDF,CMP,92.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GAMMA_LOGSDF,CMP,93.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.GAMMA_LOGSDF,CMP,94.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"cdf = GAMMA_CDF(x, Theta, Alpha);"
F.MODELS.GAMMA_LOGSDF,CMP,95.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(cdf)) then
F.MODELS.GAMMA_LOGSDF,CMP,96.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.GAMMA_LOGSDF,CMP,97.0,Statement Source,Executable,IF,0.0,2.0,,if (cdf < 1) then
F.MODELS.GAMMA_LOGSDF,CMP,98.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log1px(-cdf));
F.MODELS.GAMMA_LOGSDF,CMP,99.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GAMMA_LOGSDF,CMP,100.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.GAMMA_LOGSDF,CMP,101.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.GAMMA_LOGSDF,CMP,102.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_LOGCDF,CMP,103.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_LOGCDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></"
F.MODELS.GAMMA_LOGCDF,CMP,104.0,Prototype,FCmp,MODELS,2.0,,,"S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GAMMA_LOGCDF,CMP,105.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                   1790266004.44</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_LOGCDF,CMP,106.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GAMMA_LOGCDF(x, Theta, Alpha);"
F.MODELS.GAMMA_LOGCDF,CMP,107.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GAMMA_LOGCDF,CMP,108.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.GAMMA_LOGCDF,CMP,109.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"cdf = GAMMA_CDF(x, Theta, Alpha);"
F.MODELS.GAMMA_LOGCDF,CMP,110.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(cdf)) then
F.MODELS.GAMMA_LOGCDF,CMP,111.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.GAMMA_LOGCDF,CMP,112.0,Statement Source,Executable,IF,0.0,2.0,,if (cdf > 0) then
F.MODELS.GAMMA_LOGCDF,CMP,113.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log(cdf));
F.MODELS.GAMMA_LOGCDF,CMP,114.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GAMMA_LOGCDF,CMP,115.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.GAMMA_LOGCDF,CMP,116.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.GAMMA_LOGCDF,CMP,117.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_CDF,CMP,118.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_CDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><"
F.MODELS.GAMMA_CDF,CMP,119.0,Prototype,FCmp,MODELS,2.0,,,"N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GAMMA_CDF,CMP,120.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.441</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_CDF,CMP,121.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GAMMA_CDF(x, Theta, Alpha);"
F.MODELS.GAMMA_CDF,CMP,122.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GAMMA_CDF,CMP,123.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.GAMMA_CDF,CMP,124.0,Statement Source,Executable,ASSIGN,0.0,1.0,,eps=3.0e-24;
F.MODELS.GAMMA_CDF,CMP,125.0,Statement Source,Comment,CMT,0.0,101.0,,/* relative accuracy  */
F.MODELS.GAMMA_CDF,CMP,126.0,Statement Source,Executable,ASSIGN,0.0,1.0,,fpmin=1.0e-37;
F.MODELS.GAMMA_CDF,CMP,127.0,Statement Source,Comment,CMT,0.0,101.0,,/* smallest floating point value */
F.MODELS.GAMMA_CDF,CMP,128.0,Statement Source,Executable,ASSIGN,0.0,1.0,,y=x/Theta;
F.MODELS.GAMMA_CDF,CMP,129.0,Statement Source,Executable,IF,0.0,2.0,,if ((y < 0.0) or (Alpha <= 0.0)) then
F.MODELS.GAMMA_CDF,CMP,130.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_CDF,CMP,131.0,Statement Source,Executable,RETURN,0.0,1.0,,return(.);
F.MODELS.GAMMA_CDF,CMP,132.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_CDF,CMP,133.0,Statement Source,Executable,ASSIGN,0.0,1.0,,gln = lgamma(Alpha);
F.MODELS.GAMMA_CDF,CMP,134.0,Statement Source,Executable,IF,0.0,2.0,,if (y < (Alpha+1.0)) then
F.MODELS.GAMMA_CDF,CMP,135.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_CDF,CMP,136.0,Statement Source,Comment,CMT,0.0,101.0,,/* begin inline of function gser */
F.MODELS.GAMMA_CDF,CMP,137.0,Statement Source,Executable,IF,0.0,2.0,,if (y <= 0.0) then
F.MODELS.GAMMA_CDF,CMP,138.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_CDF,CMP,139.0,Statement Source,Executable,RETURN,0.0,1.0,,return(0.0);
F.MODELS.GAMMA_CDF,CMP,140.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_CDF,CMP,141.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GAMMA_CDF,CMP,142.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_CDF,CMP,143.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ap=Alpha;
F.MODELS.GAMMA_CDF,CMP,144.0,Statement Source,Executable,ASSIGN,0.0,1.0,,sum=1.0/Alpha;
F.MODELS.GAMMA_CDF,CMP,145.0,Statement Source,Executable,ASSIGN,0.0,1.0,,del=sum;
F.MODELS.GAMMA_CDF,CMP,146.0,Statement Source,Executable,DO,0.0,3.0,,do i=1 to 1000;
F.MODELS.GAMMA_CDF,CMP,147.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ap=ap+1;
F.MODELS.GAMMA_CDF,CMP,148.0,Statement Source,Executable,ASSIGN,0.0,1.0,,del=del*(y/ap);
F.MODELS.GAMMA_CDF,CMP,149.0,Statement Source,Executable,ASSIGN,0.0,1.0,,sum=sum+del;
F.MODELS.GAMMA_CDF,CMP,150.0,Statement Source,Executable,IF,0.0,2.0,,if (abs(del) < abs(sum)*eps) then
F.MODELS.GAMMA_CDF,CMP,151.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_CDF,CMP,152.0,Statement Source,Executable,RETURN,0.0,1.0,,return(sum*exp(-y+Alpha*log(y)-gln));
F.MODELS.GAMMA_CDF,CMP,153.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_CDF,CMP,154.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_CDF,CMP,155.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_CDF,CMP,156.0,Statement Source,Executable,RETURN,0.0,1.0,,return(.);
F.MODELS.GAMMA_CDF,CMP,157.0,Statement Source,Comment,CMT,0.0,101.0,,/* end inline of function gser */
F.MODELS.GAMMA_CDF,CMP,158.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_CDF,CMP,159.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GAMMA_CDF,CMP,160.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_CDF,CMP,161.0,Statement Source,Comment,CMT,0.0,101.0,,/* begin inline of function gcf */
F.MODELS.GAMMA_CDF,CMP,162.0,Statement Source,Executable,ASSIGN,0.0,1.0,,b=y+1.0-Alpha;
F.MODELS.GAMMA_CDF,CMP,163.0,Statement Source,Executable,ASSIGN,0.0,1.0,,c=1.0/fpmin;
F.MODELS.GAMMA_CDF,CMP,164.0,Statement Source,Executable,ASSIGN,0.0,1.0,,d=1.0/b;
F.MODELS.GAMMA_CDF,CMP,165.0,Statement Source,Executable,ASSIGN,0.0,1.0,,h=d;
F.MODELS.GAMMA_CDF,CMP,166.0,Statement Source,Executable,DO,0.0,3.0,,do i= 1 to 1000;
F.MODELS.GAMMA_CDF,CMP,167.0,Statement Source,Executable,ASSIGN,0.0,1.0,,an = -i*(i-Alpha);
F.MODELS.GAMMA_CDF,CMP,168.0,Statement Source,Executable,ASSIGN,0.0,1.0,,b=b+2.0;
F.MODELS.GAMMA_CDF,CMP,169.0,Statement Source,Executable,ASSIGN,0.0,1.0,,d=an*d+b;
F.MODELS.GAMMA_CDF,CMP,170.0,Statement Source,Executable,IF,0.0,2.0,,if (abs(d) < fpmin) then
F.MODELS.GAMMA_CDF,CMP,171.0,Statement Source,Executable,ASSIGN,0.0,1.0,,d=fpmin;
F.MODELS.GAMMA_CDF,CMP,172.0,Statement Source,Executable,ASSIGN,0.0,1.0,,c=b+an/c;
F.MODELS.GAMMA_CDF,CMP,173.0,Statement Source,Executable,IF,0.0,2.0,,if (abs(c) < fpmin) then
F.MODELS.GAMMA_CDF,CMP,174.0,Statement Source,Executable,ASSIGN,0.0,1.0,,c=fpmin;
F.MODELS.GAMMA_CDF,CMP,175.0,Statement Source,Executable,ASSIGN,0.0,1.0,,d=1.0/d;
F.MODELS.GAMMA_CDF,CMP,176.0,Statement Source,Executable,ASSIGN,0.0,1.0,,del=d*c;
F.MODELS.GAMMA_CDF,CMP,177.0,Statement Source,Executable,ASSIGN,0.0,1.0,,h=h*del;
F.MODELS.GAMMA_CDF,CMP,178.0,Statement Source,Executable,IF,0.0,2.0,,if (abs(del-1.0) < eps) then
F.MODELS.GAMMA_CDF,CMP,179.0,Statement Source,Executable,GOTO,0.0,5.0,,goto MyBreak;
F.MODELS.GAMMA_CDF,CMP,180.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_CDF,CMP,181.0,Statement Source,Executable,RETURN,0.0,1.0,,MyBreak: return(1.0-(exp(-y+Alpha*log(y)-gln)*h));
F.MODELS.GAMMA_CDF,CMP,182.0,Statement Source,Comment,CMT,0.0,101.0,,/* end inline of function gcf */
F.MODELS.GAMMA_CDF,CMP,183.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_CDF,CMP,184.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_PDF,CMP,185.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_PDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S>"
F.MODELS.GAMMA_PDF,CMP,186.0,Prototype,FCmp,MODELS,2.0,,,"<N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GAMMA_PDF,CMP,187.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.445</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_PDF,CMP,188.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GAMMA_PDF(x, Theta, Alpha);"
F.MODELS.GAMMA_PDF,CMP,189.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GAMMA_PDF,CMP,190.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.GAMMA_PDF,CMP,191.0,Statement Source,Executable,ASSIGN,0.0,1.0,,minVal = 2.220446E-16;
F.MODELS.GAMMA_PDF,CMP,192.0,Statement Source,Comment,CMT,0.0,101.0,,"/* alternatives:
                                        MACEPS     = 2.220446E-16
                                        sqrt(SMALL)= 0.1491668147e-153 */"
F.MODELS.GAMMA_PDF,CMP,193.0,Statement Source,Executable,IF,0.0,2.0,,if (x < minVal) then
F.MODELS.GAMMA_PDF,CMP,194.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_PDF,CMP,195.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x1 = minVal;
F.MODELS.GAMMA_PDF,CMP,196.0,Statement Source,Comment,CMT,0.0,101.0,,"/* assume exp(-x1/Theta)~1, because x1/Theta is too small */"
F.MODELS.GAMMA_PDF,CMP,197.0,Statement Source,Executable,ASSIGN,0.0,1.0,,p = x1**(Alpha-1) / (gamma(Alpha) * (Theta**Alpha));
F.MODELS.GAMMA_PDF,CMP,198.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_PDF,CMP,199.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GAMMA_PDF,CMP,200.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"p = pdf(""GAMMA"", x, Alpha, Theta);"
F.MODELS.GAMMA_PDF,CMP,201.0,Statement Source,Executable,RETURN,0.0,1.0,,return(p);
F.MODELS.GAMMA_PDF,CMP,202.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_LOGPDF,CMP,203.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_LOGPDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]><"
F.MODELS.GAMMA_LOGPDF,CMP,204.0,Prototype,FCmp,MODELS,2.0,,,"/S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GAMMA_LOGPDF,CMP,205.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.446</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_LOGPDF,CMP,206.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GAMMA_LOGPDF(x, Theta, Alpha);"
F.MODELS.GAMMA_LOGPDF,CMP,207.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GAMMA_LOGPDF,CMP,208.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.GAMMA_LOGPDF,CMP,209.0,Statement Source,Executable,ASSIGN,0.0,1.0,,minVal = 2.220446E-16;
F.MODELS.GAMMA_LOGPDF,CMP,210.0,Statement Source,Comment,CMT,0.0,101.0,,"/* alternatives:
                                        MACEPS     = 2.220446E-16
                                        sqrt(SMALL)= 0.1491668147e-153 */"
F.MODELS.GAMMA_LOGPDF,CMP,211.0,Statement Source,Executable,IF,0.0,2.0,,if (x < minVal) then
F.MODELS.GAMMA_LOGPDF,CMP,212.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GAMMA_LOGPDF,CMP,213.0,Statement Source,Executable,ASSIGN,0.0,1.0,,x1 = minVal;
F.MODELS.GAMMA_LOGPDF,CMP,214.0,Statement Source,Comment,CMT,0.0,101.0,,"/* assume x1/Theta~0, because it is too small */"
F.MODELS.GAMMA_LOGPDF,CMP,215.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lp = (Alpha-1)*log(x1) - lgamma(Alpha) - Alpha*log(Theta);
F.MODELS.GAMMA_LOGPDF,CMP,216.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GAMMA_LOGPDF,CMP,217.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GAMMA_LOGPDF,CMP,218.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"lp = logpdf(""GAMMA"", x, Alpha, Theta);"
F.MODELS.GAMMA_LOGPDF,CMP,219.0,Statement Source,Executable,RETURN,0.0,1.0,,return(lp);
F.MODELS.GAMMA_LOGPDF,CMP,220.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_PARMCOUNT,CMP,221.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_PARMCOUNT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><L n=""ArgList""></L></L>"
F.MODELS.GAMMA_PARMCOUNT,CMP,222.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.447</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_PARMCOUNT,CMP,223.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function GAMMA_PARMCOUNT();
F.MODELS.GAMMA_PARMCOUNT,CMP,224.0,Statement Source,Executable,RETURN,0.0,1.0,,return(2);
F.MODELS.GAMMA_PARMCOUNT,CMP,225.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_DESCRIPTION,CMP,226.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GAMMA_DESCRIPTION]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">32</N><L n=""ArgList""></L></L>"
F.MODELS.GAMMA_DESCRIPTION,CMP,227.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.448</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:44]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GAMMA_DESCRIPTION,CMP,228.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function GAMMA_DESCRIPTION()$32;
F.MODELS.GAMMA_DESCRIPTION,CMP,229.0,Statement Source,Declarative,LENGTH,0.0,102.0,,length model $32;
F.MODELS.GAMMA_DESCRIPTION,CMP,230.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"model = ""Gamma Distribution"";"
F.MODELS.GAMMA_DESCRIPTION,CMP,231.0,Statement Source,Executable,RETURN,0.0,1.0,,return(model);
F.MODELS.GAMMA_DESCRIPTION,CMP,232.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GAMMA_DESCRIPTION,CMP,233.0,Symbol,,_GAMMA_DESCRIPTION_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_GAMMA_DESCRIPTION_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.GAMMA_DESCRIPTION,CMP,234.0,Symbol,,model,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[model]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.GPD_MEAN,CMP,0.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_MEAN]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Xi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><!"
F.MODELS.GPD_MEAN,CMP,1.0,Prototype,FCmp,MODELS,2.0,,,"[CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GPD_MEAN,CMP,2.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.973</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_MEAN,CMP,3.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GPD_MEAN(x, Theta, Xi);"
F.MODELS.GPD_MEAN,CMP,4.0,Statement Source,Executable,IF,0.0,2.0,,if not(Xi < 1) then
F.MODELS.GPD_MEAN,CMP,5.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.GPD_MEAN,CMP,6.0,Statement Source,Comment,CMT,0.0,101.0,,/* first moment does not exist */
F.MODELS.GPD_MEAN,CMP,7.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Theta/(1 - Xi));
F.MODELS.GPD_MEAN,CMP,8.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_QUANTILE,CMP,9.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_QUANTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Xi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"
F.MODELS.GPD_QUANTILE,CMP,10.0,Prototype,FCmp,MODELS,2.0,,,"""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GPD_QUANTILE,CMP,11.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.974</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_QUANTILE,CMP,12.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GPD_QUANTILE(p, Theta, Xi);"
F.MODELS.GPD_QUANTILE,CMP,13.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GPD_QUANTILE,CMP,14.0,Statement Source,Comment,CMT,0.0,101.0,,/* Xi :    Shape */
F.MODELS.GPD_QUANTILE,CMP,15.0,Statement Source,Executable,RETURN,0.0,1.0,,return (((1-p)**(-Xi)-1)*Theta/Xi);
F.MODELS.GPD_QUANTILE,CMP,16.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_PARMINIT,CMP,17.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_PARMINIT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n="""
F.MODELS.GPD_PARMINIT,CMP,18.0,Prototype,FCmp,MODELS,1.0,,,"Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F"
F.MODELS.GPD_PARMINIT,CMP,19.0,Prototype,FCmp,MODELS,2.0,,,"type]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[Xi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.GPD_PARMINIT,CMP,20.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.975</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_PARMINIT,CMP,21.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine GPD_PARMINIT(dim, x[*], nx[*], F[*], Ftype, Theta, Xi);"
F.MODELS.GPD_PARMINIT,CMP,22.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs Theta, Xi;"
F.MODELS.GPD_PARMINIT,CMP,23.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array m[2] / nosymbols;
F.MODELS.GPD_PARMINIT,CMP,24.0,Statement Source,Comment,CMT,0.0,101.0,,/* Use Method of Moments */
F.MODELS.GPD_PARMINIT,CMP,25.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_rawmoments(dim, x, nx, 2, m);"
F.MODELS.GPD_PARMINIT,CMP,26.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(m[1])) then
F.MODELS.GPD_PARMINIT,CMP,27.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_PARMINIT,CMP,28.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = .;
F.MODELS.GPD_PARMINIT,CMP,29.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Xi = .;
F.MODELS.GPD_PARMINIT,CMP,30.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_PARMINIT,CMP,31.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_PARMINIT,CMP,32.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_PARMINIT,CMP,33.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t1 = m[2] - m[1]**2;
F.MODELS.GPD_PARMINIT,CMP,34.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t2 = 2*t1 - m[2];
F.MODELS.GPD_PARMINIT,CMP,35.0,Statement Source,Executable,ASSIGN,0.0,1.0,,eps = 2.220446E-16;
F.MODELS.GPD_PARMINIT,CMP,36.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.GPD_PARMINIT,CMP,37.0,Statement Source,Executable,IF,0.0,2.0,,if (t1 < eps or t2 < eps) then
F.MODELS.GPD_PARMINIT,CMP,38.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_PARMINIT,CMP,39.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = m[1]/2;
F.MODELS.GPD_PARMINIT,CMP,40.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Xi = 1/2;
F.MODELS.GPD_PARMINIT,CMP,41.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_PARMINIT,CMP,42.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_PARMINIT,CMP,43.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_PARMINIT,CMP,44.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = (m[1]*m[2])/(2*t1);
F.MODELS.GPD_PARMINIT,CMP,45.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Xi = t2/(2*t1);
F.MODELS.GPD_PARMINIT,CMP,46.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_PARMINIT,CMP,47.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_PARMINIT,CMP,48.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_SDF,CMP,49.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_SDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Xi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><!"
F.MODELS.GPD_SDF,CMP,50.0,Prototype,FCmp,MODELS,2.0,,,"[CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GPD_SDF,CMP,51.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.976</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_SDF,CMP,52.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GPD_SDF(x, Theta, Xi);"
F.MODELS.GPD_SDF,CMP,53.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GPD_SDF,CMP,54.0,Statement Source,Comment,CMT,0.0,101.0,,/* Xi :    Shape */
F.MODELS.GPD_SDF,CMP,55.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.GPD_SDF,CMP,56.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_SDF,CMP,57.0,Statement Source,Executable,RETURN,0.0,1.0,,return (1);
F.MODELS.GPD_SDF,CMP,58.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_SDF,CMP,59.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_SDF,CMP,60.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_SDF,CMP,61.0,Statement Source,Executable,IF,0.0,2.0,,if (Xi > 2.220446E-16) then
F.MODELS.GPD_SDF,CMP,62.0,Statement Source,Executable,RETURN,0.0,1.0,,/* constant('MACEPS') */ return ((1 + Xi*(x/Theta))**(-1/Xi));
F.MODELS.GPD_SDF,CMP,63.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_SDF,CMP,64.0,Statement Source,Executable,RETURN,0.0,1.0,,return (exp(-x/Theta));
F.MODELS.GPD_SDF,CMP,65.0,Statement Source,Comment,CMT,0.0,101.0,,"/* for Xi ~ 0, exponential */"
F.MODELS.GPD_SDF,CMP,66.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_SDF,CMP,67.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_LOGSDF,CMP,68.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_LOGSDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Xi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"""
F.MODELS.GPD_LOGSDF,CMP,69.0,Prototype,FCmp,MODELS,2.0,,,"><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GPD_LOGSDF,CMP,70.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.977</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_LOGSDF,CMP,71.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GPD_LOGSDF(x, Theta, Xi);"
F.MODELS.GPD_LOGSDF,CMP,72.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GPD_LOGSDF,CMP,73.0,Statement Source,Comment,CMT,0.0,101.0,,/* Xi :    Shape */
F.MODELS.GPD_LOGSDF,CMP,74.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.GPD_LOGSDF,CMP,75.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_LOGSDF,CMP,76.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.GPD_LOGSDF,CMP,77.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_LOGSDF,CMP,78.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_LOGSDF,CMP,79.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_LOGSDF,CMP,80.0,Statement Source,Executable,IF,0.0,2.0,,if (Xi > 2.220446E-16) then
F.MODELS.GPD_LOGSDF,CMP,81.0,Statement Source,Executable,RETURN,0.0,1.0,,/* constant('MACEPS') */ return ((-1/Xi)*log1px(Xi*(x/Theta)));
F.MODELS.GPD_LOGSDF,CMP,82.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_LOGSDF,CMP,83.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-x/Theta);
F.MODELS.GPD_LOGSDF,CMP,84.0,Statement Source,Comment,CMT,0.0,101.0,,"/* for Xi ~ 0, exponential */"
F.MODELS.GPD_LOGSDF,CMP,85.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_LOGSDF,CMP,86.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_CDF,CMP,87.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_CDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Xi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><!"
F.MODELS.GPD_CDF,CMP,88.0,Prototype,FCmp,MODELS,2.0,,,"[CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GPD_CDF,CMP,89.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.978</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_CDF,CMP,90.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GPD_CDF(x, Theta, Xi);"
F.MODELS.GPD_CDF,CMP,91.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GPD_CDF,CMP,92.0,Statement Source,Comment,CMT,0.0,101.0,,/* Xi :    Shape */
F.MODELS.GPD_CDF,CMP,93.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.GPD_CDF,CMP,94.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_CDF,CMP,95.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.GPD_CDF,CMP,96.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_CDF,CMP,97.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_CDF,CMP,98.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_CDF,CMP,99.0,Statement Source,Executable,IF,0.0,2.0,,if (Xi > 2.220446E-16) then
F.MODELS.GPD_CDF,CMP,100.0,Statement Source,Executable,RETURN,0.0,1.0,,/* constant('MACEPS') */ return (1 - (1 + Xi*(x/Theta))**(-1/Xi));
F.MODELS.GPD_CDF,CMP,101.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_CDF,CMP,102.0,Statement Source,Executable,RETURN,0.0,1.0,,return (1 - exp(-x/Theta));
F.MODELS.GPD_CDF,CMP,103.0,Statement Source,Comment,CMT,0.0,101.0,,"/* for Xi ~ 0, exponential */"
F.MODELS.GPD_CDF,CMP,104.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_CDF,CMP,105.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_LOGCDF,CMP,106.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_LOGCDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Xi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"""
F.MODELS.GPD_LOGCDF,CMP,107.0,Prototype,FCmp,MODELS,2.0,,,"><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GPD_LOGCDF,CMP,108.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.979</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_LOGCDF,CMP,109.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GPD_LOGCDF(x, Theta, Xi);"
F.MODELS.GPD_LOGCDF,CMP,110.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GPD_LOGCDF,CMP,111.0,Statement Source,Comment,CMT,0.0,101.0,,/* Xi :    Shape */
F.MODELS.GPD_LOGCDF,CMP,112.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.GPD_LOGCDF,CMP,113.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_LOGCDF,CMP,114.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.GPD_LOGCDF,CMP,115.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.GPD_LOGCDF,CMP,116.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_LOGCDF,CMP,117.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_LOGCDF,CMP,118.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_LOGCDF,CMP,119.0,Statement Source,Executable,IF,0.0,2.0,,if (Xi > 2.220446E-16) then
F.MODELS.GPD_LOGCDF,CMP,120.0,Statement Source,Executable,ASSIGN,0.0,1.0,,/* constant('MACEPS') */ c = (1 + Xi*(x/Theta))**(-1/Xi);
F.MODELS.GPD_LOGCDF,CMP,121.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_LOGCDF,CMP,122.0,Statement Source,Executable,ASSIGN,0.0,1.0,,c = exp(-x/Theta);
F.MODELS.GPD_LOGCDF,CMP,123.0,Statement Source,Comment,CMT,0.0,101.0,,"/* for Xi ~ 0, exponential */"
F.MODELS.GPD_LOGCDF,CMP,124.0,Statement Source,Executable,IF,0.0,2.0,,if (c < 1) then
F.MODELS.GPD_LOGCDF,CMP,125.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log1px(-c));
F.MODELS.GPD_LOGCDF,CMP,126.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_LOGCDF,CMP,127.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.GPD_LOGCDF,CMP,128.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.GPD_LOGCDF,CMP,129.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_LOGCDF,CMP,130.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_PDF,CMP,131.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_PDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Xi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><!"
F.MODELS.GPD_PDF,CMP,132.0,Prototype,FCmp,MODELS,2.0,,,"[CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GPD_PDF,CMP,133.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                   1790266004.98</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_PDF,CMP,134.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GPD_PDF(x, Theta, Xi);"
F.MODELS.GPD_PDF,CMP,135.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GPD_PDF,CMP,136.0,Statement Source,Comment,CMT,0.0,101.0,,/* Xi :    Shape */
F.MODELS.GPD_PDF,CMP,137.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.GPD_PDF,CMP,138.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_PDF,CMP,139.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.GPD_PDF,CMP,140.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_PDF,CMP,141.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_PDF,CMP,142.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_PDF,CMP,143.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"logpdf = GPD_LOGPDF(x, Theta, Xi);"
F.MODELS.GPD_PDF,CMP,144.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(logpdf)) then
F.MODELS.GPD_PDF,CMP,145.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.GPD_PDF,CMP,146.0,Statement Source,Executable,IF,0.0,2.0,,if (logpdf < 174.673089) then
F.MODELS.GPD_PDF,CMP,147.0,Statement Source,Executable,RETURN,0.0,1.0,,/* constant('LOGBIG') */ return ( exp(logpdf) );
F.MODELS.GPD_PDF,CMP,148.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_PDF,CMP,149.0,Statement Source,Executable,RETURN,0.0,1.0,,return ( 7.237005E75 );
F.MODELS.GPD_PDF,CMP,150.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('BIG') */
F.MODELS.GPD_PDF,CMP,151.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_PDF,CMP,152.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_LOGPDF,CMP,153.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_LOGPDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Xi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"""
F.MODELS.GPD_LOGPDF,CMP,154.0,Prototype,FCmp,MODELS,2.0,,,"><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.GPD_LOGPDF,CMP,155.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.984</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_LOGPDF,CMP,156.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function GPD_LOGPDF(x, Theta, Xi);"
F.MODELS.GPD_LOGPDF,CMP,157.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.GPD_LOGPDF,CMP,158.0,Statement Source,Comment,CMT,0.0,101.0,,/* Xi :    Shape */
F.MODELS.GPD_LOGPDF,CMP,159.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.GPD_LOGPDF,CMP,160.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_LOGPDF,CMP,161.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.GPD_LOGPDF,CMP,162.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.GPD_LOGPDF,CMP,163.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_LOGPDF,CMP,164.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_LOGPDF,CMP,165.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.GPD_LOGPDF,CMP,166.0,Statement Source,Executable,IF,0.0,2.0,,if (Xi > 2.220446E-16) then
F.MODELS.GPD_LOGPDF,CMP,167.0,Statement Source,Executable,ASSIGN,0.0,1.0,,/* constant('MACEPS') */ logpdf = (-1-(1/Xi)) * log1px(Xi*(x/Theta)) - log(Theta);
F.MODELS.GPD_LOGPDF,CMP,168.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.GPD_LOGPDF,CMP,169.0,Statement Source,Executable,ASSIGN,0.0,1.0,,logpdf = -x/Theta - log(Theta);
F.MODELS.GPD_LOGPDF,CMP,170.0,Statement Source,Comment,CMT,0.0,101.0,,"/* for Xi ~ 0, exponential */"
F.MODELS.GPD_LOGPDF,CMP,171.0,Statement Source,Executable,RETURN,0.0,1.0,,return (logpdf);
F.MODELS.GPD_LOGPDF,CMP,172.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.GPD_LOGPDF,CMP,173.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_PARMCOUNT,CMP,174.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_PARMCOUNT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.GPD_PARMCOUNT,CMP,175.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.985</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_PARMCOUNT,CMP,176.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function GPD_PARMCOUNT();
F.MODELS.GPD_PARMCOUNT,CMP,177.0,Statement Source,Executable,RETURN,0.0,1.0,,return(2);
F.MODELS.GPD_PARMCOUNT,CMP,178.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_DESCRIPTION,CMP,179.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[GPD_DESCRIPTION]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">32</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.GPD_DESCRIPTION,CMP,180.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266004.985</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:45]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.GPD_DESCRIPTION,CMP,181.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function GPD_DESCRIPTION() $32;
F.MODELS.GPD_DESCRIPTION,CMP,182.0,Statement Source,Declarative,LENGTH,0.0,102.0,,length model $32;
F.MODELS.GPD_DESCRIPTION,CMP,183.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"model = ""Generalized Pareto Distribution"";"
F.MODELS.GPD_DESCRIPTION,CMP,184.0,Statement Source,Executable,RETURN,0.0,1.0,,return(model);
F.MODELS.GPD_DESCRIPTION,CMP,185.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.GPD_DESCRIPTION,CMP,186.0,Symbol,,_GPD_DESCRIPTION_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_GPD_DESCRIPTION_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.GPD_DESCRIPTION,CMP,187.0,Symbol,,model,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[model]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.IGAUSS_MEAN,CMP,0.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_MEAN]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Ty"
F.MODELS.IGAUSS_MEAN,CMP,1.0,Prototype,FCmp,MODELS,2.0,,,"pe""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.IGAUSS_MEAN,CMP,2.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                   1790266005.56</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_MEAN,CMP,3.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function IGAUSS_MEAN(x, Theta, Alpha);"
F.MODELS.IGAUSS_MEAN,CMP,4.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Theta);
F.MODELS.IGAUSS_MEAN,CMP,5.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_QUANTILE,CMP,6.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_QUANTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n"
F.MODELS.IGAUSS_QUANTILE,CMP,7.0,Prototype,FCmp,MODELS,2.0,,,"=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.IGAUSS_QUANTILE,CMP,8.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266005.561</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_QUANTILE,CMP,9.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function IGAUSS_QUANTILE(p, Theta, Alpha);"
F.MODELS.IGAUSS_QUANTILE,CMP,10.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.IGAUSS_QUANTILE,CMP,11.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.IGAUSS_QUANTILE,CMP,12.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Lambda = Alpha * Theta;
F.MODELS.IGAUSS_QUANTILE,CMP,13.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (quantile('IGAUSS', p, Lambda, Theta));"
F.MODELS.IGAUSS_QUANTILE,CMP,14.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_PARMINIT,CMP,15.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_PARMINIT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N"
F.MODELS.IGAUSS_PARMINIT,CMP,16.0,Prototype,FCmp,MODELS,1.0,,,"n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDAT"
F.MODELS.IGAUSS_PARMINIT,CMP,17.0,Prototype,FCmp,MODELS,2.0,,,"A[Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.IGAUSS_PARMINIT,CMP,18.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266005.562</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_PARMINIT,CMP,19.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine IGAUSS_PARMINIT(dim, x[*], nx[*], F[*], Ftype, Theta, Alpha);"
F.MODELS.IGAUSS_PARMINIT,CMP,20.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs Theta, Alpha;"
F.MODELS.IGAUSS_PARMINIT,CMP,21.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array m[2] / nosymbols;
F.MODELS.IGAUSS_PARMINIT,CMP,22.0,Statement Source,Comment,CMT,0.0,101.0,,/* Use Method of Moments */
F.MODELS.IGAUSS_PARMINIT,CMP,23.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_rawmoments(dim, x, nx, 2, m);"
F.MODELS.IGAUSS_PARMINIT,CMP,24.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(m[1])) then
F.MODELS.IGAUSS_PARMINIT,CMP,25.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.IGAUSS_PARMINIT,CMP,26.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = .;
F.MODELS.IGAUSS_PARMINIT,CMP,27.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = .;
F.MODELS.IGAUSS_PARMINIT,CMP,28.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.IGAUSS_PARMINIT,CMP,29.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.IGAUSS_PARMINIT,CMP,30.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.IGAUSS_PARMINIT,CMP,31.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = m[1];
F.MODELS.IGAUSS_PARMINIT,CMP,32.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t1 = m[2] - m[1]**2;
F.MODELS.IGAUSS_PARMINIT,CMP,33.0,Statement Source,Executable,IF,0.0,2.0,,if (t1 < 2.220446E-16) then
F.MODELS.IGAUSS_PARMINIT,CMP,34.0,Statement Source,Executable,ASSIGN,0.0,1.0,,/* constant('MACEPS') */ Alpha = 1;
F.MODELS.IGAUSS_PARMINIT,CMP,35.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.IGAUSS_PARMINIT,CMP,36.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = m[1]**2/t1;
F.MODELS.IGAUSS_PARMINIT,CMP,37.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.IGAUSS_PARMINIT,CMP,38.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_SDF,CMP,39.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_SDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Typ"
F.MODELS.IGAUSS_SDF,CMP,40.0,Prototype,FCmp,MODELS,2.0,,,"e""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.IGAUSS_SDF,CMP,41.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266005.564</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_SDF,CMP,42.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function IGAUSS_SDF(x, Theta, Alpha);"
F.MODELS.IGAUSS_SDF,CMP,43.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.IGAUSS_SDF,CMP,44.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.IGAUSS_SDF,CMP,45.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"cdf = IGAUSS_CDF(x, Theta, Alpha);"
F.MODELS.IGAUSS_SDF,CMP,46.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(cdf)) then
F.MODELS.IGAUSS_SDF,CMP,47.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.IGAUSS_SDF,CMP,48.0,Statement Source,Executable,RETURN,0.0,1.0,,return (1-cdf);
F.MODELS.IGAUSS_SDF,CMP,49.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_LOGSDF,CMP,50.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_LOGSDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n="""
F.MODELS.IGAUSS_LOGSDF,CMP,51.0,Prototype,FCmp,MODELS,2.0,,,"Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.IGAUSS_LOGSDF,CMP,52.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266005.564</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_LOGSDF,CMP,53.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function IGAUSS_LOGSDF(x, Theta, Alpha);"
F.MODELS.IGAUSS_LOGSDF,CMP,54.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.IGAUSS_LOGSDF,CMP,55.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.IGAUSS_LOGSDF,CMP,56.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"cdf = IGAUSS_CDF(x, Theta, Alpha);"
F.MODELS.IGAUSS_LOGSDF,CMP,57.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(cdf)) then
F.MODELS.IGAUSS_LOGSDF,CMP,58.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.IGAUSS_LOGSDF,CMP,59.0,Statement Source,Executable,IF,0.0,2.0,,if (cdf < 1) then
F.MODELS.IGAUSS_LOGSDF,CMP,60.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log1px(-cdf));
F.MODELS.IGAUSS_LOGSDF,CMP,61.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.IGAUSS_LOGSDF,CMP,62.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.IGAUSS_LOGSDF,CMP,63.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.IGAUSS_LOGSDF,CMP,64.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_LOGCDF,CMP,65.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_LOGCDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n="""
F.MODELS.IGAUSS_LOGCDF,CMP,66.0,Prototype,FCmp,MODELS,2.0,,,"Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.IGAUSS_LOGCDF,CMP,67.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266005.565</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_LOGCDF,CMP,68.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function IGAUSS_LOGCDF(x, Theta, Alpha);"
F.MODELS.IGAUSS_LOGCDF,CMP,69.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.IGAUSS_LOGCDF,CMP,70.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.IGAUSS_LOGCDF,CMP,71.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"cdf = IGAUSS_CDF(x, Theta, Alpha);"
F.MODELS.IGAUSS_LOGCDF,CMP,72.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(cdf)) then
F.MODELS.IGAUSS_LOGCDF,CMP,73.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.IGAUSS_LOGCDF,CMP,74.0,Statement Source,Executable,IF,0.0,2.0,,if (cdf > 0) then
F.MODELS.IGAUSS_LOGCDF,CMP,75.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log(cdf));
F.MODELS.IGAUSS_LOGCDF,CMP,76.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.IGAUSS_LOGCDF,CMP,77.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.IGAUSS_LOGCDF,CMP,78.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.IGAUSS_LOGCDF,CMP,79.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_CDF,CMP,80.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_CDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Ty"
F.MODELS.IGAUSS_CDF,CMP,81.0,Prototype,FCmp,MODELS,2.0,,,"pe""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.IGAUSS_CDF,CMP,82.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266005.566</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_CDF,CMP,83.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function IGAUSS_CDF(x, Theta, Alpha);"
F.MODELS.IGAUSS_CDF,CMP,84.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.IGAUSS_CDF,CMP,85.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.IGAUSS_CDF,CMP,86.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.IGAUSS_CDF,CMP,87.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.IGAUSS_CDF,CMP,88.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.IGAUSS_CDF,CMP,89.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = (x/Theta);
F.MODELS.IGAUSS_CDF,CMP,90.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t = sqrt(Alpha/z);
F.MODELS.IGAUSS_CDF,CMP,91.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"t1 = CDF('NORMAL',((z-1)*t));"
F.MODELS.IGAUSS_CDF,CMP,92.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"t2 = CDF('NORMAL',(-(z+1)*t));"
F.MODELS.IGAUSS_CDF,CMP,93.0,Statement Source,Executable,IF,0.0,2.0,,if (t2 <= 2.220446E-16) then
F.MODELS.IGAUSS_CDF,CMP,94.0,Statement Source,Executable,RETURN,0.0,1.0,,/* constant('MACEPS') */ return (t1);
F.MODELS.IGAUSS_CDF,CMP,95.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.IGAUSS_CDF,CMP,96.0,Statement Source,Executable,RETURN,0.0,1.0,,return (t1 + exp(2*Alpha) * t2);
F.MODELS.IGAUSS_CDF,CMP,97.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.IGAUSS_CDF,CMP,98.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.IGAUSS_CDF,CMP,99.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.IGAUSS_CDF,CMP,100.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_PDF,CMP,101.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_PDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Ty"
F.MODELS.IGAUSS_PDF,CMP,102.0,Prototype,FCmp,MODELS,2.0,,,"pe""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.IGAUSS_PDF,CMP,103.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266005.567</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_PDF,CMP,104.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function IGAUSS_PDF(x, Theta, Alpha);"
F.MODELS.IGAUSS_PDF,CMP,105.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.IGAUSS_PDF,CMP,106.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.IGAUSS_PDF,CMP,107.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.IGAUSS_PDF,CMP,108.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.IGAUSS_PDF,CMP,109.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.IGAUSS_PDF,CMP,110.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = x/Theta;
F.MODELS.IGAUSS_PDF,CMP,111.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pi = 3.14159265358979323846;
F.MODELS.IGAUSS_PDF,CMP,112.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('PI') */
F.MODELS.IGAUSS_PDF,CMP,113.0,Statement Source,Executable,RETURN,0.0,1.0,,return (sqrt(1.0/(2 * pi * z**2 * (z/Alpha))) * exp(-(Alpha/z)*((z-1)**2)/2) / Theta);
F.MODELS.IGAUSS_PDF,CMP,114.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.IGAUSS_PDF,CMP,115.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.IGAUSS_PDF,CMP,116.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.IGAUSS_PDF,CMP,117.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_LOGPDF,CMP,118.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_LOGPDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n="
F.MODELS.IGAUSS_LOGPDF,CMP,119.0,Prototype,FCmp,MODELS,2.0,,,"""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.IGAUSS_LOGPDF,CMP,120.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266005.568</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_LOGPDF,CMP,121.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function IGAUSS_LOGPDF(x, Theta, Alpha);"
F.MODELS.IGAUSS_LOGPDF,CMP,122.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.IGAUSS_LOGPDF,CMP,123.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.IGAUSS_LOGPDF,CMP,124.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.IGAUSS_LOGPDF,CMP,125.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.IGAUSS_LOGPDF,CMP,126.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.IGAUSS_LOGPDF,CMP,127.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = x/Theta;
F.MODELS.IGAUSS_LOGPDF,CMP,128.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pi = 3.14159265358979323846;
F.MODELS.IGAUSS_LOGPDF,CMP,129.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('PI') */
F.MODELS.IGAUSS_LOGPDF,CMP,130.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0.5 * (log(Alpha) - log(2 * pi) - 3 * log(z)) - Alpha*(z-1)**2/(2*z) - log(Theta));
F.MODELS.IGAUSS_LOGPDF,CMP,131.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.IGAUSS_LOGPDF,CMP,132.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.IGAUSS_LOGPDF,CMP,133.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.IGAUSS_LOGPDF,CMP,134.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.IGAUSS_LOGPDF,CMP,135.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_PARMCOUNT,CMP,136.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_PARMCOUNT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.IGAUSS_PARMCOUNT,CMP,137.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266005.569</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_PARMCOUNT,CMP,138.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function IGAUSS_PARMCOUNT();
F.MODELS.IGAUSS_PARMCOUNT,CMP,139.0,Statement Source,Executable,RETURN,0.0,1.0,,return(2);
F.MODELS.IGAUSS_PARMCOUNT,CMP,140.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_DESCRIPTION,CMP,141.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[IGAUSS_DESCRIPTION]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">32</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.IGAUSS_DESCRIPTION,CMP,142.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266005.572</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.IGAUSS_DESCRIPTION,CMP,143.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function IGAUSS_DESCRIPTION() $32;
F.MODELS.IGAUSS_DESCRIPTION,CMP,144.0,Statement Source,Declarative,LENGTH,0.0,102.0,,length model $32;
F.MODELS.IGAUSS_DESCRIPTION,CMP,145.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"model = ""Inverse Gaussian Distribution"";"
F.MODELS.IGAUSS_DESCRIPTION,CMP,146.0,Statement Source,Executable,RETURN,0.0,1.0,,return(model);
F.MODELS.IGAUSS_DESCRIPTION,CMP,147.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.IGAUSS_DESCRIPTION,CMP,148.0,Symbol,,_IGAUSS_DESCRIPTION_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_IGAUSS_DESCRIPTION_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.IGAUSS_DESCRIPTION,CMP,149.0,Symbol,,model,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[model]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.LOGN_MEAN,CMP,0.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_MEAN]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Sigma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><"
F.MODELS.LOGN_MEAN,CMP,1.0,Prototype,FCmp,MODELS,2.0,,,"![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.LOGN_MEAN,CMP,2.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.108</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_MEAN,CMP,3.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function LOGN_MEAN(x, Mu, Sigma);"
F.MODELS.LOGN_MEAN,CMP,4.0,Statement Source,Executable,RETURN,0.0,1.0,,return (exp(Mu + Sigma*Sigma/2.0));
F.MODELS.LOGN_MEAN,CMP,5.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_QUANTILE,CMP,6.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_QUANTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Sigma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Typ"
F.MODELS.LOGN_QUANTILE,CMP,7.0,Prototype,FCmp,MODELS,2.0,,,"e""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.LOGN_QUANTILE,CMP,8.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.109</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_QUANTILE,CMP,9.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function LOGN_QUANTILE(p, Mu, Sigma);"
F.MODELS.LOGN_QUANTILE,CMP,10.0,Statement Source,Comment,CMT,0.0,101.0,,/* Mu    : Location (exp(Scale)) */
F.MODELS.LOGN_QUANTILE,CMP,11.0,Statement Source,Comment,CMT,0.0,101.0,,/* Sigma : Shape */
F.MODELS.LOGN_QUANTILE,CMP,12.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"qn = quantile('NORMAL',p);"
F.MODELS.LOGN_QUANTILE,CMP,13.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(qn)) then
F.MODELS.LOGN_QUANTILE,CMP,14.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.LOGN_QUANTILE,CMP,15.0,Statement Source,Executable,RETURN,0.0,1.0,,return (exp(Mu + Sigma*qn));
F.MODELS.LOGN_QUANTILE,CMP,16.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_LOWERBOUNDS,CMP,17.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_LOWERBOUNDS]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[Sigma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.LOGN_LOWERBOUNDS,CMP,18.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.109</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_LOWERBOUNDS,CMP,19.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine LOGN_LOWERBOUNDS(Mu, Sigma);"
F.MODELS.LOGN_LOWERBOUNDS,CMP,20.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs Mu, Sigma;"
F.MODELS.LOGN_LOWERBOUNDS,CMP,21.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Mu = .;
F.MODELS.LOGN_LOWERBOUNDS,CMP,22.0,Statement Source,Comment,CMT,0.0,101.0,,/* Mu unrestricted from below */
F.MODELS.LOGN_LOWERBOUNDS,CMP,23.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Sigma = 0;
F.MODELS.LOGN_LOWERBOUNDS,CMP,24.0,Statement Source,Comment,CMT,0.0,101.0,,/* Sigma > 0 */
F.MODELS.LOGN_LOWERBOUNDS,CMP,25.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_PARMINIT,CMP,26.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_PARMINIT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n="
F.MODELS.LOGN_PARMINIT,CMP,27.0,Prototype,FCmp,MODELS,1.0,,,"""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA["
F.MODELS.LOGN_PARMINIT,CMP,28.0,Prototype,FCmp,MODELS,2.0,,,"Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[Sigma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.LOGN_PARMINIT,CMP,29.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                   1790266006.11</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_PARMINIT,CMP,30.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine LOGN_PARMINIT(dim, x[*], nx[*], F[*], Ftype, Mu, Sigma);"
F.MODELS.LOGN_PARMINIT,CMP,31.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs Mu, Sigma;"
F.MODELS.LOGN_PARMINIT,CMP,32.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array m[2] / nosymbols;
F.MODELS.LOGN_PARMINIT,CMP,33.0,Statement Source,Comment,CMT,0.0,101.0,,/* Use Method of Moments */
F.MODELS.LOGN_PARMINIT,CMP,34.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_rawmoments(dim, x, nx, 2, m);"
F.MODELS.LOGN_PARMINIT,CMP,35.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(m[1])) then
F.MODELS.LOGN_PARMINIT,CMP,36.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.LOGN_PARMINIT,CMP,37.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Mu = .;
F.MODELS.LOGN_PARMINIT,CMP,38.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Sigma = .;
F.MODELS.LOGN_PARMINIT,CMP,39.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.LOGN_PARMINIT,CMP,40.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.LOGN_PARMINIT,CMP,41.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.LOGN_PARMINIT,CMP,42.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t1 = log(m[2]) - 2*log(m[1]);
F.MODELS.LOGN_PARMINIT,CMP,43.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Mu = log(m[1]) - t1/2;
F.MODELS.LOGN_PARMINIT,CMP,44.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Sigma = sqrt(t1);
F.MODELS.LOGN_PARMINIT,CMP,45.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.LOGN_PARMINIT,CMP,46.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_SCALETRANSFORM,CMP,47.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_SCALETRANSFORM]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">32</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.LOGN_SCALETRANSFORM,CMP,48.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.111</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_SCALETRANSFORM,CMP,49.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function LOGN_SCALETRANSFORM() $32;
F.MODELS.LOGN_SCALETRANSFORM,CMP,50.0,Statement Source,Declarative,LENGTH,0.0,102.0,,length xform $32;
F.MODELS.LOGN_SCALETRANSFORM,CMP,51.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"xform = ""LOG"";"
F.MODELS.LOGN_SCALETRANSFORM,CMP,52.0,Statement Source,Executable,RETURN,0.0,1.0,,return (xform);
F.MODELS.LOGN_SCALETRANSFORM,CMP,53.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_SCALETRANSFORM,CMP,54.0,Symbol,,_LOGN_SCALETRANSFORM_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_LOGN_SCALETRANSFORM_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.LOGN_SCALETRANSFORM,CMP,55.0,Symbol,,xform,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[xform]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.LOGN_SDF,CMP,56.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_SDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Sigma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><!"
F.MODELS.LOGN_SDF,CMP,57.0,Prototype,FCmp,MODELS,2.0,,,"[CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.LOGN_SDF,CMP,58.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.112</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_SDF,CMP,59.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function LOGN_SDF(x, Mu, Sigma);"
F.MODELS.LOGN_SDF,CMP,60.0,Statement Source,Comment,CMT,0.0,101.0,,/* Mu    : Location (exp(Scale)) */
F.MODELS.LOGN_SDF,CMP,61.0,Statement Source,Comment,CMT,0.0,101.0,,/* Sigma : Shape */
F.MODELS.LOGN_SDF,CMP,62.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (SDF('LOGN', x, Mu, Sigma));"
F.MODELS.LOGN_SDF,CMP,63.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_LOGSDF,CMP,64.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_LOGSDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Sigma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"""
F.MODELS.LOGN_LOGSDF,CMP,65.0,Prototype,FCmp,MODELS,2.0,,,"><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.LOGN_LOGSDF,CMP,66.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.113</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_LOGSDF,CMP,67.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function LOGN_LOGSDF(x, Mu, Sigma);"
F.MODELS.LOGN_LOGSDF,CMP,68.0,Statement Source,Comment,CMT,0.0,101.0,,/* Mu    : Location (exp(Scale)) */
F.MODELS.LOGN_LOGSDF,CMP,69.0,Statement Source,Comment,CMT,0.0,101.0,,/* Sigma : Shape */
F.MODELS.LOGN_LOGSDF,CMP,70.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"c = CDF('LOGN', x, Mu, Sigma);"
F.MODELS.LOGN_LOGSDF,CMP,71.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(c)) then
F.MODELS.LOGN_LOGSDF,CMP,72.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.LOGN_LOGSDF,CMP,73.0,Statement Source,Executable,IF,0.0,2.0,,if (c < 1) then
F.MODELS.LOGN_LOGSDF,CMP,74.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log1px(-c));
F.MODELS.LOGN_LOGSDF,CMP,75.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.LOGN_LOGSDF,CMP,76.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.LOGN_LOGSDF,CMP,77.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.LOGN_LOGSDF,CMP,78.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_CDF,CMP,79.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_CDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Sigma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><!"
F.MODELS.LOGN_CDF,CMP,80.0,Prototype,FCmp,MODELS,2.0,,,"[CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.LOGN_CDF,CMP,81.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.114</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_CDF,CMP,82.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function LOGN_CDF(x, Mu, Sigma);"
F.MODELS.LOGN_CDF,CMP,83.0,Statement Source,Comment,CMT,0.0,101.0,,/* Mu    : Location (exp(Scale)) */
F.MODELS.LOGN_CDF,CMP,84.0,Statement Source,Comment,CMT,0.0,101.0,,/* Sigma : Shape */
F.MODELS.LOGN_CDF,CMP,85.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (CDF('LOGN', x, Mu, Sigma));"
F.MODELS.LOGN_CDF,CMP,86.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_LOGCDF,CMP,87.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_LOGCDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Sigma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"""
F.MODELS.LOGN_LOGCDF,CMP,88.0,Prototype,FCmp,MODELS,2.0,,,"><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.LOGN_LOGCDF,CMP,89.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.115</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_LOGCDF,CMP,90.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function LOGN_LOGCDF(x, Mu, Sigma);"
F.MODELS.LOGN_LOGCDF,CMP,91.0,Statement Source,Comment,CMT,0.0,101.0,,/* Mu    : Location (exp(Scale)) */
F.MODELS.LOGN_LOGCDF,CMP,92.0,Statement Source,Comment,CMT,0.0,101.0,,/* Sigma : Shape */
F.MODELS.LOGN_LOGCDF,CMP,93.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"c = CDF('LOGN', x, Mu, Sigma);"
F.MODELS.LOGN_LOGCDF,CMP,94.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(c)) then
F.MODELS.LOGN_LOGCDF,CMP,95.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.LOGN_LOGCDF,CMP,96.0,Statement Source,Executable,IF,0.0,2.0,,if (c > 0) then
F.MODELS.LOGN_LOGCDF,CMP,97.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log(c));
F.MODELS.LOGN_LOGCDF,CMP,98.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.LOGN_LOGCDF,CMP,99.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.LOGN_LOGCDF,CMP,100.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.LOGN_LOGCDF,CMP,101.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_PDF,CMP,102.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_PDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Sigma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><"
F.MODELS.LOGN_PDF,CMP,103.0,Prototype,FCmp,MODELS,2.0,,,"![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.LOGN_PDF,CMP,104.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.116</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_PDF,CMP,105.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function LOGN_PDF(x, Mu, Sigma);"
F.MODELS.LOGN_PDF,CMP,106.0,Statement Source,Comment,CMT,0.0,101.0,,/* Mu    : Location (exp(Scale)) */
F.MODELS.LOGN_PDF,CMP,107.0,Statement Source,Comment,CMT,0.0,101.0,,/* Sigma : Shape */
F.MODELS.LOGN_PDF,CMP,108.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.LOGN_PDF,CMP,109.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.LOGN_PDF,CMP,110.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.LOGN_PDF,CMP,111.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = (log(x) - Mu)/Sigma;
F.MODELS.LOGN_PDF,CMP,112.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pi = 3.14159265358979323846;
F.MODELS.LOGN_PDF,CMP,113.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('PI') */
F.MODELS.LOGN_PDF,CMP,114.0,Statement Source,Executable,RETURN,0.0,1.0,,return (exp(-(z**2)/2)/(x * Sigma * sqrt(2 * pi)));
F.MODELS.LOGN_PDF,CMP,115.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.LOGN_PDF,CMP,116.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.LOGN_PDF,CMP,117.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.LOGN_PDF,CMP,118.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_LOGPDF,CMP,119.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_LOGPDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Sigma]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"
F.MODELS.LOGN_LOGPDF,CMP,120.0,Prototype,FCmp,MODELS,2.0,,,"""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.LOGN_LOGPDF,CMP,121.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.117</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_LOGPDF,CMP,122.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function LOGN_LOGPDF(x, Mu, Sigma);"
F.MODELS.LOGN_LOGPDF,CMP,123.0,Statement Source,Comment,CMT,0.0,101.0,,/* Mu    : Location (exp(Scale)) */
F.MODELS.LOGN_LOGPDF,CMP,124.0,Statement Source,Comment,CMT,0.0,101.0,,/* Sigma : Shape */
F.MODELS.LOGN_LOGPDF,CMP,125.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.LOGN_LOGPDF,CMP,126.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.LOGN_LOGPDF,CMP,127.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.LOGN_LOGPDF,CMP,128.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lx = log(x);
F.MODELS.LOGN_LOGPDF,CMP,129.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = (lx - Mu)/Sigma;
F.MODELS.LOGN_LOGPDF,CMP,130.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pi = 3.14159265358979323846;
F.MODELS.LOGN_LOGPDF,CMP,131.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('PI') */
F.MODELS.LOGN_LOGPDF,CMP,132.0,Statement Source,Executable,RETURN,0.0,1.0,,return (- lx - log(Sigma) - 0.5 * log(2 * pi) - 0.5 * z**2);
F.MODELS.LOGN_LOGPDF,CMP,133.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.LOGN_LOGPDF,CMP,134.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.LOGN_LOGPDF,CMP,135.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.LOGN_LOGPDF,CMP,136.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.LOGN_LOGPDF,CMP,137.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_PARMCOUNT,CMP,138.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_PARMCOUNT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.LOGN_PARMCOUNT,CMP,139.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.118</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_PARMCOUNT,CMP,140.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function LOGN_PARMCOUNT();
F.MODELS.LOGN_PARMCOUNT,CMP,141.0,Statement Source,Executable,RETURN,0.0,1.0,,return(2);
F.MODELS.LOGN_PARMCOUNT,CMP,142.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_DESCRIPTION,CMP,143.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[LOGN_DESCRIPTION]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">32</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.LOGN_DESCRIPTION,CMP,144.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                   1790266006.12</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:46]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.LOGN_DESCRIPTION,CMP,145.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function LOGN_DESCRIPTION() $32;
F.MODELS.LOGN_DESCRIPTION,CMP,146.0,Statement Source,Declarative,LENGTH,0.0,102.0,,length model $32;
F.MODELS.LOGN_DESCRIPTION,CMP,147.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"model = ""Lognormal Distribution"";"
F.MODELS.LOGN_DESCRIPTION,CMP,148.0,Statement Source,Executable,RETURN,0.0,1.0,,return(model);
F.MODELS.LOGN_DESCRIPTION,CMP,149.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.LOGN_DESCRIPTION,CMP,150.0,Symbol,,_LOGN_DESCRIPTION_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_LOGN_DESCRIPTION_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.LOGN_DESCRIPTION,CMP,151.0,Symbol,,model,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[model]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.PARETO_MEAN,CMP,0.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_MEAN]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Ty"
F.MODELS.PARETO_MEAN,CMP,1.0,Prototype,FCmp,MODELS,2.0,,,"pe""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.PARETO_MEAN,CMP,2.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.646</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_MEAN,CMP,3.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function PARETO_MEAN(x, Theta, Alpha);"
F.MODELS.PARETO_MEAN,CMP,4.0,Statement Source,Executable,IF,0.0,2.0,,if not(Alpha > 1) then
F.MODELS.PARETO_MEAN,CMP,5.0,Statement Source,Executable,RETURN,0.0,1.0,,return (.);
F.MODELS.PARETO_MEAN,CMP,6.0,Statement Source,Comment,CMT,0.0,101.0,,/* first moment does not exist */
F.MODELS.PARETO_MEAN,CMP,7.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Theta/(Alpha - 1));
F.MODELS.PARETO_MEAN,CMP,8.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_QUANTILE,CMP,9.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_QUANTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n"
F.MODELS.PARETO_QUANTILE,CMP,10.0,Prototype,FCmp,MODELS,2.0,,,"=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.PARETO_QUANTILE,CMP,11.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.647</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_QUANTILE,CMP,12.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function PARETO_QUANTILE(p, Theta, Alpha);"
F.MODELS.PARETO_QUANTILE,CMP,13.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.PARETO_QUANTILE,CMP,14.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.PARETO_QUANTILE,CMP,15.0,Statement Source,Executable,RETURN,0.0,1.0,,return (((1-p)**(-1/Alpha)-1)*Theta);
F.MODELS.PARETO_QUANTILE,CMP,16.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_PARMINIT,CMP,17.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_PARMINIT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N"
F.MODELS.PARETO_PARMINIT,CMP,18.0,Prototype,FCmp,MODELS,1.0,,,"n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDAT"
F.MODELS.PARETO_PARMINIT,CMP,19.0,Prototype,FCmp,MODELS,2.0,,,"A[Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.PARETO_PARMINIT,CMP,20.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.647</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_PARMINIT,CMP,21.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine PARETO_PARMINIT(dim, x[*], nx[*], F[*], Ftype, Theta, Alpha);"
F.MODELS.PARETO_PARMINIT,CMP,22.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs Theta, Alpha;"
F.MODELS.PARETO_PARMINIT,CMP,23.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array m[2] / nosymbols;
F.MODELS.PARETO_PARMINIT,CMP,24.0,Statement Source,Comment,CMT,0.0,101.0,,/* Use Method of Moments */
F.MODELS.PARETO_PARMINIT,CMP,25.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_rawmoments(dim, x, nx, 2, m);"
F.MODELS.PARETO_PARMINIT,CMP,26.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(m[1])) then
F.MODELS.PARETO_PARMINIT,CMP,27.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.PARETO_PARMINIT,CMP,28.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = .;
F.MODELS.PARETO_PARMINIT,CMP,29.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = .;
F.MODELS.PARETO_PARMINIT,CMP,30.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.PARETO_PARMINIT,CMP,31.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.PARETO_PARMINIT,CMP,32.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.PARETO_PARMINIT,CMP,33.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t1 = m[2] - m[1]**2;
F.MODELS.PARETO_PARMINIT,CMP,34.0,Statement Source,Executable,ASSIGN,0.0,1.0,,t2 = 2*t1 - m[2];
F.MODELS.PARETO_PARMINIT,CMP,35.0,Statement Source,Executable,ASSIGN,0.0,1.0,,eps = 2.220446E-16;
F.MODELS.PARETO_PARMINIT,CMP,36.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.PARETO_PARMINIT,CMP,37.0,Statement Source,Executable,IF,0.0,2.0,,if (t1 < eps or t2 < eps) then
F.MODELS.PARETO_PARMINIT,CMP,38.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.PARETO_PARMINIT,CMP,39.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = m[1];
F.MODELS.PARETO_PARMINIT,CMP,40.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = 2;
F.MODELS.PARETO_PARMINIT,CMP,41.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.PARETO_PARMINIT,CMP,42.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.PARETO_PARMINIT,CMP,43.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.PARETO_PARMINIT,CMP,44.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = (m[1]*m[2])/t2;
F.MODELS.PARETO_PARMINIT,CMP,45.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Alpha = (2*t1)/t2;
F.MODELS.PARETO_PARMINIT,CMP,46.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.PARETO_PARMINIT,CMP,47.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.PARETO_PARMINIT,CMP,48.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_SDF,CMP,49.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_SDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Ty"
F.MODELS.PARETO_SDF,CMP,50.0,Prototype,FCmp,MODELS,2.0,,,"pe""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.PARETO_SDF,CMP,51.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.649</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_SDF,CMP,52.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function PARETO_SDF(x, Theta, Alpha);"
F.MODELS.PARETO_SDF,CMP,53.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.PARETO_SDF,CMP,54.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.PARETO_SDF,CMP,55.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.PARETO_SDF,CMP,56.0,Statement Source,Executable,RETURN,0.0,1.0,,return (1);
F.MODELS.PARETO_SDF,CMP,57.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.PARETO_SDF,CMP,58.0,Statement Source,Executable,RETURN,0.0,1.0,,return ((1 + x/Theta)**(-Alpha));
F.MODELS.PARETO_SDF,CMP,59.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_LOGSDF,CMP,60.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_LOGSDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n="
F.MODELS.PARETO_LOGSDF,CMP,61.0,Prototype,FCmp,MODELS,2.0,,,"""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.PARETO_LOGSDF,CMP,62.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.649</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_LOGSDF,CMP,63.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function PARETO_LOGSDF(x, Theta, Alpha);"
F.MODELS.PARETO_LOGSDF,CMP,64.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.PARETO_LOGSDF,CMP,65.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.PARETO_LOGSDF,CMP,66.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.PARETO_LOGSDF,CMP,67.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.PARETO_LOGSDF,CMP,68.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.PARETO_LOGSDF,CMP,69.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-Alpha*log1px(x/Theta));
F.MODELS.PARETO_LOGSDF,CMP,70.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_CDF,CMP,71.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_CDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Ty"
F.MODELS.PARETO_CDF,CMP,72.0,Prototype,FCmp,MODELS,2.0,,,"pe""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.PARETO_CDF,CMP,73.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                   1790266006.65</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_CDF,CMP,74.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function PARETO_CDF(x, Theta, Alpha);"
F.MODELS.PARETO_CDF,CMP,75.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.PARETO_CDF,CMP,76.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.PARETO_CDF,CMP,77.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.PARETO_CDF,CMP,78.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.PARETO_CDF,CMP,79.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.PARETO_CDF,CMP,80.0,Statement Source,Executable,RETURN,0.0,1.0,,return (1 - (1 + x/Theta)**(-Alpha));
F.MODELS.PARETO_CDF,CMP,81.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_LOGCDF,CMP,82.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_LOGCDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n="
F.MODELS.PARETO_LOGCDF,CMP,83.0,Prototype,FCmp,MODELS,2.0,,,"""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.PARETO_LOGCDF,CMP,84.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.651</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_LOGCDF,CMP,85.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function PARETO_LOGCDF(x, Theta, Alpha);"
F.MODELS.PARETO_LOGCDF,CMP,86.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.PARETO_LOGCDF,CMP,87.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.PARETO_LOGCDF,CMP,88.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.PARETO_LOGCDF,CMP,89.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.PARETO_LOGCDF,CMP,90.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.PARETO_LOGCDF,CMP,91.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.PARETO_LOGCDF,CMP,92.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.PARETO_LOGCDF,CMP,93.0,Statement Source,Executable,ASSIGN,0.0,1.0,,c = (1 + x/Theta)**(-Alpha);
F.MODELS.PARETO_LOGCDF,CMP,94.0,Statement Source,Executable,IF,0.0,2.0,,if (c < 1) then
F.MODELS.PARETO_LOGCDF,CMP,95.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log1px(-c));
F.MODELS.PARETO_LOGCDF,CMP,96.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.PARETO_LOGCDF,CMP,97.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.PARETO_LOGCDF,CMP,98.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.PARETO_LOGCDF,CMP,99.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.PARETO_LOGCDF,CMP,100.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_PDF,CMP,101.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_PDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Ty"
F.MODELS.PARETO_PDF,CMP,102.0,Prototype,FCmp,MODELS,2.0,,,"pe""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.PARETO_PDF,CMP,103.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.652</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_PDF,CMP,104.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function PARETO_PDF(x, Theta, Alpha);"
F.MODELS.PARETO_PDF,CMP,105.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.PARETO_PDF,CMP,106.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.PARETO_PDF,CMP,107.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.PARETO_PDF,CMP,108.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.PARETO_PDF,CMP,109.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.PARETO_PDF,CMP,110.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.PARETO_PDF,CMP,111.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"logpdf = PARETO_LOGPDF(x, Theta, Alpha);"
F.MODELS.PARETO_PDF,CMP,112.0,Statement Source,Executable,IF,0.0,2.0,,if (logpdf < 174.673089) then
F.MODELS.PARETO_PDF,CMP,113.0,Statement Source,Executable,RETURN,0.0,1.0,,/* constant('LOGBIG') */ return ( exp(logpdf) );
F.MODELS.PARETO_PDF,CMP,114.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.PARETO_PDF,CMP,115.0,Statement Source,Executable,RETURN,0.0,1.0,,return ( 7.237005E75 );
F.MODELS.PARETO_PDF,CMP,116.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('BIG') */
F.MODELS.PARETO_PDF,CMP,117.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.PARETO_PDF,CMP,118.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_LOGPDF,CMP,119.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_LOGPDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Alpha]]></S><S n=""Kind""><![CDATA[v]]></S><S n="
F.MODELS.PARETO_LOGPDF,CMP,120.0,Prototype,FCmp,MODELS,2.0,,,"""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.PARETO_LOGPDF,CMP,121.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.654</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_LOGPDF,CMP,122.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function PARETO_LOGPDF(x, Theta, Alpha);"
F.MODELS.PARETO_LOGPDF,CMP,123.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.PARETO_LOGPDF,CMP,124.0,Statement Source,Comment,CMT,0.0,101.0,,/* Alpha : Shape */
F.MODELS.PARETO_LOGPDF,CMP,125.0,Statement Source,Executable,IF,0.0,2.0,,if (x < 0) then
F.MODELS.PARETO_LOGPDF,CMP,126.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.PARETO_LOGPDF,CMP,127.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.PARETO_LOGPDF,CMP,128.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.PARETO_LOGPDF,CMP,129.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.PARETO_LOGPDF,CMP,130.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log(Alpha/Theta) - (Alpha+1) * log1px(x/Theta));
F.MODELS.PARETO_LOGPDF,CMP,131.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.PARETO_LOGPDF,CMP,132.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_PARMCOUNT,CMP,133.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_PARMCOUNT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.PARETO_PARMCOUNT,CMP,134.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.654</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_PARMCOUNT,CMP,135.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function PARETO_PARMCOUNT();
F.MODELS.PARETO_PARMCOUNT,CMP,136.0,Statement Source,Executable,RETURN,0.0,1.0,,return(2);
F.MODELS.PARETO_PARMCOUNT,CMP,137.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_DESCRIPTION,CMP,138.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[PARETO_DESCRIPTION]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">32</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.PARETO_DESCRIPTION,CMP,139.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266006.655</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.PARETO_DESCRIPTION,CMP,140.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function PARETO_DESCRIPTION() $32;
F.MODELS.PARETO_DESCRIPTION,CMP,141.0,Statement Source,Declarative,LENGTH,0.0,102.0,,length model $32;
F.MODELS.PARETO_DESCRIPTION,CMP,142.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"model = ""Pareto Distribution"";"
F.MODELS.PARETO_DESCRIPTION,CMP,143.0,Statement Source,Executable,RETURN,0.0,1.0,,return(model);
F.MODELS.PARETO_DESCRIPTION,CMP,144.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.PARETO_DESCRIPTION,CMP,145.0,Symbol,,_PARETO_DESCRIPTION_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_PARETO_DESCRIPTION_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.PARETO_DESCRIPTION,CMP,146.0,Symbol,,model,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[model]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.STWEEDIE_MEAN,CMP,0.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_MEAN]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Lambda]]></S><S n=""Kind""><![CDATA[v]]></S><S n="
F.MODELS.STWEEDIE_MEAN,CMP,1.0,Prototype,FCmp,MODELS,2.0,,,"""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[P]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.STWEEDIE_MEAN,CMP,2.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.234</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_MEAN,CMP,3.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function STWEEDIE_MEAN(x, Theta, Lambda, P);"
F.MODELS.STWEEDIE_MEAN,CMP,4.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Theta* Lambda * (2 - P) / (P - 1));
F.MODELS.STWEEDIE_MEAN,CMP,5.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_QUANTILE,CMP,6.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_QUANTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[prob]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[lambda]]></S><S n=""Kind""><![CDATA[v]]></"
F.MODELS.STWEEDIE_QUANTILE,CMP,7.0,Prototype,FCmp,MODELS,2.0,,,"S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.STWEEDIE_QUANTILE,CMP,8.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.237</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_QUANTILE,CMP,9.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function STWEEDIE_QUANTILE(prob, theta, lambda, p);"
F.MODELS.STWEEDIE_QUANTILE,CMP,10.0,Statement Source,Comment,CMT,0.0,101.0,,"/* translate into equivalent Tweedie parms using the following:
            lambda = mu**(2-p)/(phi*(2-p)) --- Poisson mean
            alpha = (2-p)/(p-1)            --- gamma shape
            theta = phi * (p-1) * mu**(p-1)--- gamma scale */"
F.MODELS.STWEEDIE_QUANTILE,CMP,11.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pm1 = p-1;
F.MODELS.STWEEDIE_QUANTILE,CMP,12.0,Statement Source,Executable,ASSIGN,0.0,1.0,,alpha = (2-p)/pm1;
F.MODELS.STWEEDIE_QUANTILE,CMP,13.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mu = theta * alpha * lambda;
F.MODELS.STWEEDIE_QUANTILE,CMP,14.0,Statement Source,Executable,ASSIGN,0.0,1.0,,phi = theta /(pm1 * mu**pm1);
F.MODELS.STWEEDIE_QUANTILE,CMP,15.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.STWEEDIE_QUANTILE,CMP,16.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (quantile('TWEEDIE', prob, p, mu, phi));"
F.MODELS.STWEEDIE_QUANTILE,CMP,17.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_PARMINIT,CMP,18.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_PARMINIT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><"
F.MODELS.STWEEDIE_PARMINIT,CMP,19.0,Prototype,FCmp,MODELS,1.0,,,"N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CD"
F.MODELS.STWEEDIE_PARMINIT,CMP,20.0,Prototype,FCmp,MODELS,1.0,,,"ATA[Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[lambda]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDAT"
F.MODELS.STWEEDIE_PARMINIT,CMP,21.0,Prototype,FCmp,MODELS,2.0,,,"A[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.STWEEDIE_PARMINIT,CMP,22.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.238</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_PARMINIT,CMP,23.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine STWEEDIE_PARMINIT(dim, x[*], nx[*], F[*], Ftype, theta, lambda, p);"
F.MODELS.STWEEDIE_PARMINIT,CMP,24.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs theta, lambda, p;"
F.MODELS.STWEEDIE_PARMINIT,CMP,25.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array m[2] / nosymbols;
F.MODELS.STWEEDIE_PARMINIT,CMP,26.0,Statement Source,Comment,CMT,0.0,101.0,,/* initialize p */
F.MODELS.STWEEDIE_PARMINIT,CMP,27.0,Statement Source,Executable,ASSIGN,0.0,1.0,,gscale = .;
F.MODELS.STWEEDIE_PARMINIT,CMP,28.0,Statement Source,Executable,ASSIGN,0.0,1.0,,alpha = .;
F.MODELS.STWEEDIE_PARMINIT,CMP,29.0,Statement Source,Executable,CALL,0.0,4.0,,"call gamma_parminit(dim, x, nx, F, Ftype, gscale, alpha);"
F.MODELS.STWEEDIE_PARMINIT,CMP,30.0,Statement Source,Executable,IF,0.0,2.0,,if (not(missing(alpha))) then
F.MODELS.STWEEDIE_PARMINIT,CMP,31.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.STWEEDIE_PARMINIT,CMP,32.0,Statement Source,Comment,CMT,0.0,101.0,,/* use approximation in 1<p<2 range of alpha = (2-p)/(p-1) */
F.MODELS.STWEEDIE_PARMINIT,CMP,33.0,Statement Source,Executable,ASSIGN,0.0,1.0,,p = (alpha+2)/(alpha+1);
F.MODELS.STWEEDIE_PARMINIT,CMP,34.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.STWEEDIE_PARMINIT,CMP,35.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.STWEEDIE_PARMINIT,CMP,36.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.STWEEDIE_PARMINIT,CMP,37.0,Statement Source,Executable,ASSIGN,0.0,1.0,,p = 1.5;
F.MODELS.STWEEDIE_PARMINIT,CMP,38.0,Statement Source,Executable,ASSIGN,0.0,1.0,,alpha = 1;
F.MODELS.STWEEDIE_PARMINIT,CMP,39.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.STWEEDIE_PARMINIT,CMP,40.0,Statement Source,Comment,CMT,0.0,101.0,,/* initialize mu and phi */
F.MODELS.STWEEDIE_PARMINIT,CMP,41.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_rawmoments(dim, x, nx, 2, m);"
F.MODELS.STWEEDIE_PARMINIT,CMP,42.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mu = m[1];
F.MODELS.STWEEDIE_PARMINIT,CMP,43.0,Statement Source,Comment,CMT,0.0,101.0,,/* sample mean */
F.MODELS.STWEEDIE_PARMINIT,CMP,44.0,Statement Source,Executable,ASSIGN,0.0,1.0,,v = m[2] - m[1]*m[1];
F.MODELS.STWEEDIE_PARMINIT,CMP,45.0,Statement Source,Comment,CMT,0.0,101.0,,/* sample variance */
F.MODELS.STWEEDIE_PARMINIT,CMP,46.0,Statement Source,Executable,ASSIGN,0.0,1.0,,phi = v/(mu**p);
F.MODELS.STWEEDIE_PARMINIT,CMP,47.0,Statement Source,Comment,CMT,0.0,101.0,,/* use variance = phi*mu**p property of Tweedie */
F.MODELS.STWEEDIE_PARMINIT,CMP,48.0,Statement Source,Executable,ASSIGN,0.0,1.0,,theta = phi * (p-1) * mu**(p-1);
F.MODELS.STWEEDIE_PARMINIT,CMP,49.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lambda = mu/(theta*alpha);
F.MODELS.STWEEDIE_PARMINIT,CMP,50.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_UPPERBOUNDS,CMP,51.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_UPPERBOUNDS]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[lambda]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n"
F.MODELS.STWEEDIE_UPPERBOUNDS,CMP,52.0,Prototype,FCmp,MODELS,2.0,,,"]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.STWEEDIE_UPPERBOUNDS,CMP,53.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.239</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_UPPERBOUNDS,CMP,54.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine STWEEDIE_UPPERBOUNDS(theta, lambda, p);"
F.MODELS.STWEEDIE_UPPERBOUNDS,CMP,55.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs theta, lambda, p;"
F.MODELS.STWEEDIE_UPPERBOUNDS,CMP,56.0,Statement Source,Executable,ASSIGN,0.0,1.0,,theta = .;
F.MODELS.STWEEDIE_UPPERBOUNDS,CMP,57.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lambda = .;
F.MODELS.STWEEDIE_UPPERBOUNDS,CMP,58.0,Statement Source,Comment,CMT,0.0,101.0,,"/* restrict p to the range where Tweedie is equivalent to a
            compound Poisson */"
F.MODELS.STWEEDIE_UPPERBOUNDS,CMP,59.0,Statement Source,Executable,ASSIGN,0.0,1.0,,p = 2;
F.MODELS.STWEEDIE_UPPERBOUNDS,CMP,60.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_LOWERBOUNDS,CMP,61.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_LOWERBOUNDS]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[lambda]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n"
F.MODELS.STWEEDIE_LOWERBOUNDS,CMP,62.0,Prototype,FCmp,MODELS,2.0,,,"]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.STWEEDIE_LOWERBOUNDS,CMP,63.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                   1790266007.24</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_LOWERBOUNDS,CMP,64.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine STWEEDIE_LOWERBOUNDS(theta, lambda, p);"
F.MODELS.STWEEDIE_LOWERBOUNDS,CMP,65.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs theta, lambda, p;"
F.MODELS.STWEEDIE_LOWERBOUNDS,CMP,66.0,Statement Source,Executable,ASSIGN,0.0,1.0,,theta = 0;
F.MODELS.STWEEDIE_LOWERBOUNDS,CMP,67.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lambda = 0;
F.MODELS.STWEEDIE_LOWERBOUNDS,CMP,68.0,Statement Source,Comment,CMT,0.0,101.0,,"/* restrict p to the range where Tweedie is equivalent to a
            compound Poisson */"
F.MODELS.STWEEDIE_LOWERBOUNDS,CMP,69.0,Statement Source,Executable,ASSIGN,0.0,1.0,,p = 1;
F.MODELS.STWEEDIE_LOWERBOUNDS,CMP,70.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_SDF,CMP,71.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_SDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[lambda]]></S><S n=""Kind""><![CDATA[v]]></S><S n="""
F.MODELS.STWEEDIE_SDF,CMP,72.0,Prototype,FCmp,MODELS,2.0,,,"Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.STWEEDIE_SDF,CMP,73.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.241</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_SDF,CMP,74.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function STWEEDIE_SDF(x, theta, lambda, p);"
F.MODELS.STWEEDIE_SDF,CMP,75.0,Statement Source,Comment,CMT,0.0,101.0,,"/* translate into equivalent Tweedie parms using the following:
            lambda = mu**(2-p)/(phi*(2-p)) --- Poisson mean
            alpha = (2-p)/(p-1)            --- gamma shape
            theta = phi * (p-1) * mu**(p-1)--- gamma scale */"
F.MODELS.STWEEDIE_SDF,CMP,76.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pm1 = p-1;
F.MODELS.STWEEDIE_SDF,CMP,77.0,Statement Source,Executable,ASSIGN,0.0,1.0,,alpha = (2-p)/pm1;
F.MODELS.STWEEDIE_SDF,CMP,78.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mu = theta * alpha * lambda;
F.MODELS.STWEEDIE_SDF,CMP,79.0,Statement Source,Executable,ASSIGN,0.0,1.0,,phi = theta /(pm1 * mu**pm1);
F.MODELS.STWEEDIE_SDF,CMP,80.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.STWEEDIE_SDF,CMP,81.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (sdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.STWEEDIE_SDF,CMP,82.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_LOGSDF,CMP,83.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_LOGSDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[lambda]]></S><S n=""Kind""><![CDATA[v]]></S><S"
F.MODELS.STWEEDIE_LOGSDF,CMP,84.0,Prototype,FCmp,MODELS,2.0,,,"n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.STWEEDIE_LOGSDF,CMP,85.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.242</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_LOGSDF,CMP,86.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function STWEEDIE_LOGSDF(x, theta, lambda, p);"
F.MODELS.STWEEDIE_LOGSDF,CMP,87.0,Statement Source,Comment,CMT,0.0,101.0,,"/* translate into equivalent Tweedie parms using the following:
            lambda = mu**(2-p)/(phi*(2-p)) --- Poisson mean
            alpha = (2-p)/(p-1)            --- gamma shape
            theta = phi * (p-1) * mu**(p-1)--- gamma scale */"
F.MODELS.STWEEDIE_LOGSDF,CMP,88.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pm1 = p-1;
F.MODELS.STWEEDIE_LOGSDF,CMP,89.0,Statement Source,Executable,ASSIGN,0.0,1.0,,alpha = (2-p)/pm1;
F.MODELS.STWEEDIE_LOGSDF,CMP,90.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mu = theta * alpha * lambda;
F.MODELS.STWEEDIE_LOGSDF,CMP,91.0,Statement Source,Executable,ASSIGN,0.0,1.0,,phi = theta /(pm1 * mu**pm1);
F.MODELS.STWEEDIE_LOGSDF,CMP,92.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.STWEEDIE_LOGSDF,CMP,93.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (logsdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.STWEEDIE_LOGSDF,CMP,94.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_CDF,CMP,95.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_CDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[lambda]]></S><S n=""Kind""><![CDATA[v]]></S><S n="""
F.MODELS.STWEEDIE_CDF,CMP,96.0,Prototype,FCmp,MODELS,2.0,,,"Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.STWEEDIE_CDF,CMP,97.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.243</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_CDF,CMP,98.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function STWEEDIE_CDF(x, theta, lambda, p);"
F.MODELS.STWEEDIE_CDF,CMP,99.0,Statement Source,Comment,CMT,0.0,101.0,,"/* translate into equivalent Tweedie parms using the following:
            lambda = mu**(2-p)/(phi*(2-p)) --- Poisson mean
            alpha = (2-p)/(p-1)            --- gamma shape
            theta = phi * (p-1) * mu**(p-1)--- gamma scale */"
F.MODELS.STWEEDIE_CDF,CMP,100.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pm1 = p-1;
F.MODELS.STWEEDIE_CDF,CMP,101.0,Statement Source,Executable,ASSIGN,0.0,1.0,,alpha = (2-p)/pm1;
F.MODELS.STWEEDIE_CDF,CMP,102.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mu = theta * alpha * lambda;
F.MODELS.STWEEDIE_CDF,CMP,103.0,Statement Source,Executable,ASSIGN,0.0,1.0,,phi = theta /(pm1 * mu**pm1);
F.MODELS.STWEEDIE_CDF,CMP,104.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.STWEEDIE_CDF,CMP,105.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (cdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.STWEEDIE_CDF,CMP,106.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_LOGCDF,CMP,107.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_LOGCDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[lambda]]></S><S n=""Kind""><![CDATA[v]]></S><S"
F.MODELS.STWEEDIE_LOGCDF,CMP,108.0,Prototype,FCmp,MODELS,2.0,,,"n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.STWEEDIE_LOGCDF,CMP,109.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.245</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_LOGCDF,CMP,110.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function STWEEDIE_LOGCDF(x, theta, lambda, p);"
F.MODELS.STWEEDIE_LOGCDF,CMP,111.0,Statement Source,Comment,CMT,0.0,101.0,,"/* translate into equivalent Tweedie parms using the following:
            lambda = mu**(2-p)/(phi*(2-p)) --- Poisson mean
            alpha = (2-p)/(p-1)            --- gamma shape
            theta = phi * (p-1) * mu**(p-1)--- gamma scale */"
F.MODELS.STWEEDIE_LOGCDF,CMP,112.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pm1 = p-1;
F.MODELS.STWEEDIE_LOGCDF,CMP,113.0,Statement Source,Executable,ASSIGN,0.0,1.0,,alpha = (2-p)/pm1;
F.MODELS.STWEEDIE_LOGCDF,CMP,114.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mu = theta * alpha * lambda;
F.MODELS.STWEEDIE_LOGCDF,CMP,115.0,Statement Source,Executable,ASSIGN,0.0,1.0,,phi = theta /(pm1 * mu**pm1);
F.MODELS.STWEEDIE_LOGCDF,CMP,116.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.STWEEDIE_LOGCDF,CMP,117.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (logcdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.STWEEDIE_LOGCDF,CMP,118.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_PDF,CMP,119.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_PDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[lambda]]></S><S n=""Kind""><![CDATA[v]]></S><S n="""
F.MODELS.STWEEDIE_PDF,CMP,120.0,Prototype,FCmp,MODELS,2.0,,,"Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.STWEEDIE_PDF,CMP,121.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.246</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_PDF,CMP,122.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function STWEEDIE_PDF(x, theta, lambda, p);"
F.MODELS.STWEEDIE_PDF,CMP,123.0,Statement Source,Comment,CMT,0.0,101.0,,"/* translate into equivalent Tweedie parms using the following:
            lambda = mu**(2-p)/(phi*(2-p)) --- Poisson mean
            alpha = (2-p)/(p-1)            --- gamma shape
            theta = phi * (p-1) * mu**(p-1)--- gamma scale */"
F.MODELS.STWEEDIE_PDF,CMP,124.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pm1 = p-1;
F.MODELS.STWEEDIE_PDF,CMP,125.0,Statement Source,Executable,ASSIGN,0.0,1.0,,alpha = (2-p)/pm1;
F.MODELS.STWEEDIE_PDF,CMP,126.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mu = theta * alpha * lambda;
F.MODELS.STWEEDIE_PDF,CMP,127.0,Statement Source,Executable,ASSIGN,0.0,1.0,,phi = theta /(pm1 * mu**pm1);
F.MODELS.STWEEDIE_PDF,CMP,128.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.STWEEDIE_PDF,CMP,129.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (pdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.STWEEDIE_PDF,CMP,130.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_LOGPDF,CMP,131.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_LOGPDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[lambda]]></S><S n=""Kind""><![CDATA[v]]></S><S"
F.MODELS.STWEEDIE_LOGPDF,CMP,132.0,Prototype,FCmp,MODELS,2.0,,,"n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.STWEEDIE_LOGPDF,CMP,133.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.247</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_LOGPDF,CMP,134.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function STWEEDIE_LOGPDF(x, theta, lambda, p);"
F.MODELS.STWEEDIE_LOGPDF,CMP,135.0,Statement Source,Comment,CMT,0.0,101.0,,"/* translate into equivalent Tweedie parms using the following:
            lambda = mu**(2-p)/(phi*(2-p)) --- Poisson mean
            alpha = (2-p)/(p-1)            --- gamma shape
            theta = phi * (p-1) * mu**(p-1)--- gamma scale */"
F.MODELS.STWEEDIE_LOGPDF,CMP,136.0,Statement Source,Executable,ASSIGN,0.0,1.0,,pm1 = p-1;
F.MODELS.STWEEDIE_LOGPDF,CMP,137.0,Statement Source,Executable,ASSIGN,0.0,1.0,,alpha = (2-p)/pm1;
F.MODELS.STWEEDIE_LOGPDF,CMP,138.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mu = theta * alpha * lambda;
F.MODELS.STWEEDIE_LOGPDF,CMP,139.0,Statement Source,Executable,ASSIGN,0.0,1.0,,phi = theta /(pm1 * mu**pm1);
F.MODELS.STWEEDIE_LOGPDF,CMP,140.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.STWEEDIE_LOGPDF,CMP,141.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (logpdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.STWEEDIE_LOGPDF,CMP,142.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_PARMCOUNT,CMP,143.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_PARMCOUNT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.STWEEDIE_PARMCOUNT,CMP,144.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.247</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_PARMCOUNT,CMP,145.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function STWEEDIE_PARMCOUNT();
F.MODELS.STWEEDIE_PARMCOUNT,CMP,146.0,Statement Source,Executable,RETURN,0.0,1.0,,return (3);
F.MODELS.STWEEDIE_PARMCOUNT,CMP,147.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_DESCRIPTION,CMP,148.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[STWEEDIE_DESCRIPTION]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">48</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.STWEEDIE_DESCRIPTION,CMP,149.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.249</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:47]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.STWEEDIE_DESCRIPTION,CMP,150.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function STWEEDIE_DESCRIPTION() $48;
F.MODELS.STWEEDIE_DESCRIPTION,CMP,151.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (""Tweedie Distribution with Scale Parameter"");"
F.MODELS.STWEEDIE_DESCRIPTION,CMP,152.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.STWEEDIE_DESCRIPTION,CMP,153.0,Symbol,,_STWEEDIE_DESCRIPTION_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_STWEEDIE_DESCRIPTION_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">48</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.TWEEDIE_MEAN,CMP,0.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_MEAN]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[P]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><!"
F.MODELS.TWEEDIE_MEAN,CMP,1.0,Prototype,FCmp,MODELS,2.0,,,"[CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Phi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.TWEEDIE_MEAN,CMP,2.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.822</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_MEAN,CMP,3.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function TWEEDIE_MEAN(x, P, Mu, Phi);"
F.MODELS.TWEEDIE_MEAN,CMP,4.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Mu);
F.MODELS.TWEEDIE_MEAN,CMP,5.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_QUANTILE,CMP,6.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_QUANTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[prob]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""T"
F.MODELS.TWEEDIE_QUANTILE,CMP,7.0,Prototype,FCmp,MODELS,2.0,,,"ype""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[phi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.TWEEDIE_QUANTILE,CMP,8.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.823</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_QUANTILE,CMP,9.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function TWEEDIE_QUANTILE(prob, p, mu, phi);"
F.MODELS.TWEEDIE_QUANTILE,CMP,10.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (quantile('TWEEDIE', prob, p, mu, phi));"
F.MODELS.TWEEDIE_QUANTILE,CMP,11.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_PARMINIT,CMP,12.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_PARMINIT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N"
F.MODELS.TWEEDIE_PARMINIT,CMP,13.0,Prototype,FCmp,MODELS,1.0,,,"n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDA"
F.MODELS.TWEEDIE_PARMINIT,CMP,14.0,Prototype,FCmp,MODELS,1.0,,,"TA[Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[phi]]><"
F.MODELS.TWEEDIE_PARMINIT,CMP,15.0,Prototype,FCmp,MODELS,2.0,,,"/S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.TWEEDIE_PARMINIT,CMP,16.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.823</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_PARMINIT,CMP,17.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine TWEEDIE_PARMINIT(dim, x[*], nx[*], F[*], Ftype, p, mu, phi);"
F.MODELS.TWEEDIE_PARMINIT,CMP,18.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs p, mu, phi;"
F.MODELS.TWEEDIE_PARMINIT,CMP,19.0,Statement Source,Declarative,ARRAY,0.0,102.0,,array m[2] / nosymbols;
F.MODELS.TWEEDIE_PARMINIT,CMP,20.0,Statement Source,Comment,CMT,0.0,101.0,,/* initialize p */
F.MODELS.TWEEDIE_PARMINIT,CMP,21.0,Statement Source,Executable,ASSIGN,0.0,1.0,,gscale = .;
F.MODELS.TWEEDIE_PARMINIT,CMP,22.0,Statement Source,Executable,ASSIGN,0.0,1.0,,gshape = .;
F.MODELS.TWEEDIE_PARMINIT,CMP,23.0,Statement Source,Executable,CALL,0.0,4.0,,"call gamma_parminit(dim, x, nx, F, Ftype, gscale, gshape);"
F.MODELS.TWEEDIE_PARMINIT,CMP,24.0,Statement Source,Executable,IF,0.0,2.0,,if (not(missing(gshape))) then
F.MODELS.TWEEDIE_PARMINIT,CMP,25.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.TWEEDIE_PARMINIT,CMP,26.0,Statement Source,Comment,CMT,0.0,101.0,,/* use approximation in 1<p<2 range of gshape = (2-p)/(p-1) */
F.MODELS.TWEEDIE_PARMINIT,CMP,27.0,Statement Source,Executable,ASSIGN,0.0,1.0,,p = (gshape+2)/(gshape+1);
F.MODELS.TWEEDIE_PARMINIT,CMP,28.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.TWEEDIE_PARMINIT,CMP,29.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.TWEEDIE_PARMINIT,CMP,30.0,Statement Source,Executable,ASSIGN,0.0,1.0,,p = 1.5;
F.MODELS.TWEEDIE_PARMINIT,CMP,31.0,Statement Source,Comment,CMT,0.0,101.0,,/* initialize mu and phi */
F.MODELS.TWEEDIE_PARMINIT,CMP,32.0,Statement Source,Executable,CALL,0.0,4.0,,"call svrtutil_rawmoments(dim, x, nx, 2, m);"
F.MODELS.TWEEDIE_PARMINIT,CMP,33.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mu = m[1];
F.MODELS.TWEEDIE_PARMINIT,CMP,34.0,Statement Source,Comment,CMT,0.0,101.0,,/* sample mean */
F.MODELS.TWEEDIE_PARMINIT,CMP,35.0,Statement Source,Executable,ASSIGN,0.0,1.0,,v = m[2] - m[1]*m[1];
F.MODELS.TWEEDIE_PARMINIT,CMP,36.0,Statement Source,Comment,CMT,0.0,101.0,,/* sample variance */
F.MODELS.TWEEDIE_PARMINIT,CMP,37.0,Statement Source,Executable,ASSIGN,0.0,1.0,,phi = v/(mu**p);
F.MODELS.TWEEDIE_PARMINIT,CMP,38.0,Statement Source,Comment,CMT,0.0,101.0,,/* use variance = phi*mu**p property of Tweedie */
F.MODELS.TWEEDIE_PARMINIT,CMP,39.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_LOWERBOUNDS,CMP,40.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_LOWERBOUNDS]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[phi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S>"
F.MODELS.TWEEDIE_LOWERBOUNDS,CMP,41.0,Prototype,FCmp,MODELS,2.0,,,"<S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.TWEEDIE_LOWERBOUNDS,CMP,42.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.825</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_LOWERBOUNDS,CMP,43.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine TWEEDIE_LOWERBOUNDS(p, mu, phi);"
F.MODELS.TWEEDIE_LOWERBOUNDS,CMP,44.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs p, mu, phi;"
F.MODELS.TWEEDIE_LOWERBOUNDS,CMP,45.0,Statement Source,Comment,CMT,0.0,101.0,,"/* Tweedie is undefined for 0 < p < 1 and is not much useful for p < 0;
            hence set lower limit to 1 */"
F.MODELS.TWEEDIE_LOWERBOUNDS,CMP,46.0,Statement Source,Executable,ASSIGN,0.0,1.0,,p = 1;
F.MODELS.TWEEDIE_LOWERBOUNDS,CMP,47.0,Statement Source,Executable,ASSIGN,0.0,1.0,,mu = 0;
F.MODELS.TWEEDIE_LOWERBOUNDS,CMP,48.0,Statement Source,Executable,ASSIGN,0.0,1.0,,phi = 0;
F.MODELS.TWEEDIE_LOWERBOUNDS,CMP,49.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_SDF,CMP,50.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_SDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><!["
F.MODELS.TWEEDIE_SDF,CMP,51.0,Prototype,FCmp,MODELS,2.0,,,"CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[phi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.TWEEDIE_SDF,CMP,52.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.825</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_SDF,CMP,53.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function TWEEDIE_SDF(x, p, mu, phi);"
F.MODELS.TWEEDIE_SDF,CMP,54.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.TWEEDIE_SDF,CMP,55.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (sdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.TWEEDIE_SDF,CMP,56.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_LOGSDF,CMP,57.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_LOGSDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"">"
F.MODELS.TWEEDIE_LOGSDF,CMP,58.0,Prototype,FCmp,MODELS,2.0,,,"<![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[phi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.TWEEDIE_LOGSDF,CMP,59.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.826</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_LOGSDF,CMP,60.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function TWEEDIE_LOGSDF(x, p, mu, phi);"
F.MODELS.TWEEDIE_LOGSDF,CMP,61.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.TWEEDIE_LOGSDF,CMP,62.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (logsdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.TWEEDIE_LOGSDF,CMP,63.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_CDF,CMP,64.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_CDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><!["
F.MODELS.TWEEDIE_CDF,CMP,65.0,Prototype,FCmp,MODELS,2.0,,,"CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[phi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.TWEEDIE_CDF,CMP,66.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.827</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_CDF,CMP,67.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function TWEEDIE_CDF(x, p, mu, phi);"
F.MODELS.TWEEDIE_CDF,CMP,68.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.TWEEDIE_CDF,CMP,69.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (cdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.TWEEDIE_CDF,CMP,70.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_LOGCDF,CMP,71.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_LOGCDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"">"
F.MODELS.TWEEDIE_LOGCDF,CMP,72.0,Prototype,FCmp,MODELS,2.0,,,"<![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[phi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.TWEEDIE_LOGCDF,CMP,73.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.828</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_LOGCDF,CMP,74.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function TWEEDIE_LOGCDF(x, p, mu, phi);"
F.MODELS.TWEEDIE_LOGCDF,CMP,75.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.TWEEDIE_LOGCDF,CMP,76.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (logcdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.TWEEDIE_LOGCDF,CMP,77.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_PDF,CMP,78.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_PDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><!["
F.MODELS.TWEEDIE_PDF,CMP,79.0,Prototype,FCmp,MODELS,2.0,,,"CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[phi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.TWEEDIE_PDF,CMP,80.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.829</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_PDF,CMP,81.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function TWEEDIE_PDF(x, p, mu, phi);"
F.MODELS.TWEEDIE_PDF,CMP,82.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.TWEEDIE_PDF,CMP,83.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (pdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.TWEEDIE_PDF,CMP,84.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_LOGPDF,CMP,85.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_LOGPDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[mu]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type"">"
F.MODELS.TWEEDIE_LOGPDF,CMP,86.0,Prototype,FCmp,MODELS,2.0,,,"<![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[phi]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.TWEEDIE_LOGPDF,CMP,87.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.831</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_LOGPDF,CMP,88.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function TWEEDIE_LOGPDF(x, p, mu, phi);"
F.MODELS.TWEEDIE_LOGPDF,CMP,89.0,Statement Source,Executable,ASSIGN,0.0,1.0,,_delta_ = 1.0e-3;
F.MODELS.TWEEDIE_LOGPDF,CMP,90.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (logpdf('TWEEDIE', x, p, mu, phi));"
F.MODELS.TWEEDIE_LOGPDF,CMP,91.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_PARMCOUNT,CMP,92.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_PARMCOUNT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.TWEEDIE_PARMCOUNT,CMP,93.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.831</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_PARMCOUNT,CMP,94.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function TWEEDIE_PARMCOUNT();
F.MODELS.TWEEDIE_PARMCOUNT,CMP,95.0,Statement Source,Executable,RETURN,0.0,1.0,,return (3);
F.MODELS.TWEEDIE_PARMCOUNT,CMP,96.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_DESCRIPTION,CMP,97.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[TWEEDIE_DESCRIPTION]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">48</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.TWEEDIE_DESCRIPTION,CMP,98.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266007.832</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.TWEEDIE_DESCRIPTION,CMP,99.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function TWEEDIE_DESCRIPTION() $48;
F.MODELS.TWEEDIE_DESCRIPTION,CMP,100.0,Statement Source,Executable,RETURN,0.0,1.0,,"return (""Tweedie Distribution with Mean Parameter"");"
F.MODELS.TWEEDIE_DESCRIPTION,CMP,101.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.TWEEDIE_DESCRIPTION,CMP,102.0,Symbol,,_TWEEDIE_DESCRIPTION_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_TWEEDIE_DESCRIPTION_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">48</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
MODELS,CMP,0.0,Header,Package,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.417</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Package]]></S><N n=""Obfuscate"">0</N></L>"
F.MODELS.WEIBULL_MEAN,CMP,0.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_MEAN]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Tau]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Typ"
F.MODELS.WEIBULL_MEAN,CMP,1.0,Prototype,FCmp,MODELS,2.0,,,"e""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.WEIBULL_MEAN,CMP,2.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.443</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_MEAN,CMP,3.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function WEIBULL_MEAN(x, Theta, Tau);"
F.MODELS.WEIBULL_MEAN,CMP,4.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Theta*gamma(1 + 1/Tau));
F.MODELS.WEIBULL_MEAN,CMP,5.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_QUANTILE,CMP,6.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_QUANTILE]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[p]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Tau]]></S><S n=""Kind""><![CDATA[v]]></S><S n"
F.MODELS.WEIBULL_QUANTILE,CMP,7.0,Prototype,FCmp,MODELS,2.0,,,"=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.WEIBULL_QUANTILE,CMP,8.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.444</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_QUANTILE,CMP,9.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function WEIBULL_QUANTILE(p, Theta, Tau);"
F.MODELS.WEIBULL_QUANTILE,CMP,10.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.WEIBULL_QUANTILE,CMP,11.0,Statement Source,Comment,CMT,0.0,101.0,,/* Tau   : Shape */
F.MODELS.WEIBULL_QUANTILE,CMP,12.0,Statement Source,Executable,IF,0.0,2.0,,if (p >= 1-2.220446E-16) then
F.MODELS.WEIBULL_QUANTILE,CMP,13.0,Statement Source,Executable,RETURN,0.0,1.0,,/* constant('MACEPS') */ return (.);
F.MODELS.WEIBULL_QUANTILE,CMP,14.0,Statement Source,Executable,RETURN,0.0,1.0,,return (Theta*(-log1px(-p))**(1/Tau));
F.MODELS.WEIBULL_QUANTILE,CMP,15.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_PARMINIT,CMP,16.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_PARMINIT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">32</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[v]]></S><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[dim]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N"
F.MODELS.WEIBULL_PARMINIT,CMP,17.0,Prototype,FCmp,MODELS,1.0,,,"n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[nx]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDATA[F]]></S><S n=""Kind""><![CDATA[m]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[a]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">224</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N><L n=""ArraySpec""><S n=""Type""><![CDATA[n]]></S><N n=""Length"">0</N><N n=""NDim"">1</N><N n=""DimProd"">1</N><N n=""Dim1"">0</N><N n=""Dim2"">0</N></L></L><L n=""Arg""><S n=""Name""><![CDA"
F.MODELS.WEIBULL_PARMINIT,CMP,18.0,Prototype,FCmp,MODELS,2.0,,,"TA[Ftype]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">0</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L><L n=""Arg""><S n=""Name""><![CDATA[Tau]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">128</N><N n=""Flag2"">0</N><N n=""Flag3"">8</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L></L></L>"
F.MODELS.WEIBULL_PARMINIT,CMP,19.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.447</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_PARMINIT,CMP,20.0,Statement Source,Executable,SUBROUTI,0.0,65.0,,"subroutine WEIBULL_PARMINIT(dim, x[*], nx[*], F[*], Ftype, Theta, Tau);"
F.MODELS.WEIBULL_PARMINIT,CMP,21.0,Statement Source,Executable,OUTARGS,0.0,14.0,,"outargs Theta, Tau;"
F.MODELS.WEIBULL_PARMINIT,CMP,22.0,Statement Source,Comment,CMT,0.0,101.0,,/* Compute estimates using percentile matching method */
F.MODELS.WEIBULL_PARMINIT,CMP,23.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"q1 = svrtutil_percentile(0.25, dim, x, F, Ftype);"
F.MODELS.WEIBULL_PARMINIT,CMP,24.0,Statement Source,Comment,CMT,0.0,101.0,,/* First quartile */
F.MODELS.WEIBULL_PARMINIT,CMP,25.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"q3 = svrtutil_percentile(0.75, dim, x, F, Ftype);"
F.MODELS.WEIBULL_PARMINIT,CMP,26.0,Statement Source,Comment,CMT,0.0,101.0,,/* Third quartile */
F.MODELS.WEIBULL_PARMINIT,CMP,27.0,Statement Source,Executable,IF,0.0,2.0,,if (missing(q1) or missing(q3)) then
F.MODELS.WEIBULL_PARMINIT,CMP,28.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.WEIBULL_PARMINIT,CMP,29.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = .;
F.MODELS.WEIBULL_PARMINIT,CMP,30.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Tau = .;
F.MODELS.WEIBULL_PARMINIT,CMP,31.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.WEIBULL_PARMINIT,CMP,32.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.WEIBULL_PARMINIT,CMP,33.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.WEIBULL_PARMINIT,CMP,34.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ll4 = log(log(4));
F.MODELS.WEIBULL_PARMINIT,CMP,35.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lq3 = log(q3);
F.MODELS.WEIBULL_PARMINIT,CMP,36.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lratio = ll4/log(log(4/3));
F.MODELS.WEIBULL_PARMINIT,CMP,37.0,Statement Source,Executable,ASSIGN,0.0,1.0,,ltheta = (lratio*log(q1) - lq3)/(lratio-1);
F.MODELS.WEIBULL_PARMINIT,CMP,38.0,Statement Source,Executable,IF,0.0,2.0,,if (ltheta < 174.673089) then
F.MODELS.WEIBULL_PARMINIT,CMP,39.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.WEIBULL_PARMINIT,CMP,40.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGBIG') */
F.MODELS.WEIBULL_PARMINIT,CMP,41.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = exp(ltheta);
F.MODELS.WEIBULL_PARMINIT,CMP,42.0,Statement Source,Executable,ASSIGN,0.0,1.0,,lq3 = lq3 - ltheta;
F.MODELS.WEIBULL_PARMINIT,CMP,43.0,Statement Source,Executable,IF,0.0,2.0,,if (lq3 > 2.220446E-16) then
F.MODELS.WEIBULL_PARMINIT,CMP,44.0,Statement Source,Executable,ASSIGN,0.0,1.0,,/* constant('MACEPS') */ Tau = ll4/lq3;
F.MODELS.WEIBULL_PARMINIT,CMP,45.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.WEIBULL_PARMINIT,CMP,46.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Tau = .;
F.MODELS.WEIBULL_PARMINIT,CMP,47.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.WEIBULL_PARMINIT,CMP,48.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.WEIBULL_PARMINIT,CMP,49.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.WEIBULL_PARMINIT,CMP,50.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Theta = .;
F.MODELS.WEIBULL_PARMINIT,CMP,51.0,Statement Source,Executable,ASSIGN,0.0,1.0,,Tau = .;
F.MODELS.WEIBULL_PARMINIT,CMP,52.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.WEIBULL_PARMINIT,CMP,53.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.WEIBULL_PARMINIT,CMP,54.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_SDF,CMP,55.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_SDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Tau]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Typ"
F.MODELS.WEIBULL_SDF,CMP,56.0,Prototype,FCmp,MODELS,2.0,,,"e""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.WEIBULL_SDF,CMP,57.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.449</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_SDF,CMP,58.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function WEIBULL_SDF(x, Theta, Tau);"
F.MODELS.WEIBULL_SDF,CMP,59.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.WEIBULL_SDF,CMP,60.0,Statement Source,Comment,CMT,0.0,101.0,,/* Tau   : Shape */
F.MODELS.WEIBULL_SDF,CMP,61.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.WEIBULL_SDF,CMP,62.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.WEIBULL_SDF,CMP,63.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.WEIBULL_SDF,CMP,64.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = (x/Theta)**Tau;
F.MODELS.WEIBULL_SDF,CMP,65.0,Statement Source,Executable,RETURN,0.0,1.0,,return (exp(-z));
F.MODELS.WEIBULL_SDF,CMP,66.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.WEIBULL_SDF,CMP,67.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.WEIBULL_SDF,CMP,68.0,Statement Source,Executable,RETURN,0.0,1.0,,return (1);
F.MODELS.WEIBULL_SDF,CMP,69.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_LOGSDF,CMP,70.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_LOGSDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Tau]]></S><S n=""Kind""><![CDATA[v]]></S><S n="""
F.MODELS.WEIBULL_LOGSDF,CMP,71.0,Prototype,FCmp,MODELS,2.0,,,"Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.WEIBULL_LOGSDF,CMP,72.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                   1790266008.45</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_LOGSDF,CMP,73.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function WEIBULL_LOGSDF(x, Theta, Tau);"
F.MODELS.WEIBULL_LOGSDF,CMP,74.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.WEIBULL_LOGSDF,CMP,75.0,Statement Source,Comment,CMT,0.0,101.0,,/* Tau   : Shape */
F.MODELS.WEIBULL_LOGSDF,CMP,76.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.WEIBULL_LOGSDF,CMP,77.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.WEIBULL_LOGSDF,CMP,78.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.WEIBULL_LOGSDF,CMP,79.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = (x/Theta)**Tau;
F.MODELS.WEIBULL_LOGSDF,CMP,80.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-z);
F.MODELS.WEIBULL_LOGSDF,CMP,81.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.WEIBULL_LOGSDF,CMP,82.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.WEIBULL_LOGSDF,CMP,83.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.WEIBULL_LOGSDF,CMP,84.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_CDF,CMP,85.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_CDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Tau]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Typ"
F.MODELS.WEIBULL_CDF,CMP,86.0,Prototype,FCmp,MODELS,2.0,,,"e""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.WEIBULL_CDF,CMP,87.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.451</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_CDF,CMP,88.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function WEIBULL_CDF(x, Theta, Tau);"
F.MODELS.WEIBULL_CDF,CMP,89.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.WEIBULL_CDF,CMP,90.0,Statement Source,Comment,CMT,0.0,101.0,,/* Tau   : Shape */
F.MODELS.WEIBULL_CDF,CMP,91.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.WEIBULL_CDF,CMP,92.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.WEIBULL_CDF,CMP,93.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.WEIBULL_CDF,CMP,94.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = (x/Theta)**Tau;
F.MODELS.WEIBULL_CDF,CMP,95.0,Statement Source,Executable,RETURN,0.0,1.0,,return (1 - exp(-z));
F.MODELS.WEIBULL_CDF,CMP,96.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.WEIBULL_CDF,CMP,97.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.WEIBULL_CDF,CMP,98.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.WEIBULL_CDF,CMP,99.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_LOGCDF,CMP,100.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_LOGCDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Tau]]></S><S n=""Kind""><![CDATA[v]]></S><S n="""
F.MODELS.WEIBULL_LOGCDF,CMP,101.0,Prototype,FCmp,MODELS,2.0,,,"Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.WEIBULL_LOGCDF,CMP,102.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.452</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_LOGCDF,CMP,103.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function WEIBULL_LOGCDF(x, Theta, Tau);"
F.MODELS.WEIBULL_LOGCDF,CMP,104.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.WEIBULL_LOGCDF,CMP,105.0,Statement Source,Comment,CMT,0.0,101.0,,/* Tau   : Shape */
F.MODELS.WEIBULL_LOGCDF,CMP,106.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.WEIBULL_LOGCDF,CMP,107.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.WEIBULL_LOGCDF,CMP,108.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.WEIBULL_LOGCDF,CMP,109.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = (x/Theta)**Tau;
F.MODELS.WEIBULL_LOGCDF,CMP,110.0,Statement Source,Executable,ASSIGN,0.0,1.0,,c = exp(-z);
F.MODELS.WEIBULL_LOGCDF,CMP,111.0,Statement Source,Executable,IF,0.0,2.0,,if (c < 1) then
F.MODELS.WEIBULL_LOGCDF,CMP,112.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log1px(-c));
F.MODELS.WEIBULL_LOGCDF,CMP,113.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.WEIBULL_LOGCDF,CMP,114.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.WEIBULL_LOGCDF,CMP,115.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.WEIBULL_LOGCDF,CMP,116.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.WEIBULL_LOGCDF,CMP,117.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.WEIBULL_LOGCDF,CMP,118.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.WEIBULL_LOGCDF,CMP,119.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.WEIBULL_LOGCDF,CMP,120.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_PDF,CMP,121.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_PDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Tau]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Typ"
F.MODELS.WEIBULL_PDF,CMP,122.0,Prototype,FCmp,MODELS,2.0,,,"e""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.WEIBULL_PDF,CMP,123.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.453</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_PDF,CMP,124.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function WEIBULL_PDF(x, Theta, Tau);"
F.MODELS.WEIBULL_PDF,CMP,125.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.WEIBULL_PDF,CMP,126.0,Statement Source,Comment,CMT,0.0,101.0,,/* Tau   : Shape */
F.MODELS.WEIBULL_PDF,CMP,127.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.WEIBULL_PDF,CMP,128.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.WEIBULL_PDF,CMP,129.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.WEIBULL_PDF,CMP,130.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = (x/Theta)**Tau;
F.MODELS.WEIBULL_PDF,CMP,131.0,Statement Source,Executable,RETURN,0.0,1.0,,return ((Tau / x) * z * exp(-z));
F.MODELS.WEIBULL_PDF,CMP,132.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.WEIBULL_PDF,CMP,133.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.WEIBULL_PDF,CMP,134.0,Statement Source,Executable,RETURN,0.0,1.0,,return (0);
F.MODELS.WEIBULL_PDF,CMP,135.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_LOGPDF,CMP,136.0,Prototype,FCmp,MODELS,1.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_LOGPDF]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""><L n=""Arg""><S n=""Name""><![CDATA[x]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">64</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Theta]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L><L n=""Arg""><S n=""Name""><![CDATA[Tau]]></S><S n=""Kind""><![CDATA[v]]></S><S n="""
F.MODELS.WEIBULL_LOGPDF,CMP,137.0,Prototype,FCmp,MODELS,2.0,,,"Type""><![CDATA[n]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">8</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">32</N></L></L></L>"
F.MODELS.WEIBULL_LOGPDF,CMP,138.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.454</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_LOGPDF,CMP,139.0,Statement Source,Executable,FUNCTION,0.0,65.0,,"function WEIBULL_LOGPDF(x, Theta, Tau);"
F.MODELS.WEIBULL_LOGPDF,CMP,140.0,Statement Source,Comment,CMT,0.0,101.0,,/* Theta : Scale */
F.MODELS.WEIBULL_LOGPDF,CMP,141.0,Statement Source,Comment,CMT,0.0,101.0,,/* Tau   : Shape */
F.MODELS.WEIBULL_LOGPDF,CMP,142.0,Statement Source,Executable,IF,0.0,2.0,,if (x >= 2.220446E-16) then
F.MODELS.WEIBULL_LOGPDF,CMP,143.0,Statement Source,Executable,DO,0.0,3.0,,do;
F.MODELS.WEIBULL_LOGPDF,CMP,144.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('MACEPS') */
F.MODELS.WEIBULL_LOGPDF,CMP,145.0,Statement Source,Executable,ASSIGN,0.0,1.0,,z = (x/Theta)**Tau;
F.MODELS.WEIBULL_LOGPDF,CMP,146.0,Statement Source,Executable,RETURN,0.0,1.0,,return (log(Tau * z / x) - z);
F.MODELS.WEIBULL_LOGPDF,CMP,147.0,Statement Source,Executable,END,0.0,10.0,,end;
F.MODELS.WEIBULL_LOGPDF,CMP,148.0,Statement Source,Executable,ELSE,0.0,9.0,,else
F.MODELS.WEIBULL_LOGPDF,CMP,149.0,Statement Source,Executable,RETURN,0.0,1.0,,return (-180.218266);
F.MODELS.WEIBULL_LOGPDF,CMP,150.0,Statement Source,Comment,CMT,0.0,101.0,,/* constant('LOGSMALL') */
F.MODELS.WEIBULL_LOGPDF,CMP,151.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_PARMCOUNT,CMP,152.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_PARMCOUNT]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[n]]></S><N n=""ReturnSize"">8</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.WEIBULL_PARMCOUNT,CMP,153.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.454</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_PARMCOUNT,CMP,154.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function WEIBULL_PARMCOUNT();
F.MODELS.WEIBULL_PARMCOUNT,CMP,155.0,Statement Source,Executable,RETURN,0.0,1.0,,return(2);
F.MODELS.WEIBULL_PARMCOUNT,CMP,156.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_DESCRIPTION,CMP,157.0,Prototype,FCmp,MODELS,0.0,,,"<L n=""Prototype""><S n=""Name""><![CDATA[WEIBULL_DESCRIPTION]]></S><S n=""Group""><![CDATA[]]></S><N n=""MaxLag"">0</N><N n=""Flag0"">0</N><N n=""Flag1"">128</N><S n=""ReturnType""><![CDATA[c]]></S><N n=""ReturnSize"">32</N><S n=""Libraries""><![CDATA[ sashelp.svrtdist]]></S><L n=""ArgList""></L></L>"
F.MODELS.WEIBULL_DESCRIPTION,CMP,158.0,Header,Function,,0.0,,,"<L n=""Header""><S n=""Version""><![CDATA[1.1]]></S><N n=""Datetime"">                  1790266008.455</N><S n=""DatetimeStr""><![CDATA[23SEP16:16:06:48]]></S><S n=""SubType""><![CDATA[Function]]></S><N n=""Obfuscate"">0</N><S n=""Package""><![CDATA[MODELS]]></S></L>"
F.MODELS.WEIBULL_DESCRIPTION,CMP,159.0,Statement Source,Executable,FUNCTION,0.0,65.0,,function WEIBULL_DESCRIPTION() $32;
F.MODELS.WEIBULL_DESCRIPTION,CMP,160.0,Statement Source,Declarative,LENGTH,0.0,102.0,,length model $32;
F.MODELS.WEIBULL_DESCRIPTION,CMP,161.0,Statement Source,Executable,ASSIGN,0.0,1.0,,"model = ""Weibull Distribution"";"
F.MODELS.WEIBULL_DESCRIPTION,CMP,162.0,Statement Source,Executable,RETURN,0.0,1.0,,return(model);
F.MODELS.WEIBULL_DESCRIPTION,CMP,163.0,Statement Source,Executable,ENDSUB,0.0,14.0,,endsub;
F.MODELS.WEIBULL_DESCRIPTION,CMP,164.0,Symbol,,_WEIBULL_DESCRIPTION_,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[_WEIBULL_DESCRIPTION_]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">160</N><N n=""Flag2"">0</N><N n=""Flag3"">32</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
F.MODELS.WEIBULL_DESCRIPTION,CMP,165.0,Symbol,,model,0.0,,,"<L n=""Symbol""><S n=""Name""><![CDATA[model]]></S><S n=""Kind""><![CDATA[v]]></S><S n=""Type""><![CDATA[c]]></S><S n=""Class""><![CDATA[n]]></S><N n=""Status"">0</N><N n=""Status2"">0</N><N n=""NInit"">0</N><N n=""MaxLag"">0</N><N n=""Size"">32</N><N n=""Flag1"">192</N><N n=""Flag2"">0</N><N n=""Flag3"">0</N><N n=""Flag4"">0</N><N n=""Flag5"">64</N><N n=""Flag6"">0</N></L>"
